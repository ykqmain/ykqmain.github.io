[{"title":"博客重启暨2021年词云图","url":"https://blog.ykqmain.com/2021wc/","content":"<blockquote>\n<p>只是在我心中还有一方净土，即使在别人眼里寸草不生，却始终一尘不染。</p>\n</blockquote>\n<p><strong>The Blog is Online, again.</strong></p>\n<p><a href=\"https://blog.ykqmain.com/\">https://blog.ykqmain.com</a></p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/2021wc/Blog.png\"></p>\n<hr>\n<br>\n\n<p>思虑再三，决定重启博客，并升级了<code>Hexo</code>，果然生成速度快了很多，也清理了冗余数据，逐渐整理文章，重新出发，在这一方网络天地。</p>\n<p>博客再次上线之后，自然是常规的动作，年终总结。</p>\n<p>今年发现一个不一样的玩具<code>wordcloud</code>，那就来折腾一番，对2021年34篇长短不一样的随想进行词频分析，一篇少则一段话二三十字，最多的一篇公园随想有三千多字，主题就是游戏和人生。</p>\n<p>文件夹结构如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── cy.py</span><br><span class=\"line\">├── re</span><br><span class=\"line\">│ ├── 1.jpg</span><br><span class=\"line\">│ └── baidu_stopwords.txt</span><br><span class=\"line\">└── txt</span><br><span class=\"line\"></span><br><span class=\"line\">2 directories, 3 files</span><br></pre></td></tr></table></figure>\n\n<p>代码如下，注释完备：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">环境需求：</span></span><br><span class=\"line\"><span class=\"string\">Python 3.6+</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">安装依赖：</span></span><br><span class=\"line\"><span class=\"string\">pip3 install jieba wordcloud matplotlib Pillow</span></span><br><span class=\"line\"><span class=\"string\">可选依赖</span></span><br><span class=\"line\"><span class=\"string\">pip3 install python-docx scikit-learn</span></span><br><span class=\"line\"><span class=\"string\">如有网络问题先设置镜像，</span></span><br><span class=\"line\"><span class=\"string\">pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">使用方法：</span></span><br><span class=\"line\"><span class=\"string\">打开终端，输入&quot;python FileName.py&quot;回车</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">命名习惯：</span></span><br><span class=\"line\"><span class=\"string\">变量、形参：下划线</span></span><br><span class=\"line\"><span class=\"string\">常量：全大写字母</span></span><br><span class=\"line\"><span class=\"string\">函数、方法：小驼峰</span></span><br><span class=\"line\"><span class=\"string\">类名：大驼峰</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Creation Date: 2022-01-18</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入必须库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os  <span class=\"comment\"># 系统库</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> jieba  <span class=\"comment\"># 结巴库对中文分词</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> wordcloud <span class=\"keyword\">import</span> WordCloud  <span class=\"comment\"># wordcloud库生成词云图</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> matplotlib.pyplot <span class=\"keyword\">as</span> plt  <span class=\"comment\"># matplotlib库用来画图</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image  <span class=\"comment\"># Pillow库处理图片</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np  <span class=\"comment\"># 科学计算库，matplotlib的依赖，安装matplotlib时会自动安装numpy</span></span><br><span class=\"line\"><span class=\"comment\"># 可选功能</span></span><br><span class=\"line\"><span class=\"comment\"># from docx import Document  # python-docx库处理docx文件</span></span><br><span class=\"line\"><span class=\"comment\"># from sklearn.feature_extraction.text import CountVectorizer  # scikit-learn机器学习库统计词频</span></span><br><span class=\"line\"><span class=\"comment\"># import csv</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fileName</span>(<span class=\"params\">file_dir</span>):</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;遍历文件夹，返回指定后缀的文件名列表&#x27;</span></span><br><span class=\"line\">    L = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> root, dirs, files <span class=\"keyword\">in</span> os.walk(file_dir):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> file <span class=\"keyword\">in</span> files:</span><br><span class=\"line\">            <span class=\"comment\"># if os.path.splitext(file)[1] == &quot;.docx&quot;:  # 筛选.docx文件</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> os.path.splitext(file)[<span class=\"number\">1</span>] == <span class=\"string\">&quot;.txt&quot;</span>:  <span class=\"comment\"># 筛选.txt文件</span></span><br><span class=\"line\">                L.append(os.path.join(root, file))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27; 备用方式，从docx读取数据</span></span><br><span class=\"line\"><span class=\"string\">def readDoc(docx_name):</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;借助python-docx库读取.docx文档，不支持.doc后缀&#x27;</span></span><br><span class=\"line\"><span class=\"string\">    document = Document(docx_name)  # 打开word文档</span></span><br><span class=\"line\"><span class=\"string\">    # 获取所有段落</span></span><br><span class=\"line\"><span class=\"string\">    all_paragraphs = document.paragraphs</span></span><br><span class=\"line\"><span class=\"string\">    # 打印看all_paragraphs类型</span></span><br><span class=\"line\"><span class=\"string\">    print(type(all_paragraphs))  # &lt;class &#x27;list&#x27;&gt;，打印后发现是列表</span></span><br><span class=\"line\"><span class=\"string\">    # 是列表就开始循环读取</span></span><br><span class=\"line\"><span class=\"string\">    L = []</span></span><br><span class=\"line\"><span class=\"string\">    for paragraph in all_paragraphs:</span></span><br><span class=\"line\"><span class=\"string\">        # 打印每一个段落的文字</span></span><br><span class=\"line\"><span class=\"string\">        # print(paragraph.text)</span></span><br><span class=\"line\"><span class=\"string\">        L.append(paragraph.text)</span></span><br><span class=\"line\"><span class=\"string\">        # 循环读取每个段落里的run内容</span></span><br><span class=\"line\"><span class=\"string\">        # for run in paragraph.runs:</span></span><br><span class=\"line\"><span class=\"string\">            # print(run.text)  # 打印run内容</span></span><br><span class=\"line\"><span class=\"string\">    return L</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">file_list = fileName(<span class=\"string\">r&#x27;./txt/&#x27;</span>)  <span class=\"comment\"># 获取文档文件夹下所有文件名</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(file_list, <span class=\"built_in\">len</span>(file_list))  <span class=\"comment\"># 文档列表，文档数量</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27; 备用方式，处理docx文档</span></span><br><span class=\"line\"><span class=\"string\">tempText = []</span></span><br><span class=\"line\"><span class=\"string\">for x in range(len(file_list)):</span></span><br><span class=\"line\"><span class=\"string\">    docx = &#x27; &#x27;.join(readDoc(file_list[x]))</span></span><br><span class=\"line\"><span class=\"string\">    tempText.append(docx)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 导入文本数据并进行简单的文本处理</span></span><br><span class=\"line\">tempText = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">len</span>(file_list)):</span><br><span class=\"line\">    txt = <span class=\"built_in\">open</span>(file_list[x], encoding=<span class=\"string\">&#x27;utf8&#x27;</span>).read()</span><br><span class=\"line\">    tempText.append(txt)</span><br><span class=\"line\"><span class=\"comment\"># print(tempText)</span></span><br><span class=\"line\"></span><br><span class=\"line\">text = <span class=\"string\">&#x27; &#x27;</span>.join(tempText)</span><br><span class=\"line\">text = text.replace(<span class=\"string\">&#x27;\\n&#x27;</span>, <span class=\"string\">&quot;&quot;</span>).replace(<span class=\"string\">&quot;\\u3000&quot;</span>, <span class=\"string\">&quot;&quot;</span>)  <span class=\"comment\"># 去掉换行符和空格</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 结巴库分词，返回结果为词的列表</span></span><br><span class=\"line\">text_cut = jieba.lcut(text)</span><br><span class=\"line\"><span class=\"comment\"># 将分好的词用某个符号分割开连成字符串</span></span><br><span class=\"line\">text_cut = <span class=\"string\">&#x27; &#x27;</span>.join(text_cut)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(text_cut)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 导入停词</span></span><br><span class=\"line\"><span class=\"comment\"># 用于去掉文本中类似于&#x27;啊&#x27;、&#x27;你&#x27;，&#x27;我&#x27;之类的词，网上有现成的成熟的停词表</span></span><br><span class=\"line\">stop_words = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./re/baidu_stopwords.txt&quot;</span>, encoding=<span class=\"string\">&quot;utf8&quot;</span>).read().split(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 图像的形状</span></span><br><span class=\"line\">background = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&quot;./re/1.jpg&quot;</span>)</span><br><span class=\"line\">graph = np.array(background)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用WordCloud生成词云</span></span><br><span class=\"line\">word_cloud = WordCloud(</span><br><span class=\"line\">    font_path=<span class=\"string\">r&#x27;/Users/yang/Library/Fonts/HanyiSentyTang.ttf&#x27;</span>,  <span class=\"comment\"># 设置词云字体，macOS</span></span><br><span class=\"line\">    <span class=\"comment\"># font_path=r&#x27;C:\\Users\\Yang\\字体\\仿宋_GB2312.ttf&#x27;,  # 设置词云字体，Windows</span></span><br><span class=\"line\">    collocations=<span class=\"literal\">False</span>,</span><br><span class=\"line\">    background_color=<span class=\"string\">&quot;white&quot;</span>,  <span class=\"comment\"># 词云图的背景颜色</span></span><br><span class=\"line\">    width=<span class=\"number\">2560</span>, height=<span class=\"number\">1440</span>,</span><br><span class=\"line\">    max_words=<span class=\"number\">2000</span>,</span><br><span class=\"line\">    mask=graph,  <span class=\"comment\"># 指定词云的形状</span></span><br><span class=\"line\">    stopwords=stop_words  <span class=\"comment\"># 去掉的停词</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;开始生成词云&#x27;</span>)</span><br><span class=\"line\">word_cloud.generate(text_cut)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运用matplotlib展现结果</span></span><br><span class=\"line\">plt.subplots(figsize=(<span class=\"number\">12</span>, <span class=\"number\">8</span>))</span><br><span class=\"line\">plt.imshow(word_cloud)</span><br><span class=\"line\">plt.axis(<span class=\"string\">&quot;off&quot;</span>)  <span class=\"comment\"># 关闭x,y轴</span></span><br><span class=\"line\">plt.show()  <span class=\"comment\"># 显示</span></span><br><span class=\"line\"></span><br><span class=\"line\">word_cloud.to_file(<span class=\"string\">&#x27;ciyun.jpg&#x27;</span>)  <span class=\"comment\"># 保存词云图</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;已保存图片&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # 使用CountVectorizer统计词频</span></span><br><span class=\"line\"><span class=\"comment\"># cv = CountVectorizer()</span></span><br><span class=\"line\"><span class=\"comment\"># contents_count = cv.fit_transform([text_cut])</span></span><br><span class=\"line\"><span class=\"comment\"># # 词有哪些</span></span><br><span class=\"line\"><span class=\"comment\"># list1 = cv.get_feature_names()</span></span><br><span class=\"line\"><span class=\"comment\"># # 词的频率</span></span><br><span class=\"line\"><span class=\"comment\"># list2 = contents_count.toarray().tolist()[0] </span></span><br><span class=\"line\"><span class=\"comment\"># # 将词与频率一一对应</span></span><br><span class=\"line\"><span class=\"comment\"># contents_dict = dict(zip(list1, list2))</span></span><br><span class=\"line\"><span class=\"comment\"># # 输出csv文件,newline=&quot;&quot;，解决输出的csv隔行问题</span></span><br><span class=\"line\"><span class=\"comment\"># with open(&quot;cipin.csv&quot;, &#x27;w&#x27;, newline=&quot;&quot;) as f:</span></span><br><span class=\"line\"><span class=\"comment\">#     writer = csv.writer(f)</span></span><br><span class=\"line\"><span class=\"comment\">#     for key, value in contents_dict.items():</span></span><br><span class=\"line\"><span class=\"comment\">#         writer.writerow([key, value])</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(&#x27;完成&#x27;)</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<br>\n\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/2021wc/ciyun.jpg\"></p>\n<br>\n\n<p>从图可知2021年想的最多的关键词是：游戏、世界、人生、经历和学习。</p>\n<p>2021年的经历，让我对所有制、民主、以及形式主义三个方面有了更加辩证、理性、深刻地认识，看待事物和问题也更加全面和长远。就像我之前总是一味地把历史的轮回归结于私有制的斗争和兼并，对形式主义也深恶痛绝，现在我有了更多的想法，以海纳百川的态度和眼光去走出固有思维的偏见，将会发现不一样的世界。</p>\n<p>历史总是有惊人的相似，缩小到个人也有似曾相识的感觉，在北京的那个夏天，和现在的处境，让我读懂了孟子说的“生于忧患死于安乐”，事与愿违的未来也有可能是如愿以偿，后之视今，亦犹今之视昔。</p>\n<p>希望2022年的关键词是「奋斗」，为个人理想而奋斗、为家庭幸福而奋斗、为国家发展而奋斗，毕竟奋斗的样子最迷人。</p>\n<p>无论成败。</p>\n<p><br><br></p>\n","categories":["生活"],"tags":["博客","2021","回忆","编程","Python"]},{"title":"计算机之路","url":"https://blog.ykqmain.com/cs/","content":"<p>随便聊聊我的计算机之路，以及我的近况，本文的主题也许算是「离别」。留个记录，给人生一个节点，再开启新的征程。</p>\n<br>\n\n<hr>\n<br>\n\n<p>小学时期，<strong>《红色警戒2》</strong>打开了我的计算机大门，从此开启了我的计算机之旅。</p>\n<p>我接触编程语言不算早，初中时期家里才拥有了第一台电脑（联想台式），这时候我才第一次接触编程语言——<strong>C语言</strong>。犹如昙花一现，埋没在少年的记忆中，唯独<strong>函数</strong>这个思想深深印在脑海。</p>\n<br>\n\n<p>时间过得很快，再见面，就已经是高中毕业了，由于对计算机的喜爱，大学毫不犹豫地选择了计算机科学与技术专业。</p>\n<p>高考后我拥有了人生中第一台笔记本电脑（联想），取了一个名字——<strong>Anna</strong>。</p>\n<p>抱着我的第一代Anna来到学校，伴随着高考失败，心态爆炸。然后辗转到图书馆做了一学期管理员，心稍微静了下来。</p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/anna1.jpg!sy\"></p>\n<p>大学的开始毫无疑问是C语言，关于C语言的学习，教材的每一个例子我都动手敲了，用的是Visual Studio，一个章节建一个项目。除此之外，还把<a href=\"https://book.douban.com/subject/1240002/\">《C Primer Plus》</a>和<a href=\"https://book.douban.com/subject/1139336/\">《C程序设计语言》</a>学了若干遍，当然这时候我开始用上了编辑器，把VS中的<code>cl.exe</code>单独拿出来在cmd中编译运行C。当时的想法是，赶紧学完C，复习一遍，再巩固一遍，最后告别一遍。<strong>每种流行的编程语言都有适合的场景以及它自己的生态</strong>，在我看来，C是系统级别和硬件级别的语言，不得不学、但又不是那么称手，适合入门编程，作为自己的基础，隐藏在底层。</p>\n<p>在大一寒假初次接触Linux，在我的Anna上折腾Ubuntu和windows的双系统，浏览器全面转向Firefox，遇到韦诺之战(The Battle for Wesnoth)。</p>\n<p>到了大一下学期，手机已经坏了2个，本来想尝试小米，奈何总是无货，一气之下打开了Apple的官网，从此打开了新世界的大门。得到了人生第一部iPhone——iPhone6，与我的笔记本电脑对应，我给她取名<strong>Nana</strong>，她们是我最好的朋友。</p>\n<img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/nana.jpg!sy\" width=\"480\">\n\n<p>如果说C带领我踏上编程之路，那么Java就让我深刻理解了<strong>「面向对象」</strong>思想。</p>\n<p>即使我知道了面向对象，可我对Java仍然不喜欢，甚至说有点厌恶。最直观的感受，就是从C的语法到Java的语法不适应感。但不喜欢归不喜欢，我仍然把教材的例子全部敲了一遍，这时候接触到了Eclipse，以及尝试用记事本写Java（现在看来完全没必要记事本，还是代码编辑器好一些）。要说也得益于记事本手敲代码，我对面向对象思想确实有一种理解了的感觉。完美主义的驱使下，即使不喜欢Java，但我仍然想给它一个句号，自己买了<a href=\"https://book.douban.com/subject/25762168/\">《Java核心技术》</a>两本，学了一遍。也是这个时候接触的Sublime Text，养成了能不用IDE就不用的习惯，反正都是些几行代码的小玩意。</p>\n<p>大一的暑假来临，由于自己更偏向于C系语言，很自然地想要向C++进发。那个夏天我去北京跟父母一起度过，那个房间的微风，我至今记忆犹新。<a href=\"https://book.douban.com/subject/25708312/\">《C++ Primer》</a>和下载的动漫，陪伴了我整个暑假。随着对计算机行业的深入了解，以及对C++的学习体会，我发现他的复杂确实如网友所言，以我的能力无法驾驭，C++也就在这里不了了之，不过C++的迭代器和Vector令我印象深刻。暑假之末，我得到了父母“馈赠”的人生中第一台苹果笔记本——MacBook Pro (Retina, 13-inch, Early 2015)，我把这台笔记本仍然取名Anna，很显然她是第二代Anna了。OS X一个全新的系统，毫无疑问是非常有吸引力的，折腾了好久。</p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/anna2.jpg!sy\"></p>\n<br>\n\n<p>大二新学期的开始，学校开始教C++，由于我学过一次，但又不打算深入学习，应付考试完全足够。我的目光转向了iOS开发，即Objective-C，虽然当时Apple已经发布了Swift，因为还不成熟，我仍然打算先过一遍Objective-C，然后再来一遍Swift。沉浸于图书馆几个月，看了几本书和一些视频。我认为iOS开发也许并不是一个好选择，需求不大，市场饱和，再加上Apple Developer账号的收费机制，我又放弃了一个方向。不过，我仍然在这个过程收获了MVC模式。</p>\n<p>知识和见识越来越广，之前在编译型语言兜兜转转，放弃iOS之后，打算找一门脚本语言玩一玩。层层筛选下来，最后在Perl、Ruby和Pyhton之间举棋不定，至于JavaScript，当时的我认为它只适合前端，遂没有考虑。我的印象中，在图书馆找了好几本书对比，甚至夜晚跑步的时候也在纠结选哪个，网上也搜了很多资料。</p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/language.JPG\"></p>\n<p>当时比较了很多项，也纠结了很久。<strong>我最后选择了Python</strong>，如果我没记错的话，决定的最主要原因是：Ruby资源的母语是日语，而Python是英语。要知道一门外语对我而言是非常困难的，即使英语学了这么多年，还是这个水样子，而英语明显更为通用。之后在图书馆通过<a href=\"https://book.douban.com/subject/25880388/\">《Python基础教程》</a>正式接触Python。</p>\n<p>Python之后，也没有上手什么项目。厌烦了通过hosts方式上Google，极其不稳定和慢速。偶然得知了VPS，便开启了SS之门，就像打开潘多拉魔盒。我的行动完全转向，重访Google，开启Twitter之旅。写了第一个网页，又萌生写博客的想法，于是立即动手，折腾WordPress废寝忘食。觉得博客应该专注内容，又了解到Hexo，于是把Blog迁移到Hexo。期间买了几个域名，最后还是在com稳定下来。</p>\n<p>这一折腾，就是寒假来临。这个寒假，我又复习了一遍《C Primer Plus》和《C++ Primer》，后来我还翻过C，但再也没有看过C++了。</p>\n<br>\n\n<p>大三新的学期，学校的课程关于编程语言的很少了，开始安排上了数据结构、数据库、汇编语言、编译原理、组成原理、操作系统、计算机网络等课程。我又看了一遍《Java核心技术》，博客一直在维护。开始尝试Web开发。HTML很好，但是JavaScript和PHP则是浅尝则止，对我而言，太繁杂了，技术更新太快，而且我自认为需要一点设计技能，这对一个强迫症患者，简直是噩梦。即使说JavaScript是每个程序员应该掌握的技能，但至今我仍然只敢说我仅仅熟悉HTML，而对JavaScript了解还算不上。</p>\n<img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/tsg.jpeg!sy\" width=\"480\">\n\n<p>在那之后，我基本不接触新的编程语言了，而是暂时专注在计算机的其他的方面，比如数据库和计算机网络，对macOS和Linux的探索也足够的多。经历了这么多，对Java的讨厌，也逐渐转变为不喜欢，即使不喜欢，却还是隔三差五就把《Java核心技术》拿出来翻翻。也许这就是缘分，不喜欢Java，整个大学在这门语言上花的时间却最多。</p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/book1.JPG!sy\"></p>\n<p>时间过得真的很快，就这样毕业了。</p>\n<p>中间的一些插曲就不在此谈了。原本我更希望找一份关于Python的工作，后来的亲身体验还是选择了Java，市场需求和自身能力的局限，没办法。</p>\n<p>在经历了一些事之后，逐渐改变了自己的一些想法。</p>\n<p><strong>人生，就是各种经历组成的。</strong></p>\n<br>\n\n<hr>\n<br>\n\n<p>语言之争是激烈的，有时候比电影还精彩。还是那句话，<strong>每种流行的编程语言都有适合的场景以及它自己的生态</strong>，除了看一门语言本身的设计之外，必须要看到这们语言周围的生态，争论语言好坏的意义不大。</p>\n<p>很多时候我们可以说，语言只是表达工具，更重要的是深处的算法和设计模式等等；我们也可以说，不同的语言有不同的适用领域，用得好了，事半功倍。</p>\n<p>其实这两种看法并不是相反的，而是相辅相成的。比如说，C/C++更适合系统编程和硬件、有很高的运行效率，但是上手难度大，不易控制。Java虽然语法啰嗦，但正是这一套规范，适合大型项目的协作开发，再加上Java强大的生态，成为目前最流行的企业语言不足为奇，在Web、大数据方面无人能敌，还带一个Android。对于脚本语言PHP、Python都有使用场景，PHP和网页的契合度，以及Python的开发效率，都是非常棒的优点。对于前端，几乎就是JavaScript没得选。</p>\n<p>陷于语言之争只会让自己变得偏执，以及浪费时间。一门语言以及它周围的生态是不容易改变的，但是个人完全有一些小余地选择自己喜欢的。</p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/code.png!sy\"></p>\n<p>一名程序员必须学习3种以上的编程语言（HTML属于标记语言，SQL属于查询语言不在此列，另外Shell也不算在里面），其中一门编译型语言、一门脚本语言、一门工作吃饭/喜欢兴趣的语言。不同的语言可以学到不一样的思想，见识到不一样的世界。</p>\n<p>要我说需要学习和自己喜欢的编程语言选出5种，很可能就是C、Java、Python、JavaScript、以及Rust。</p>\n<ul>\n<li><p>C是入门的首选，打好基础。一开始就从脚本入手，很容易走偏，由奢入俭难（对于非程序员，还是非常推荐Python的）；</p>\n</li>\n<li><p>面向对象目前还是主流，可选C++或Java等等，我选的Java，这也是目前最好找工作的语言；</p>\n</li>\n<li><p>然后是脚本语言，我选的Python，脚本语言是程序员的拿手工具。现在看来Ruby的哲学不是我喜欢的，过多的语法糖令人有些混乱，选择困难症，对于方法的调用不能适应；</p>\n</li>\n<li><p>JavaScript跟C语言一样，几乎是程序员必备技能，稍微懂一点还是好些；</p>\n</li>\n<li><p>最后，新时代的语言，Go和Rust，上个世纪的潮流没能赶上，这波不能掉队。至于为啥选择了Rust，一来是用来代替C++，毕竟C++太难，从应用场景来看，Go对标的的是Java，对现在我的而言，我早已改变了对Java的看法。二来是因为Mozilla情怀。</p>\n</li>\n</ul>\n<p>以前我也在不断寻找一门契合自己的编程语言，最后发现每种都有这样那样的缺点，但是不能掩盖他们的光芒。果然这个世界上只有两种语言，被人骂的和没人用的。</p>\n<p>我是真的有点学不动了，除了纸质书，还有电子的。最后打算再看一下<a href=\"https://www.rust-lang.org/zh-CN/\">Rust</a>，我就真的不展开了，累了。</p>\n<p>即使Rust的学习曲线陡峭，我也希望在这里竖一块里程碑。我想我过多的涉猎不同的方向，却没有在一个方向上足够深入，实在可惜。</p>\n<br>\n\n<p>开了一个新坑，算法一直以来都很头疼，如果这个计划半途而废也不奇怪，<strong>但我希望对于计算机、对于编程更多一点兴趣，而不是饭碗。</strong></p>\n<img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/algorithm.JPG!sy\" width=\"480\">\n\n<p>很可能我将要转行了，如果真是那样，那么Rust也算是一个很好的纪念，以后可能只有Python能常伴左右。</p>\n<p>也许我的编程之路到此为止了，总结一点经验就是，<strong>三分钟热度要不得，坚持难能可贵，深度比广度重要</strong>。</p>\n<p>不管怎么样，学无止境。💻</p>\n<img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/book2.JPG!sy\" width=\"480\">\n\n<br>\n\n<hr>\n<br>\n\n<p><mark><em><strong>Update: 2021-04</strong></em></mark></p>\n<p>2019年开启北漂之旅，那之后开始考虑转行，2019年底开始实施。</p>\n<p>2020年初突遇疫情耽搁了，2020年底转行成功，正式告别计算机行业。</p>\n<p>2020年底，陪伴了我5年多的第二代Anna，终于顶不住了。迫于贫穷，入了联想 小新 Pro14 2021，被视为第三代Anna。</p>\n<img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/anna3.jpeg!sy\" width=\"480\">\n\n<p>很长时间没用Windows，本以为会变好，没想到这么多年了，真的一言难尽。鼠标难用；高分屏下各软件的分辨率缩放各行其是，有的模糊，有的太小，显示不一；各个软件和系统之间几乎没有配合和协作；系统环境变量混乱不堪，没有原生终端；反斜杠的路径也非常难受。许多功能强制依赖着一个个GUI的窗口（Windows之名名副其实，Window的复数），将细节过度藏匿于无形之中，拉开人机之间的距离，对于用户而言是简单而高效，对于开发商也是有大量需求的市场，对我而言则是始终有种隔阂，毫无掌控感且显得混乱，使我对于“万物皆为文本”的Unix哲学有了更加深刻的理解，大道至简。成功戒了我喜欢捣鼓电脑的兴趣，完全不再想写下一行代码了。居安思危，久而久之不知道是不是彻底告别编程了。虽然已经是差不多了，最后的一点念想Python，我仍然想常伴左右。</p>\n<p>对于笔记本而言，以前我觉得仅仅是喜欢macOS，后来有了对比才发现Mac是软硬一体的精致、无与伦比的美妙。计算机对我而言，是一个完整的个人世界，各种软件精挑细选，海量的数据皆有所归，哪里存放些什么，一丝不苟，什么该与什么在一起，整整齐齐，犹如一座图书馆，是精巧的外在建筑美学，也有精神海洋的丰富内涵，完完美美；同时又像一个伙伴，陪伴着我、记录着经历，书写着这个世界的故事。光是目之所及，手之所触就心情愉悦不已。</p>\n<p>仔细想了想，用着难受还不如不用。虽然是最短暂的Anna3，也有了一定的感情，有一丝的不舍。正好给我爸使用，避免造成浪费，也减轻我的愧疚感。以后坚决不买Windows笔记本了，<strong>将Windows留给台式，把Linux留在服务器，还是MacBook更适合作为伙伴、形影不离。</strong></p>\n<p>我喜欢将苹果的电脑统称Mac，包括iMac(台式)、Mac pro(工作站)，Mac mini(主机)、MacBook Air、MacBook Pro、MacBook(已停产)。<br>而把苹果笔记本统称MacBook，包括MacBook Air、MacBook Pro、MacBook(已停产、未来或重启该系列)。<br>所有的苹果电脑，我最中意的可能就是<strong>MacBook Pro</strong>了，希望这个系列能陪我一辈子。</p>\n<br>\n\n<hr>\n<br>\n\n<p>2021年开启了新的生活，并于3月份按捺不住，还是入了MacBook Pro (13-inch, M1, 2020)。</p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/anna4.jpeg!sy\"></p>\n<p>即使离开了计算机行业，但我对于计算机的兴趣依然不减，反而由于不再焦虑，感觉更加轻松和愉快，只是不再有那么多的时间学习新的技术，唯一能够保持与时俱进的，估计只有Python了。</p>\n<p>本博客可能不再更新了，有缘人可以在 <a href=\"https://space.bilibili.com/7216933\">B站</a> 或者 <a href=\"https://douban.com/people/250982855/\">豆瓣</a> 找到我。</p>\n<blockquote>\n<p>人生如梦，一尊还酹江月。</p>\n</blockquote>\n<p><br><br> </p>\n","categories":["文章"],"tags":["回忆","编程","计算机","TimeLine"]},{"title":"Windows List","url":"https://blog.ykqmain.com/win/","content":"<p>精简的Windows办公、娱乐软件推荐列表。</p>\n<br>\n\n<ul>\n<li><p><strong>办公</strong></p>\n<ul>\n<li><a href=\"https://www.mozilla.org/en-US/firefox/all/#product-desktop-release\">Firefox</a></li>\n<li><a href=\"http://www.sublimetext.com/\">Sublime</a></li>\n<li><a href=\"https://www.wps.cn/\">WPS</a></li>\n<li><a href=\"https://im.qq.com/\">QQ</a></li>\n<li><a href=\"https://support.hp.com/cn-zh/drivers/printers\">HP LaserJet M1005驱动</a><br>&nbsp;</li>\n<li><a href=\"https://www.7-zip.org/\">7z</a></li>\n<li><a href=\"http://www.bandisoft.com/honeyview/\">Honeyview</a></li>\n<li><a href=\"https://www.videolan.org/\">VLC</a></li>\n<li><a href=\"https://obsproject.com/\">OBS</a></li>\n<li><a href=\"https://www.adobe.com/cn/products/photoshop.html\">Adobe Photoshop</a><br>&nbsp;</li>\n<li><a href=\"https://www.python.org/\">Python</a></li>\n<li><a href=\"https://nodejs.org/zh-cn/\">Node.js</a></li>\n<li><a href=\"https://www.oracle.com/java/technologies/downloads/\">JDK</a></li>\n<li><a href=\"https://dev.mysql.com/downloads/\">MySQL</a></li>\n<li><a href=\"https://git-scm.com/\">Git</a></li>\n<li><a href=\"https://github.com/microsoft/terminal\">Windows Terminal</a><br>&nbsp;</li>\n<li><a href=\"https://www.huorong.cn/\">火绒</a></li>\n<li><a href=\"https://iknow.lenovo.com.cn/detail/dc_178562.html\">关闭Win10更新</a></li>\n</ul>\n</li>\n</ul>\n<br>\n\n<ul>\n<li><p><strong>娱乐</strong></p>\n<ul>\n<li><a href=\"https://y.qq.com/\">QQ音乐</a></li>\n<li><a href=\"https://v.qq.com/\">腾讯视频</a></li>\n<li><a href=\"https://www.youku.com/\">优酷</a></li>\n<li><a href=\"https://www.iqiyi.com/\">爱奇艺</a><br>&nbsp;</li>\n<li><a href=\"https://store.steampowered.com/\">Steam</a></li>\n<li><a href=\"https://cor-games.com/\">红色警戒3：日冕</a></li>\n</ul>\n</li>\n</ul>\n<p><br><br></p>\n","categories":["计算机"],"tags":["工具","Windows","SoftWare","办公","娱乐"]},{"title":"Debian","url":"https://blog.ykqmain.com/debian/","content":"<p>大一的时候折腾过Windows和Ubuntu桌面版双系统，后来换了Mac，接触的Linux服务器一直是CentOS，所以这次趁阿里云优惠尝试一下<a href=\"https://www.debian.org/\">Debian</a>练练手，记录折腾过程。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">本机：</span><br><span class=\"line\">macOS 10.14.4</span><br><span class=\"line\">终端.app</span><br><span class=\"line\">Cyberduck</span><br><span class=\"line\"></span><br><span class=\"line\">Windows 10</span><br><span class=\"line\">Xshell</span><br><span class=\"line\">Xftp</span><br><span class=\"line\"></span><br><span class=\"line\">服务器：</span><br><span class=\"line\">Debian 9.8 x64</span><br></pre></td></tr></table></figure>\n\n<br>\n\n\n<h2 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h2><p><code>ssh user@IP -p port</code></p>\n<br>\n\n\n<h2 id=\"版本和名字\"><a href=\"#版本和名字\" class=\"headerlink\" title=\"版本和名字\"></a>版本和名字</h2><ol>\n<li><p>查看Linux内核版本</p>\n<ul>\n<li><code>cat /proc/version</code><ul>\n<li><code>Linux version 4.9.0-9-amd64 (debian-kernel@lists.debian.org) (gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1) ) #1 SMP Debian 4.9.168-1 (2019-04-12)</code></li>\n</ul>\n</li>\n<li><code>uname -a</code><ul>\n<li><code>Linux Anna2 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1 (2019-04-12) x86_64 GNU/Linux</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>查看Linux系统版本</p>\n<ul>\n<li><code>lsb_release -a</code>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">No LSB modules are available.</span><br><span class=\"line\">Distributor ID: Debian</span><br><span class=\"line\">Description:    Debian GNU/Linux 9.8 (stretch)</span><br><span class=\"line\">Release:    9.8</span><br><span class=\"line\">Codename:   stretch</span><br></pre></td></tr></table></figure></li>\n<li><code>cat /etc/issue</code></li>\n<li><code>cat /etc/redhat-release</code> (红帽系，RHEL、CentOS)</li>\n</ul>\n</li>\n<li><p>修改机器名</p>\n<ul>\n<li><p>查看</p>\n<ul>\n<li><code>hostnamectl</code></li>\n</ul>\n</li>\n<li><p>修改</p>\n<ul>\n<li><code>hostnamectl set-hostname Anna2</code></li>\n<li><code>vim /etc/hostname</code></li>\n<li><code>vim /etc/hosts</code></li>\n</ul>\n</li>\n<li><p>重启</p>\n<ul>\n<li><code>reboot</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n\n\n<h2 id=\"ssh免密登录\"><a href=\"#ssh免密登录\" class=\"headerlink\" title=\"ssh免密登录\"></a>ssh免密登录</h2><ol>\n<li><p>apt包管理 (.DEB)</p>\n<ul>\n<li>macOS有<code>brew</code>, CentOS有<code>yum</code>, Debian/Ubuntu有<code>apt-get</code></li>\n<li>一般来说，也许Red Hat系和Debian系的差别，也就是<code>yum</code>和<code>apt-get</code>的差别了。😅</li>\n<li>apt-get, apt, aptitude三者有区别，但是大体来说差别不大。我倾向于用<code>apt</code>，因为它输入最方便。</li>\n<li>常用命令：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt search  搜索包</span><br><span class=\"line\">apt show  显示包的信息</span><br><span class=\"line\">apt install  安装</span><br><span class=\"line\">apt remove  移除</span><br><span class=\"line\">apt purge  移除软件和配置文件</span><br><span class=\"line\">apt update  更新源</span><br><span class=\"line\">apt upgrade  升级所有可升级的软件包</span><br><span class=\"line\">apt list  列出包含条件的包（已安装，可升级等）</span><br><span class=\"line\">apt autoremove  自动删除不需要的包</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>准备工作</p>\n<ul>\n<li>更新源，<code>apt update</code></li>\n<li>升级软件，<code>apt upgrade</code></li>\n<li>安装build工具，<code>apt install build-essential</code> (CentOS有<code>yum groupinstall &quot;Development Tools&quot;</code>)</li>\n</ul>\n</li>\n<li><p>ssh</p>\n<ol>\n<li><p>生成<code>ssh keys</code>，参考<a href=\"https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/\">Generating a new SSH key</a> 或者 <a href=\"http://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5\">Git-生成-SSH-公钥</a></p>\n</li>\n<li><p>上传公钥<code>id_rsa.pub</code>到服务器的<code>~/.ssh</code>目录</p>\n</li>\n<li><p>写入<code>authorized_keys</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class=\"line\">chmod 700 ~/.ssh</span><br><span class=\"line\">chmod 644 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li>\n<li><p>修改ssh配置文件</p>\n<ul>\n<li><code>vim /etc/ssh/sshd_config</code></li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">port    # 修改为任意，我设置为1024。</span><br><span class=\"line\">PermitRootLogin yes    # 开发机器，用root方便。配置其他管理员用户，权限命令需要sudo或者su切换用户。</span><br><span class=\"line\">PubkeyAuthentication yes</span><br><span class=\"line\">AuthorizedKeysFile  .ssh/authorized_keys .ssh/authorized_keys2</span><br><span class=\"line\">PasswordAuthentication no    # 禁止密码登陆</span><br></pre></td></tr></table></figure></li>\n<li><p>重启sshd服务，<code>systemctl restart sshd.service</code></p>\n</li>\n<li><p>阿里云有个坑，它自带一个<code>安全组规则</code>，ssh更改端口之后，必须在那里也开启<code>相应的入方向tcp端口</code>，我开启了用于ssh的1024端口，顺便配置了用于http的1126端口（因为A解析不备案也无法访问，所以就用<code>IP:port</code>直接访问了。）</p>\n</li>\n<li><p>重启机器后再测试能不能免密登录，<code>reboot</code></p>\n</li>\n</ol>\n</li>\n</ol>\n<br>\n\n\n<h2 id=\"配置终端\"><a href=\"#配置终端\" class=\"headerlink\" title=\"配置终端\"></a>配置终端</h2><p>ssh上去就是终端，整天跟它打交道，必须要趁手，</p>\n<ol>\n<li><p>安装几个工具</p>\n<ul>\n<li><p><code>apt install XXX</code></p>\n<ul>\n<li><code>p7zip</code></li>\n<li><code>git</code></li>\n<li><code>tree</code></li>\n<li><code>dos2unix</code></li>\n<li><code>pip3</code>, Debian9自带Python3.5，但是没有pip3，使用<code>apt install python3-pip</code>安装。</li>\n</ul>\n</li>\n<li><p>pip3</p>\n<ul>\n<li>Requests<br></li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>安装oh-my-zsh (可选的，服务器很卡，bash也能用)</p>\n<ol>\n<li><p>安装zsh，<code>apt install zsh</code></p>\n</li>\n<li><p>安装oh-my-zsh，<code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></p>\n</li>\n<li><p>配置<code>.zshrc</code>，我把本地的配置文件传上去，稍作修改。</p>\n</li>\n<li><p>因为这是配置好了的文件，要先把主题和插件准备好了之后再source。</p>\n<ul>\n<li><p>自定义preference主题，将本地的<code>preference.zsh-theme</code>上传到<code>~/.oh-my-zsh/custom/themes</code>，稍作修改。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Copied and modified from the oh-my-zsh theme from clean</span><br><span class=\"line\"></span><br><span class=\"line\">if [ $UID -eq 0 ]; then NCOLOR=&quot;red&quot;; else NCOLOR=&quot;white&quot;; fi</span><br><span class=\"line\"># 如果UID等于0(root)，则为红色，否则为白色</span><br><span class=\"line\"></span><br><span class=\"line\">local ret_status=&quot;%(?:%&#123;$fg[green]%&#125;%B&gt;%b :%&#123;$fg[red]%&#125;%B&gt;%b )&quot;</span><br><span class=\"line\"># 命令正确则为绿色，否则为红色</span><br><span class=\"line\"></span><br><span class=\"line\">PROMPT=&#x27;%&#123;$fg[$NCOLOR]%&#125;%n%&#123;$reset_color%&#125;@%&#123;$fg[white]%&#125;%m%&#123;$reset_color%&#125;:%&#123;$fg[blue]%&#125;%B%c%b%&#123;$reset_color%&#125;$(git_prompt_info) $&#123;ret_status&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 颜色</span><br><span class=\"line\"># black, red, green, yellow, blue, magenta, cyan, white</span><br><span class=\"line\"># 黑，红，绿，黄，蓝，洋红(紫)，青色，白色</span><br><span class=\"line\"></span><br><span class=\"line\"># --------------------- </span><br><span class=\"line\"># %n  用户名</span><br><span class=\"line\"># %M  计算机的主机名</span><br><span class=\"line\"># %m  计算机的主机名（在第一个句号之前截断）</span><br><span class=\"line\"></span><br><span class=\"line\"># %d  目前的工作目录</span><br><span class=\"line\"># %~  目前的工作目录相对于～的相对路径</span><br><span class=\"line\"># %l  当前的tty</span><br><span class=\"line\"></span><br><span class=\"line\"># %T  系统时间（时：分）</span><br><span class=\"line\"># %*  系统时间（时：分：秒）</span><br><span class=\"line\"># %D  系统日期（年-月-日）</span><br><span class=\"line\"></span><br><span class=\"line\"># %B - %b 开始到结束使用粗体打印</span><br><span class=\"line\"># %U - %u 开始到结束使用下划线打印</span><br><span class=\"line\"># --------------------- </span><br><span class=\"line\"></span><br><span class=\"line\"># git theming</span><br><span class=\"line\">ZSH_THEME_GIT_PROMPT_PREFIX=&quot;%&#123;$fg_bold[white]%&#125;(%&#123;$fg_bold[yellow]%&#125;%B&quot;</span><br><span class=\"line\">ZSH_THEME_GIT_PROMPT_SUFFIX=&quot;%b%&#123;$fg_bold[white]%&#125;)%&#123;$reset_color%&#125;&quot;</span><br><span class=\"line\">ZSH_THEME_GIT_PROMPT_CLEAN=&quot;%&#123;$fg_bold[green]%&#125; ✔&quot;</span><br><span class=\"line\">ZSH_THEME_GIT_PROMPT_DIRTY=&quot;%&#123;$fg_bold[red]%&#125; ✗&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>下载相关插件</p>\n<ul>\n<li><a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\">zsh-syntax-highlighting</a></li>\n<li><a href=\"https://github.com/zsh-users/zsh-completions\">zsh-completions</a></li>\n<li><a href=\"https://github.com/zsh-users/zsh-autosuggestions\">zsh-autosuggestions</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><code>source .zshrc</code>，oh-my-zsh就配置好了。</p>\n<br></li>\n</ol>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>配置Vim</p>\n<p> oh-my-zsh是平台，Vim就是双手。</p>\n<ul>\n<li><p>开启终端鼠标复制</p>\n<ul>\n<li><code>vim /etc/vim/vimrc</code> (<code>vim /usr/share/vim/vim80/defaults.vim</code> 70行)</li>\n<li><code>set mouse=c</code></li>\n</ul>\n</li>\n<li><p>上传本地<code>.vimrc</code>到服务器，稍作修改</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; Configuration file for vim</span><br><span class=\"line\">set modelines=0     &quot; CVE-2007-2438</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Normally we use vim-extensions. If you want true vi-compatibility</span><br><span class=\"line\">&quot; remove change the following statements</span><br><span class=\"line\">set nocompatible    &quot; Use Vim defaults instead of 100% vi compatibility</span><br><span class=\"line\">set backspace=2     &quot; more powerful backspacing</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; Don&#x27;t write backup file if vim is being called by &quot;crontab -e&quot;</span><br><span class=\"line\">au BufWrite /private/tmp/crontab.* set nowritebackup nobackup</span><br><span class=\"line\">&quot; Don&#x27;t write backup file if vim is being called by &quot;chpass&quot;</span><br><span class=\"line\">au BufWrite /private/etc/pw.* set nowritebackup nobackup</span><br><span class=\"line\"></span><br><span class=\"line\">set fileencodings=utf-8,gb18030</span><br><span class=\"line\">set termencoding=utf-8</span><br><span class=\"line\">set encoding=utf-8</span><br><span class=\"line\"></span><br><span class=\"line\">set number</span><br><span class=\"line\">syntax on</span><br><span class=\"line\"></span><br><span class=\"line\">set tabstop=4</span><br><span class=\"line\">set expandtab</span><br><span class=\"line\">set softtabstop=4</span><br><span class=\"line\">set shiftwidth=4</span><br><span class=\"line\">set smartindent</span><br></pre></td></tr></table></figure></li>\n<li><p>Vim常用操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">esc    从编辑模式切换到命令模式</span><br><span class=\"line\"></span><br><span class=\"line\">a      切换到编辑模式，在光标后插入</span><br><span class=\"line\">o      切换到编辑模式，在光标下一行插入</span><br><span class=\"line\"></span><br><span class=\"line\">v      可视模式</span><br><span class=\"line\">r      取代模式</span><br><span class=\"line\"></span><br><span class=\"line\">命令模式下：</span><br><span class=\"line\">Ctrl+b 向上翻页</span><br><span class=\"line\">Ctrl+d 向下翻页</span><br><span class=\"line\">/      光标之后搜索</span><br><span class=\"line\">?      光标之前搜索</span><br><span class=\"line\"></span><br><span class=\"line\">n&lt;space&gt; 光标向右移动n个字符</span><br><span class=\"line\">n&lt;Enter&gt; 光标向下移动n行</span><br><span class=\"line\">0      光标移到行首</span><br><span class=\"line\">$      光标移到行尾</span><br><span class=\"line\"></span><br><span class=\"line\">G      跳至文件末尾</span><br><span class=\"line\">ggdG   清空内容，光标移动到首字符，删除到尾部</span><br><span class=\"line\"></span><br><span class=\"line\">u      撤销操作</span><br><span class=\"line\">Ctrl+r 重做上一个动作</span><br><span class=\"line\"></span><br><span class=\"line\">d      剪切</span><br><span class=\"line\">dd     删除光标那一行字符</span><br><span class=\"line\">dw     删除当前光标所在位置到单词尾字符</span><br><span class=\"line\">d0     删除光标到行首的字符</span><br><span class=\"line\">d$     删除光标到行尾的字符</span><br><span class=\"line\">y      复制</span><br><span class=\"line\">y2     复制单词</span><br><span class=\"line\">p      粘贴（将已复制的数据在光标下一行粘贴）</span><br><span class=\"line\">x      删除当前光标所在处的字符（向后删除一个字符）</span><br><span class=\"line\"></span><br><span class=\"line\">:wq    保存退出</span><br><span class=\"line\">:q     退出</span><br><span class=\"line\">:q!    强制退出</span><br><span class=\"line\">:w [filename] 将编辑的数据另存为</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ol>\n<br>\n\n\n<h2 id=\"配置防火墙\"><a href=\"#配置防火墙\" class=\"headerlink\" title=\"配置防火墙\"></a>配置防火墙</h2><p>CentOS7已经默认使用Firewalld了，Firewalld的防火墙本质上是建立在原生的iptable防火墙之上的抽象层，再加上Firewalld默认关闭所有端口，需要哪个开哪个，以及命令也比较灵活，所以在Debian上我也想用Firewalld。</p>\n<ol>\n<li><p>安装</p>\n<ul>\n<li><code>apt install firewalld</code></li>\n<li><code>firewall-cmd --version</code> 查看版本</li>\n</ul>\n</li>\n<li><p>启动</p>\n<ul>\n<li><code>systemctl start firewalld</code> 启动</li>\n<li><code>systemctl enable firewalld</code> 开机启动</li>\n<li><code>firewall-cmd --state</code> 运行状态</li>\n<li><code>systemctl status firewalld</code> 查看FirewallD守护进程的状态</li>\n</ul>\n</li>\n<li><p>使用</p>\n<p> Firewalld的配置可通过三种方式：</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd    # 命令行的用户接口，常用</span><br><span class=\"line\">/etc/firewalld/    # 目录下的xml文件，编辑xml文件实现firewall的配置</span><br><span class=\"line\">firewall-config    # 图形界面接口，终端上无法使用</span><br></pre></td></tr></table></figure></li>\n<li><p>服务和端口</p>\n<p> 默认支持的服务的配置文件位于<code>/usr/lib/firewalld/services</code>，用户创建的服务文件在<code>/etc/firewalld/services</code>中。</p>\n<ul>\n<li><code>firewall-cmd --list-all</code> 列出配置的所有防火墙规则</li>\n<li><code>firewall-cmd --get-services</code> 查看启用的所有服务的列表</li>\n<li><code>firewall-cmd --add-service=http --permanent</code> 启用http服务</li>\n<li><code>firewall-cmd --add-port=1024/tcp --permanent</code> 启用tcp端口1024</li>\n<li><code>firewall-cmd --add-port=5000-5200/udp --permanent</code> 启用udp端口一个地址段</li>\n<li><code>firewall-cmd --reload</code> 重新加载 FirewallD 配置</li>\n<li>禁用服务或端口，将add改为<code>remove</code></li>\n</ul>\n</li>\n<li><p>区域管理</p>\n<p> “区域”是针对给定位置或场景（例如家庭、公共、受信任等）可能具有的各种信任级别的预构建规则集。不同的区域允许不同的网络服务和入站流量类型，而拒绝其他任何流量。 首次启用 FirewallD 后，public 将是默认区域。</p>\n<ul>\n<li><code>firewall-cmd --get-default-zone</code> 默认区域</li>\n<li><code>firewall-cmd --set-default-zone=internal</code> 修改默认区域</li>\n<li><code>firewall-cmd --zone=public --list-all</code> 得到特定区域的所有配置</li>\n<li><code>firewall-cmd --list-all-zones</code> 得到所有区域的配置</li>\n<li><code>firewall-cmd --zone=public --add-port=12345/tcp --permanent</code> 启用特定区域的端口</li>\n</ul>\n</li>\n</ol>\n<p>与阿里云安全组规则对应，我开启了<code>22/tcp 1024/tcp 1126/tcp</code>四个端口，每次配置之后，运行<code>firewall-cmd --reload</code> 重新加载FirewallD使其生效。</p>\n<br>\n\n\n<h2 id=\"Systemd\"><a href=\"#Systemd\" class=\"headerlink\" title=\"Systemd\"></a>Systemd</h2><p>Systemd很方便用于系统服务管理。</p>\n<ol>\n<li><p>systemctl</p>\n<p> <code>systemctl</code>是Systemd的主命令，用于管理系统。</p>\n<ol>\n<li><p>检查</p>\n<ul>\n<li><code>systemctl --version</code></li>\n<li><code>whereis systemd </code> 安装位置</li>\n<li><code>whereis systemctl</code></li>\n</ul>\n</li>\n<li><p>使用</p>\n<ul>\n<li><p><code>systemctl list-unit-files</code> 列出所有可用单元</p>\n</li>\n<li><p><code>systemctl list-units</code> 列出所有运行中单元</p>\n</li>\n<li><p><code>systemctl --failed</code> 列出所有失败单元</p>\n</li>\n<li><p><code>systemctl list-unit-files --type=service</code> 列出所有服务（包括启用的和禁用的）  </p>\n</li>\n<li><p><code>systemctl is-active nginx.service</code> 查看服务是否运行</p>\n</li>\n<li><p><code>systemctl is-enabled nginx</code> 查看服务是否设置为开机启动（不带后缀默认就是<code>.service</code>单元，其他的单元比如<code>.mount .sockets .device .target</code>都必须指定类型）</p>\n</li>\n<li><p><code>systemctl status firewalld.service</code> 检查某个单元或服务状态</p>\n</li>\n</ul>\n</li>\n<li><p>管理</p>\n<ul>\n<li><code>systemctl status httpd.service</code> 检查状态</li>\n<li><code>systemctl start httpd.service</code> 启动</li>\n<li><code>systemctl reload httpd.service</code> 重载</li>\n<li><code>systemctl restart httpd.service</code> 重启</li>\n<li><code>systemctl stop httpd.service</code> 停止</li>\n<li><code>systemctl show httpd</code> 检查某个服务的所有配置细节</li>\n<li><code>systemctl kill httpd</code> 杀死服务</li>\n</ul>\n</li>\n<li><p>开机自启</p>\n<ul>\n<li><code>systemctl is-active httpd.service</code> 激活服务</li>\n<li><code>systemctl enable httpd.service</code> 开机自启</li>\n<li><code>systemctl disable httpd.service</code> 禁用</li>\n</ul>\n</li>\n<li><p>管理套接口</p>\n<p> 与服务类似。</p>\n<ul>\n<li><code>systemctl list-unit-files --type=socket</code> 列出所有可用系统套接口</li>\n<li><code>systemctl status cups.socket</code></li>\n<li><code>systemctl start cups.socket</code></li>\n<li><code>systemctl reload cups.socket</code></li>\n<li><code>systemctl restart cups.socket</code></li>\n<li><code>systemctl stop cups.socket</code><br></li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p><code>hostnamectl</code> 查看当前主机的信息，最开始用过。</p>\n</li>\n<li><p><code>localectl</code> 查看本地化设置</p>\n</li>\n<li><p><code>timedatectl</code> 查看当前时区设置</p>\n</li>\n<li><p><code>loginctl</code> 查看当前登录的用户</p>\n</li>\n</ol>\n<br>\n\n\n<h2 id=\"LNMP环境\"><a href=\"#LNMP环境\" class=\"headerlink\" title=\"LNMP环境\"></a>LNMP环境</h2><p>LNMP代表的就是<code>Linux+Nginx+MySQL/MariaDB+PHP/Python/Perl</code>。</p>\n<ol>\n<li><p>Nginx安装</p>\n<ol>\n<li><p>安装</p>\n<ul>\n<li><code>apt install nginx</code></li>\n</ul>\n</li>\n<li><p>启动</p>\n<ul>\n<li><code>whereis nginx</code> 查看位置</li>\n<li><code>/etc/nginx/nginx.conf</code> 配置文件</li>\n<li><code>/etc/nginx/sites-enabled/</code>，修改<code>default</code>文件中的端口为<code>1126</code>。</li>\n<li><code>systemctl start nginx</code> 启动nginx</li>\n<li><code>systemctl enable nginx</code> 开机自启</li>\n<li><code>systemctl status nginx</code> 查看状态</li>\n<li><code>systemctl restart nginx</code> 重启Nginx</li>\n</ul>\n</li>\n<li><p>检查<br> 在浏览器输入<code>IP:port</code>访问网址，有<code>Welcome to nginx!</code>则成功。<br> 网站根目录，<code>/var/www/html</code></p>\n<br></li>\n</ol>\n</li>\n<li><p>MySQL安装</p>\n<ol>\n<li><p>安装</p>\n<ul>\n<li><code>apt install mysql-server</code></li>\n<li><code>apt install mysql-client</code></li>\n</ul>\n</li>\n<li><p>检查</p>\n<ul>\n<li><code>mysql --version</code> 发现安装的实际是MariaDB，早已听闻开源界和Oracle的爱恨情仇。由于两者的兼容性，我也不想更换了，正好可以尝试一下MariaDB。(如果想非MySQL不可，可以<a href=\"https://dev.mysql.com/downloads/repo/apt/\">离线安装</a>)</li>\n</ul>\n</li>\n<li><p>登录</p>\n<ul>\n<li><code>mysql -u root -p </code></li>\n</ul>\n</li>\n<li><p><code>/etc/mysql/my.cnf</code></p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">default-character-set=utf8mb4</span><br><span class=\"line\"></span><br><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8mb4</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\"></span><br><span class=\"line\">bind-address = 0.0.0.0</span><br></pre></td></tr></table></figure></li>\n<li><p>远程登录（开启端口）</p>\n<ul>\n<li><code>grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;密码&#39;;</code></li>\n<li><code>flush privileges;</code><br></li>\n</ul>\n</li>\n</ol>\n</li>\n<li><p>其他</p>\n<p> 后端不太想用PHP，Debian自带Python3和perl。</p>\n<p> 至此，一个基础的Linux环境就弄好了。由此来看，也许Red Hat系和Debian系也许真的就是<code>yum</code>和<code>apt-get</code>的差别了。🤔</p>\n<p> <strong>可以暂告一段落了，也可能到此为止了。</strong></p>\n<p> <strong>注：</strong> perl运行准备</p>\n<ul>\n<li><code>echo &quot;export LC_ALL=C&quot; &gt;&gt; /root/.bashrc</code></li>\n<li><code>source /root/.bashrc </code><br></li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>生命在于折腾。</p>\n</blockquote>\n<p><br><br></p>\n","categories":["计算机"],"tags":["Linux","Debian","Apache","Nginx","服务器"]},{"title":"利器","url":"https://blog.ykqmain.com/liqi/","content":"<p>今天看到一个有意思的项目 <a href=\"http://liqi.io/community\">利器社群计划</a> ，借此机会，我也分享一下自己使用的一些小工具……</p>\n<p><mark><em><strong>Update: 2022-01</strong></em></mark></p>\n<br>\n\n\n<h2 id=\"介绍\"><a href=\"#介绍\" class=\"headerlink\" title=\"介绍\"></a>介绍</h2><p>常用ID<strong>「秋风木叶」</strong>，简称<strong>“秋叶”</strong>，取自《楚辞·九歌·湘夫人》：</p>\n<blockquote>\n<p>袅袅兮秋风，洞庭波兮木叶下。</p>\n</blockquote>\n<p>也用<code>Yang</code>这个称呼。🤓</p>\n<br>\n\n\n<h2 id=\"在用哪些硬件？\"><a href=\"#在用哪些硬件？\" class=\"headerlink\" title=\"在用哪些硬件？\"></a>在用哪些硬件？</h2><ul>\n<li><strong>iPhone 12 [Nana]</strong><ul>\n<li>AirPods 2</li>\n</ul>\n</li>\n<li><strong>MacBook Pro (13-inch, M1, 2020) (16+256) [Anna]</strong><ul>\n<li>Dell U2720QM</li>\n<li>NuPhy Air75</li>\n<li>Logitech MX Anywhere 3</li>\n<li>8BitDo Pro 2</li>\n</ul>\n</li>\n</ul>\n<br>\n\n\n<h2 id=\"软件呢？\"><a href=\"#软件呢？\" class=\"headerlink\" title=\"软件呢？\"></a>软件呢？</h2><p><strong>我喜欢精简，系统自带的软件足够好则优先使用；免费或开源的软件其次；最后才是买断制软件；订阅制软件几乎不考虑。</strong></p>\n<p><strong>在满足自己所需要功能的前提下，将自己的互联网帐号降到最低，涉及到的平台和APP减到最少。</strong></p>\n<p><strong>macOS 11 (Big Sur)</strong></p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/macOS11.png!sy\"></p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/macOS1.png!sy\"></p>\n<p><img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/macOS2.png!sy\"></p>\n<br>\n\n<ol>\n<li><p>神器：<strong>终端</strong> (Terminal.app)</p>\n<p> <img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/Terminal.png!sy\"></p>\n<ul>\n<li><p><em>为什么不是<a href=\"https://www.iterm2.com/\">iTerm2</a>？</em> iTerm2目前唯一的问题就是不能识别macOS的替身文件夹，需要用<code>ln</code>命令代替，除此之外比自带的终端好用。至于为什么不选择它，即使我很怀念iTerm2的选中复制右键粘贴功能，但我确实不需要那么多的功能。</p>\n</li>\n<li><p>Xcode命令行工具 <code>xcode-select --install</code></p>\n</li>\n<li><p>终端代理</p>\n<ul>\n<li><code>export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890</code></li>\n</ul>\n</li>\n<li><p><a href=\"http://ohmyz.sh/\"><strong>oh-my-zsh</strong></a></p>\n<ul>\n<li><a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\">zsh-syntax-highlighting</a><ul>\n<li><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</code></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/zsh-users/zsh-completions\">zsh-completions</a><ul>\n<li><code> git clone https://github.com/zsh-users/zsh-completions $&#123;ZSH_CUSTOM:=~/.oh-my-zsh/custom&#125;/plugins/zsh-completions</code></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/zsh-users/zsh-autosuggestions\">zsh-autosuggestions</a><ul>\n<li><code>git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://brew.sh/\"><strong>Homebrew</strong></a> (<code>/opt/homebrew</code>)</p>\n<ul>\n<li><a href=\"https://www.gnu.org/software/wget\">wget</a></li>\n<li><a href=\"https://httpie.io/\">httpie</a></li>\n<li><a href=\"http://mama.indstate.edu/users/ice/tree\">Tree</a></li>\n<li><a href=\"https://ffmpeg.org/\">FFmpeg</a></li>\n<li><a href=\"https://github.com/beeftornado/homebrew-rmtree\">homebrew-rmtree</a></li>\n<li><a href=\"https://github.com/tj/n\"><strong>n</strong></a> (Node.js version management)<ul>\n<li><code>sudo chown -R $(whoami) /usr/local/n</code></li>\n<li><code>sudo chown -R $(whoami) /usr/local/bin /usr/local/lib /usr/local/include /usr/local/share</code></li>\n<li><code>n lts</code> (<a href=\"https://nodejs.org/zh-cn/\">Node.js</a>)<ul>\n<li><code>npm install -g tldr</code> (<a href=\"https://github.com/tldr-pages/tldr\">tldr-pages</a>)</li>\n<li><code>npm install -g hexo-cli</code></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.python.org/\"><strong>Python</strong></a></p>\n<ul>\n<li>flake8</li>\n<li>black</li>\n<li>pip-autoremove</li>\n<li>requests</li>\n<li>beautifulsoup4</li>\n<li>openpyxl</li>\n<li>pandas</li>\n<li>pillow</li>\n<li>matplotlib</li>\n<li>jieba</li>\n<li>wordcloud</li>\n<li>python-docx</li>\n<li>mysql-connector-python</li>\n<li>sqlmodel</li>\n<li>fastapi</li>\n<li>uvicorn</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.oracle.com/java/technologies/downloads/\">JDK</a> (<a href=\"https://adoptium.net/\">OpenJDK</a>)</p>\n</li>\n<li><p><a href=\"https://dev.mysql.com/downloads/\">MySQL</a> (<code>/etc/my.cnf</code>)</p>\n</li>\n<li><p><a href=\"https://www.rust-lang.org/zh-CN/\"><del>Rust</del></a> (从入门到放弃)</p>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n\n<ol start=\"2\">\n<li><p>浏览器</p>\n<ul>\n<li>主要 <strong>Safari</strong><ul>\n<li><a href=\"https://adguard.com/zh_cn/adguard-safari/overview.html\">AdGuard</a> 或 <a href=\"https://adblockersafari.com/\">AdBlocker Pro</a> [App Store]</li>\n<li><a href=\"https://www.tampermonkey.net/\">Tampermonkey</a> [App Store]<ul>\n<li><a href=\"https://greasyfork.org/zh-CN\"><em>Greasy Fork</em></a><ul>\n<li><a href=\"https://greasyfork.org/zh-CN/scripts/375858-bilibili-autowide\">Bilibili AutoWide</a></li>\n<li><a href=\"https://greasyfork.org/zh-CN/scripts/372516-bilibili-merged-flv-mp4-ass-enhance\">bilibili merged flv+mp4+ass+enhance</a></li>\n<li><a href=\"https://greasyfork.org/zh-CN/scripts/1682-google-hit-hider-by-domain-search-filter-block-sites\">Google Hit Hider by Domain</a><br>&nbsp;</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>情怀 <a href=\"https://www.mozilla.org/en-US/firefox/all/#product-desktop-release\"><strong>Firefox</strong></a><ul>\n<li><a href=\"https://github.com/gorhill/uBlock\">uBlock Origin</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n\n<ol start=\"3\">\n<li><p>编辑器:</p>\n<ul>\n<li><p><a href=\"https://www.sublimetext.com/\"><strong>Sublime Text</strong></a><br>  <img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/Sublime.png!sy\"></p>\n<ul>\n<li><a href=\"https://packagecontrol.io/\">Package Control</a>：<a href=\"https://github.com/ykqmain/Config/blob/master/Sublime/Package%20Control.sublime-settings\"><strong>myPlugins</strong></a></li>\n<li>字体：<a href=\"https://github.com/adobe-fonts/source-code-pro\">SourceCodePro-Regular 14</a></li>\n<li>主题：Adaptive/Mariana</li>\n</ul>\n</li>\n<li><p>兜兜转转还是回到了最初的Sublime，并购买License支持了一下。我认为编辑器和IDE应该分工明确，一个快而准，一个大而全，各司其职。Sublime对我而言是足够且有意义的，希望Sublime能一直陪伴我吧，转行以后估计不常写代码了，也就用用Python，使用Sublime有一种愉悦的感觉，更重要的还是陪伴。</p>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n\n<ol start=\"4\">\n<li><p>IDE:</p>\n<p> 在我以后的生活工作中可能不再需要IDE了，保留记录、怀念一下。</p>\n<ul>\n<li><a href=\"https://code.visualstudio.com/\">VS Code</a> (<a href=\"https://github.com/features/codespaces\">GitHub Codespaces</a>)</li>\n<li><a href=\"https://www.jetbrains.com/\"><del>JetBrains</del></a></li>\n</ul>\n</li>\n</ol>\n<br>\n\n<ol start=\"5\">\n<li><p>Developer Tools:</p>\n<ul>\n<li><a href=\"https://dbeaver.io/\">DBeaver</a> (database tool) (<a href=\"https://www.eclipse.org/\">Eclipse</a>的纪念)</li>\n<li><a href=\"https://www.sourcetreeapp.com/\">Sourcetree</a> (Git GUI)</li>\n<li><a href=\"https://paw.cloud/\">Paw</a> (API tool)</li>\n<li><a href=\"https://www.wireshark.org/\">Wireshark</a> (network protocol analyzer)</li>\n<li><a href=\"https://cyberduck.io/\">Cyberduck</a> (libre server and cloud storage browser)</li>\n<li><a href=\"https://www.teamviewer.com/en/\">TeamViewer</a> (remote control)</li>\n</ul>\n</li>\n</ol>\n<br>\n\n<ol start=\"6\">\n<li><p>笔记:</p>\n<ul>\n<li><strong>备忘录.app</strong></li>\n<li>文本编辑.app (.txt)</li>\n<li>Sublime (.md)</li>\n</ul>\n</li>\n</ol>\n<br>\n\n<ol start=\"7\">\n<li><p>文档</p>\n<ul>\n<li>预览.app</li>\n<li>iWork [App Store]</li>\n<li><a href=\"https://www.wps.cn/\"><strong>WPS Office</strong></a> [App Store]</li>\n<li><a href=\"https://pdfexpert.com/\">PDF Expert</a> (PDF工具)</li>\n<li><a href=\"https://www.toketaware.com/\">iThoughtsX</a> (思维导图)<br>&nbsp;</li>\n<li><a href=\"https://www.pixelmator.com/pro/\"><strong>Pixelmator Pro</strong></a> (<del>Adobe Photoshop</del>) (干掉PS之后，达成「软件全部正版化」成就😌) [App Store]</li>\n<li>GarageBand [App Store]</li>\n<li>iMovie [App Store]</li>\n<li><a href=\"https://handbrake.fr/\">HandBrake</a> (视频转码)</li>\n</ul>\n</li>\n</ol>\n<br>\n\n<ol start=\"8\">\n<li><p>影音娱乐</p>\n<ul>\n<li>照片.app (iCloud的核心)</li>\n<li><a href=\"https://www.apple.com/itunes/\"><del>iTunes</del></a></li>\n<li>音乐.app</li>\n<li>播客.app</li>\n<li><strong>QQ音乐</strong> (MAS版本也可以使用媒体键) [App Store]<br>&nbsp;</li>\n<li>腾讯视频 [App Store]</li>\n<li>优酷 [App Store]</li>\n<li>爱奇艺 [App Store]<br>&nbsp;</li>\n<li><a href=\"http://www.videolan.org/\">VLC</a> (播放器)</li>\n<li><a href=\"https://github.com/iina/iina\">IINA</a> (播放器)</li>\n<li><a href=\"https://obsproject.com/zh-cn\">OBS</a> (直播串流和录屏)</li>\n<li>QuickTime Player<br>&nbsp;</li>\n<li><a href=\"https://openemu.org/\">OpenEmu</a>(Experimental) (video game emulation)</li>\n<li><a href=\"https://store.steampowered.com/\">Steam</a><ul>\n<li><a href=\"https://www.wesnoth.org/\">The Battle for Wesnoth</a> (turn-based strategy game with a high fantasy theme) [App Store]</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<br>\n\n<ol start=\"9\">\n<li><p>工具</p>\n<ul>\n<li><a href=\"https://weixin.qq.com/\">微信</a> [App Store]</li>\n<li><a href=\"https://im.qq.com/\">QQ</a> [App Store]</li>\n<li><a href=\"https://www.feishu.cn/\">飞书</a> (邮箱和个人项目管理)</li>\n<li><a href=\"https://ranchero.com/netnewswire\"><strong>NetNewsWire</strong></a> (RSS阅读器)<br>&nbsp;</li>\n<li><a href=\"https://www.keka.io/zh-cn\"><strong>Keka</strong></a> (压缩软件) (MAS版本支持一下) [App Store]</li>\n<li>Amphetamine (Keep Mac awake) [App Store]</li>\n<li><a href=\"https://freemacsoft.net/appcleaner\">AppCleaner</a> (卸载工具)</li>\n<li><a href=\"https://github.com/MonitorControl/MonitorControl\">MonitorControl</a> (外接显示器工具)<br>&nbsp;</li>\n<li><a href=\"https://github.com/ykqmain?tab=stars\"><strong><em>其他软件</em></strong></a></li>\n</ul>\n</li>\n</ol>\n<br>\n\n<p><strong>如无必要，勿增实体。要钱没有，一切从简。</strong><br><a href=\"https://github.com/ykqmain/Config\"><strong><font color=\"#ffc0cb\"><u>myConfig</u></font></strong></a></p>\n<br>\n\n\n<h2 id=\"推荐一件生活中的利器\"><a href=\"#推荐一件生活中的利器\" class=\"headerlink\" title=\"推荐一件生活中的利器\"></a>推荐一件生活中的利器</h2><p>生活不可无书，一手书香、一手MacBook，世界尽在掌中。</p>\n<p>推荐一套对我影响较深的书：</p>\n<img src=\"https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/sj.jpeg!sy\" width=\"720\">\n\n<blockquote>\n<p>天下熙熙，皆为利来；天下攘攘，皆为利往。</p>\n</blockquote>\n<p><br><br></p>\n","categories":["计算机"],"tags":["工具","SoftWare","Apple","Mac","macOS","iPhone","iOS","APP"]},{"title":"第一个网页","url":"https://blog.ykqmain.com/hello/","content":"<p>已拥有一台服务器，系统为 CentOS 6。</p>\n<ul>\n<li><p>打开<code>终端</code>，登录服务器：<code>ssh -p 端口 root@IP</code></p>\n</li>\n<li><p>输入密码</p>\n</li>\n</ul>\n<span id=\"more\"></span>\n\n<br>\n\n<h2 id=\"安装Apache\"><a href=\"#安装Apache\" class=\"headerlink\" title=\"安装Apache\"></a>安装Apache</h2><ol>\n<li><p>安装方式<br>CentOS安装Apache服务可以有两种方式，一种是用yum安装，一种是从官网下载源代码进行安装。这里使用yum安装。</p>\n</li>\n<li><p>输入<code>sudo yum install httpd -y</code><br>（采用该方式进行安装配置文件的默认路径为：<code>/etc/httpd/conf/httpd.conf</code>）</p>\n</li>\n<li><p>编辑配置文件，输入<code>vi /etc/httpd/conf/httpd.conf</code></p>\n</li>\n<li><p>找到如下内容<code>#ServerName www.example.com:80</code>，改为<code>ServerName localhost:80</code></p>\n</li>\n<li><p>重启一下Apache，<code>service httpd restart</code>即可。</p>\n<p>常见Apache操作：</p>\n<ul>\n<li><code>service httpd start</code> 启动</li>\n<li><code>service httpd stop</code> 停止</li>\n<li><code>service httpd restart</code> 重启</li>\n<li><code>service httpd status</code>  状态</li>\n</ul>\n</li>\n<li><p>测试是否安装成功，在本地的浏览器中输入<code>http://IP</code> ，如果出现 <code>Apache 2 Test Page powered by CentOS</code>，说明成功。</p>\n<p>如果出现错误，那就可能是iptables的问题：</p>\n<p>编辑 iptables配置，<code>vi /etc/sysconfig/iptables</code> ，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT</span><br><span class=\"line\">-A INPUT -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT</span><br></pre></td></tr></table></figure>\n\n<p>然后重启iptables、Apache。</p>\n<p>常见iptables操作：</p>\n<ul>\n<li><code>service iptables status</code> 查看当前规则</li>\n<li><code>service iptables restart</code> 重启</li>\n<li><code>service iptables stop</code> 禁用</li>\n</ul>\n</li>\n</ol>\n<p><strong>最后设置Apache开机自启 <code>chkconfig iptables on </code></strong></p>\n<p>//参考：<a href=\"http://www.linuxidc.com/Linux/2014-01/95256.htm\">CentOS Apache服务器安装与配置</a><br><br></p>\n<h2 id=\"安装MySQL\"><a href=\"#安装MySQL\" class=\"headerlink\" title=\"安装MySQL\"></a>安装MySQL</h2><ol>\n<li><p>安装方式<br>仍然是通过yum安装，查看版本信息<code>yum list | grep mysql</code> ，安装<code>yum install -y mysql-server mysql mysql-deve</code> ，查看安装好的版本<code>rpm -qi mysql-server</code> 。</p>\n</li>\n<li><p>通过<code>service mysqld start</code> 命令启动mysql服务。</p>\n</li>\n<li><p>第一次会提示很多信息，重启mysql <code>service mysqld restart</code></p>\n</li>\n<li><p><strong>最后设置MySQL开机自启 <code>chkconfig mysqld on</code></strong><br>（配置文件在 <code>/etc/my.cnf</code>）</p>\n<br></li>\n</ol>\n<hr>\n<br>\n\n<p>回到本地，编辑或创建一个名为 <code>index.html</code> 的文件，这个HTML文件就是首页。HTML中的多媒体的路径要用<strong>服务器上的相对路径</strong>或者<strong>外链</strong>。</p>\n<p><strong>将这个<code>index.html</code>送到服务器上的<code>/var/www/html</code>目录下即可</strong>，在本地和服务器传文件有很多方法，比如：scp、ftp、sftp…</p>\n<ul>\n<li>scp的方法：<code>scp -P 端口 本地文件路径 root@IP:服务器路径</code></li>\n</ul>\n<p>在浏览器输入服务器IP或者域名就可以看到最新效果。<br><br></p>\n<p><strong>Enjoy it!</strong></p>\n<p><br><br></p>\n","categories":["计算机"],"tags":["Linux","Apache","服务器","Web"]},{"title":"TimeLine","url":"https://blog.ykqmain.com/TimeLine/index.html","content":"","categories":[],"tags":[]},{"title":"about","url":"https://blog.ykqmain.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"https://blog.ykqmain.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"https://blog.ykqmain.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"https://blog.ykqmain.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"https://blog.ykqmain.com/css/personal-style.css","content":"html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('https://ianna.oss-cn-hangzhou.aliyuncs.com/main/bg.png');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}","categories":[],"tags":[]},{"title":"category","url":"https://blog.ykqmain.com/category/index.html","content":"","categories":[],"tags":[]}]