<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iAnna</title>
  
  <subtitle>Life &amp; Technology</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.ykqmain.com/"/>
  <updated>2021-04-20T13:07:16.297Z</updated>
  <id>https://blog.ykqmain.com/</id>
  
  <author>
    <name>秋风木叶</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Debian</title>
    <link href="https://blog.ykqmain.com/linux/"/>
    <id>https://blog.ykqmain.com/linux/</id>
    <published>2019-04-17T16:00:00.000Z</published>
    <updated>2021-04-20T13:07:16.297Z</updated>
    
    <content type="html"><![CDATA[<p>大一的时候折腾过Windows和Ubuntu桌面版双系统，后来换了Mac，接触的Linux服务器一直是CentOS，所以这次趁阿里云优惠尝试一下Debian练练手。</p><p>拿到一个新的Linux机器，应该怎么开始？本文想从头记录Debian的折腾过程，</p><p>生命在于折腾。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">本机：</span><br><span class="line"><span class="selector-tag">macOS</span> 10<span class="selector-class">.14</span><span class="selector-class">.4</span></span><br><span class="line">终端<span class="selector-class">.app</span></span><br><span class="line"><span class="selector-tag">Cyberduck</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Windows</span> 10</span><br><span class="line"><span class="selector-tag">Xshell</span></span><br><span class="line"><span class="selector-tag">Xftp</span></span><br><span class="line"></span><br><span class="line">服务器：</span><br><span class="line"><span class="selector-tag">Debian</span> 9<span class="selector-class">.8</span> <span class="selector-tag">x64</span></span><br></pre></td></tr></table></figure><p><br></p><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p><code>ssh user@IP -p port</code></p><p><br></p><h2 id="版本和名字"><a href="#版本和名字" class="headerlink" title="版本和名字"></a>版本和名字</h2><ol><li><p>查看Linux内核版本</p><ul><li><p><code>cat /proc/version</code></p><ul><li><code>Linux version 4.9.0-9-amd64 (debian-kernel@lists.debian.org) (gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1) ) #1 SMP Debian 4.9.168-1 (2019-04-12)</code></li></ul></li><li><p><code>uname -a</code></p><ul><li><code>Linux Anna2 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1 (2019-04-12) x86_64 GNU/Linux</code></li></ul></li></ul></li><li><p>查看Linux系统版本</p><ul><li><p><code>lsb_release -a</code></p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">No</span> <span class="string">LSB</span> <span class="string">modules</span> <span class="string">are</span> <span class="string">available.</span></span><br><span class="line"><span class="string">Distributor</span> <span class="attr">ID:</span><span class="string">Debian</span></span><br><span class="line"><span class="attr">Description:</span><span class="string">Debian</span> <span class="string">GNU/Linux</span> <span class="number">9.8</span> <span class="string">(stretch)</span></span><br><span class="line"><span class="attr">Release:</span><span class="number">9.8</span></span><br><span class="line"><span class="attr">Codename:</span><span class="string">stretch</span></span><br></pre></td></tr></table></figure></li><li><p><code>cat /etc/issue</code></p></li><li><code>cat /etc/redhat-release</code> (红帽系，RHEL、CentOS)</li></ul></li><li><p>修改机器名</p><ul><li><p>查看</p><ul><li><code>hostnamectl</code></li></ul></li><li><p>修改</p><ul><li><code>hostnamectl set-hostname Anna2</code></li><li><code>vim /etc/hostname</code></li><li><code>vim /etc/hosts</code></li></ul></li><li><p>重启</p><ul><li><code>reboot</code></li></ul></li></ul></li></ol><p><br></p><h2 id="ssh免密登录"><a href="#ssh免密登录" class="headerlink" title="ssh免密登录"></a>ssh免密登录</h2><ol><li><p>apt包管理 (.DEB)</p><ul><li>macOS有<code>brew</code>, CentOS有<code>yum</code>, Debian/Ubuntu有<code>apt-get</code></li><li>一般来说，也许Red Hat系和Debian系的差别，也就是<code>yum</code>和<code>apt-get</code>的差别了。</li><li>apt-get, apt, aptitude三者有区别，但是大体来说差别不大。我倾向于用<code>apt</code>，因为它输入最方便。</li><li>常用命令：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apt search  搜索包</span><br><span class="line">apt show  显示包的信息</span><br><span class="line">apt install  安装</span><br><span class="line">apt <span class="builtin-name">remove</span>  移除</span><br><span class="line">apt purge  移除软件和配置文件</span><br><span class="line">apt update  更新源</span><br><span class="line">apt<span class="built_in"> upgrade </span> 升级所有可升级的软件包</span><br><span class="line">apt list  列出包含条件的包（已安装，可升级等）</span><br><span class="line">apt autoremove  自动删除不需要的包</span><br></pre></td></tr></table></figure></li></ul></li><li><p>准备工作</p><ul><li>更新源，<code>apt update</code></li><li>升级软件，<code>apt upgrade</code></li><li>安装build工具，<code>apt install build-essential</code> (CentOS有<code>yum groupinstall &quot;Development Tools&quot;</code>)</li></ul></li><li><p>ssh</p><ol><li><p>生成<code>ssh keys</code>，参考<a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="noopener">Generating a new SSH key</a> 或者 <a href="http://git-scm.com/book/zh/v2/服务器上的-Git-生成-SSH-公钥" target="_blank" rel="noopener">Git-生成-SSH-公钥</a></p></li><li><p>上传公钥<code>id_rsa.pub</code>到服务器的<code>~/.ssh</code>目录</p></li><li><p>写入<code>authorized_keys</code></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa<span class="selector-class">.pub</span> &gt;&gt; authorized_keys</span><br><span class="line">chmod <span class="number">700</span> ~/.ssh</span><br><span class="line">chmod <span class="number">644</span> ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>修改ssh配置文件</p><ul><li><p><code>vim /etc/ssh/sshd_config</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">port</span>    <span class="comment"># 修改为任意，我设置为1024。</span></span><br><span class="line"><span class="string">PermitRootLogin</span> <span class="literal">yes</span>    <span class="comment"># 开发机器，用root方便。配置其他管理员用户，权限命令需要sudo或者su切换用户。</span></span><br><span class="line"><span class="string">PubkeyAuthentication</span> <span class="literal">yes</span></span><br><span class="line"><span class="string">AuthorizedKeysFile</span>  <span class="string">.ssh/authorized_keys</span> <span class="string">.ssh/authorized_keys2</span></span><br><span class="line"><span class="string">PasswordAuthentication</span> <span class="literal">no</span>    <span class="comment"># 禁止密码登陆</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>重启sshd服务，<code>systemctl restart sshd.service</code></p></li><li><p>阿里云有个坑，它自带一个<code>安全组规则</code>，ssh更改端口之后，必须在那里也开启<code>相应的入方向tcp端口</code>，我开启了用于ssh的1024端口，顺便配置了用于http的1126端口（因为A解析不备案也无法访问，所以就用<code>IP:port</code>直接访问了。）</p></li><li><p>重启机器后再测试能不能免密登录，<code>reboot</code></p></li></ol></li></ol><p><br></p><h2 id="配置终端"><a href="#配置终端" class="headerlink" title="配置终端"></a>配置终端</h2><p>ssh上去就是终端，整天跟它打交道，必须要趁手，</p><ol><li><p>安装几个工具</p><ul><li><p><code>apt install XXX</code></p><ul><li><code>p7zip</code></li><li><code>git</code></li><li><code>tree</code></li><li><code>dos2unix</code></li><li><code>pip3</code>, Debian9自带Python3.5，但是没有pip3，使用<code>apt install python3-pip</code>安装。</li></ul></li><li><p>pip3</p><ul><li>Requests<br><br></li></ul></li></ul></li></ol><ol start="2"><li><p>安装oh-my-zsh (可选的，服务器很卡，bash也能用)</p><ol><li>安装zsh，<code>apt install zsh</code></li><li>安装oh-my-zsh，<code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></li><li>配置<code>.zshrc</code>，我把本地的配置文件传上去，稍作修改。</li><li><p>因为这是配置好了的文件，要先把主题和插件准备好了之后再source。</p><ul><li><p>自定义preference主题，将本地的<code>preference.zsh-theme</code>上传到<code>~/.oh-my-zsh/custom/themes</code>，稍作修改。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copied and modified from the oh-my-zsh theme from clean</span></span><br><span class="line"></span><br><span class="line">if [ $UID -eq 0 ]; then NCOLOR="red"; else NCOLOR="white"; fi</span><br><span class="line"><span class="comment"># 如果UID等于0(root)，则为红色，否则为白色</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">local</span> ret_status=<span class="string">"%(?:%&#123;<span class="variable">$fg</span>[green]%&#125;%B&gt;%b :%&#123;<span class="variable">$fg</span>[red]%&#125;%B&gt;%b )"</span></span><br><span class="line"><span class="comment"># 命令正确则为绿色，否则为红色</span></span><br><span class="line"></span><br><span class="line">PROMPT=<span class="string">'%&#123;<span class="variable">$fg</span>[<span class="variable">$NCOLOR</span>]%&#125;%n%&#123;<span class="variable">$reset_color</span>%&#125;@%&#123;<span class="variable">$fg</span>[white]%&#125;%m%&#123;<span class="variable">$reset_color</span>%&#125;:%&#123;<span class="variable">$fg</span>[blue]%&#125;%B%c%b%&#123;<span class="variable">$reset_color</span>%&#125;$(git_prompt_info) <span class="variable">$&#123;ret_status&#125;</span>'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 颜色</span></span><br><span class="line"><span class="comment"># black, red, green, yellow, blue, magenta, cyan, white</span></span><br><span class="line"><span class="comment"># 黑，红，绿，黄，蓝，洋红(紫)，青色，白色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------- </span></span><br><span class="line"><span class="comment"># %n  用户名</span></span><br><span class="line"><span class="comment"># %M  计算机的主机名</span></span><br><span class="line"><span class="comment"># %m  计算机的主机名（在第一个句号之前截断）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %d  目前的工作目录</span></span><br><span class="line"><span class="comment"># %~  目前的工作目录相对于～的相对路径</span></span><br><span class="line"><span class="comment"># %l  当前的tty</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %T  系统时间（时：分）</span></span><br><span class="line"><span class="comment"># %*  系统时间（时：分：秒）</span></span><br><span class="line"><span class="comment"># %D  系统日期（年-月-日）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %B - %b 开始到结束使用粗体打印</span></span><br><span class="line"><span class="comment"># %U - %u 开始到结束使用下划线打印</span></span><br><span class="line"><span class="comment"># --------------------- </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git theming</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_PREFIX=<span class="string">"%&#123;<span class="variable">$fg_bold</span>[white]%&#125;(%&#123;<span class="variable">$fg_bold</span>[yellow]%&#125;%B"</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_SUFFIX=<span class="string">"%b%&#123;<span class="variable">$fg_bold</span>[white]%&#125;)%&#123;<span class="variable">$reset_color</span>%&#125;"</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_CLEAN=<span class="string">"%&#123;<span class="variable">$fg_bold</span>[green]%&#125; ✔"</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_DIRTY=<span class="string">"%&#123;<span class="variable">$fg_bold</span>[red]%&#125; ✗"</span></span><br></pre></td></tr></table></figure></li><li><p>下载相关插件</p><ul><li><a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener">zsh-syntax-highlighting</a></li><li><a href="https://github.com/zsh-users/zsh-completions" target="_blank" rel="noopener">zsh-completions</a></li><li><a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener">zsh-autosuggestions</a></li></ul></li></ul></li><li><p><code>source .zshrc</code>，oh-my-zsh就配置好了。<br><br></p></li></ol></li></ol><ol start="3"><li><p>配置Vim</p><p> oh-my-zsh是平台，Vim就是双手。</p><ul><li><p>开启终端鼠标复制</p><ul><li><code>vim /etc/vim/vimrc</code> (<code>vim /usr/share/vim/vim80/defaults.vim</code> 70行)</li><li><code>set mouse=c</code></li></ul></li><li><p>上传本地<code>.vimrc</code>到服务器，稍作修改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">" Configuration file for vim</span><br><span class="line"><span class="keyword">set</span> modelines=<span class="number">0</span><span class="string">" CVE-2007-2438</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Normally we <span class="keyword">use</span> vim-extensions. <span class="keyword">If</span> you want <span class="literal">true</span> vi-<span class="keyword">compatibility</span></span><br><span class="line"><span class="string">" remove change the following statements</span></span><br><span class="line"><span class="string">set nocompatible"</span> <span class="keyword">Use</span> Vim <span class="keyword">defaults</span> instead <span class="keyword">of</span> <span class="number">100</span>% vi <span class="keyword">compatibility</span></span><br><span class="line"><span class="keyword">set</span> backspace=<span class="number">2</span><span class="string">" more powerful backspacing</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">"</span> Don<span class="string">'t write backup file if vim is being called by "crontab -e"</span></span><br><span class="line"><span class="string">au BufWrite /private/tmp/crontab.* set nowritebackup nobackup</span></span><br><span class="line"><span class="string">" Don'</span>t write <span class="keyword">backup</span> <span class="keyword">file</span> <span class="keyword">if</span> vim <span class="keyword">is</span> being called <span class="keyword">by</span> <span class="string">"chpass"</span></span><br><span class="line">au BufWrite /<span class="keyword">private</span>/etc/pw.* <span class="keyword">set</span> nowritebackup nobackup</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> fileencodings=utf<span class="number">-8</span>,gb18030</span><br><span class="line"><span class="keyword">set</span> termencoding=utf<span class="number">-8</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">encoding</span>=utf<span class="number">-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">number</span></span><br><span class="line">syntax <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> expandtab</span><br><span class="line"><span class="keyword">set</span> softtabstop=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> shiftwidth=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> smartindent</span><br></pre></td></tr></table></figure></li><li><p>Vim常用操作</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">esc    从编辑模式切换到命令模式</span><br><span class="line"></span><br><span class="line">a      切换到编辑模式，在光标后插入</span><br><span class="line">o      切换到编辑模式，在光标下一行插入</span><br><span class="line"></span><br><span class="line">v      可视模式</span><br><span class="line">r      取代模式</span><br><span class="line"> </span><br><span class="line">命令模式下：</span><br><span class="line">Ctrl+b 向上翻页</span><br><span class="line">Ctrl+d 向下翻页</span><br><span class="line">/      光标之后搜索</span><br><span class="line">?      光标之前搜索</span><br><span class="line"></span><br><span class="line">n&lt;space&gt; 光标向右移动n个字符</span><br><span class="line">n&lt;Enter&gt; 光标向下移动n行</span><br><span class="line"><span class="number">0</span>      光标移到行首</span><br><span class="line"><span class="variable">$ </span>     光标移到行尾</span><br><span class="line"></span><br><span class="line">G      跳至文件末尾</span><br><span class="line">ggdG   清空内容，光标移动到首字符，删除到尾部</span><br><span class="line"></span><br><span class="line">u      撤销操作</span><br><span class="line">Ctrl+r 重做上一个动作</span><br><span class="line"></span><br><span class="line">d      剪切</span><br><span class="line">dd     删除光标那一行字符</span><br><span class="line">dw     删除当前光标所在位置到单词尾字符</span><br><span class="line">d<span class="number">0</span>     删除光标到行首的字符</span><br><span class="line">d<span class="variable">$ </span>    删除光标到行尾的字符</span><br><span class="line">y      复制</span><br><span class="line">y2     复制单词</span><br><span class="line">p      粘贴（将已复制的数据在光标下一行粘贴）</span><br><span class="line">x      删除当前光标所在处的字符（向后删除一个字符）</span><br><span class="line"></span><br><span class="line"><span class="symbol">:wq</span>    保存退出</span><br><span class="line"><span class="symbol">:q</span>     退出</span><br><span class="line"><span class="symbol">:q!</span>    强制退出</span><br><span class="line"><span class="symbol">:w</span> [filename] 将编辑的数据另存为</span><br></pre></td></tr></table></figure></li></ul></li></ol><p><br></p><h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><p>CentOS7已经默认使用Firewalld了，Firewalld的防火墙本质上是建立在原生的iptable防火墙之上的抽象层，再加上Firewalld默认关闭所有端口，需要哪个开哪个，以及命令也比较灵活，所以在Debian上我也想用Firewalld。</p><ol><li><p>安装</p><ul><li><code>apt install firewalld</code></li><li><code>firewall-cmd --version</code> 查看版本</li></ul></li><li><p>启动</p><ul><li><code>systemctl start firewalld</code> 启动</li><li><code>systemctl enable firewalld</code> 开机启动</li><li><code>firewall-cmd --state</code> 运行状态</li><li><code>systemctl status firewalld</code> 查看FirewallD守护进程的状态</li></ul></li><li><p>使用</p><p> Firewalld的配置可通过三种方式：</p> <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-<span class="keyword">cmd</span><span class="bash">    <span class="comment"># 命令行的用户接口，常用</span></span></span><br><span class="line"><span class="bash">/etc/firewalld/    <span class="comment"># 目录下的xml文件，编辑xml文件实现firewall的配置</span></span></span><br><span class="line"><span class="bash">firewall-config    <span class="comment"># 图形界面接口，终端上无法使用</span></span></span><br></pre></td></tr></table></figure></li><li><p>服务和端口</p><p> 默认支持的服务的配置文件位于<code>/usr/lib/firewalld/services</code>，用户创建的服务文件在<code>/etc/firewalld/services</code>中。</p><ul><li><code>firewall-cmd --list-all</code> 列出配置的所有防火墙规则</li><li><code>firewall-cmd --get-services</code> 查看启用的所有服务的列表</li><li><code>firewall-cmd --add-service=http --permanent</code> 启用http服务</li><li><code>firewall-cmd --add-port=1024/tcp --permanent</code> 启用tcp端口1024</li><li><code>firewall-cmd --add-port=5000-5200/udp --permanent</code> 启用udp端口一个地址段</li><li><code>firewall-cmd --reload</code> 重新加载 FirewallD 配置</li><li>禁用服务或端口，将add改为<code>remove</code></li></ul></li><li><p>区域管理</p><p> “区域”是针对给定位置或场景（例如家庭、公共、受信任等）可能具有的各种信任级别的预构建规则集。不同的区域允许不同的网络服务和入站流量类型，而拒绝其他任何流量。 首次启用 FirewallD 后，public 将是默认区域。</p><ul><li><code>firewall-cmd --get-default-zone</code> 默认区域</li><li><code>firewall-cmd --set-default-zone=internal</code> 修改默认区域</li><li><code>firewall-cmd --zone=public --list-all</code> 得到特定区域的所有配置</li><li><code>firewall-cmd --list-all-zones</code> 得到所有区域的配置</li><li><code>firewall-cmd --zone=public --add-port=12345/tcp --permanent</code> 启用特定区域的端口</li></ul></li></ol><p>与阿里云安全组规则对应，我开启了<code>22/tcp 1024/tcp 1126/tcp</code>四个端口，每次配置之后，运行<code>firewall-cmd --reload</code> 重新加载FirewallD使其生效。</p><p><br></p><h2 id="Systemd"><a href="#Systemd" class="headerlink" title="Systemd"></a>Systemd</h2><p>不知道从何时开始，发现Systemd真的很方便用于系统服务管理。</p><ol><li><p>systemctl</p><p> <code>systemctl</code>是Systemd的主命令，用于管理系统。</p><ol><li><p>检查</p><ul><li><code>systemctl --version</code></li><li><code>whereis systemd</code> 安装位置</li><li><code>whereis systemctl</code></li></ul></li><li><p>使用</p><ul><li><code>systemctl list-unit-files</code> 列出所有可用单元</li><li><code>systemctl list-units</code> 列出所有运行中单元</li><li><p><code>systemctl --failed</code> 列出所有失败单元</p></li><li><p><code>systemctl list-unit-files --type=service</code> 列出所有服务（包括启用的和禁用的）  </p></li><li><code>systemctl is-active nginx.service</code> 查看服务是否运行</li><li><code>systemctl is-enabled nginx</code> 查看服务是否设置为开机启动（不带后缀默认就是<code>.service</code>单元，其他的单元比如<code>.mount .sockets .device .target</code>都必须指定类型）</li><li><code>systemctl status firewalld.service</code> 检查某个单元或服务状态</li></ul></li><li><p>管理</p><ul><li><code>systemctl status httpd.service</code> 检查状态</li><li><code>systemctl start httpd.service</code> 启动</li><li><code>systemctl reload httpd.service</code> 重载</li><li><code>systemctl restart httpd.service</code> 重启</li><li><code>systemctl stop httpd.service</code> 停止</li><li><code>systemctl show httpd</code> 检查某个服务的所有配置细节</li><li><code>systemctl kill httpd</code> 杀死服务</li></ul></li><li><p>开机自启</p><ul><li><code>systemctl is-active httpd.service</code> 激活服务</li><li><code>systemctl enable httpd.service</code> 开机自启</li><li><code>systemctl disable httpd.service</code> 禁用</li></ul></li><li><p>管理套接口</p><p> 与服务类似。</p><ul><li><code>systemctl list-unit-files --type=socket</code> 列出所有可用系统套接口</li><li><code>systemctl status cups.socket</code></li><li><code>systemctl start cups.socket</code></li><li><code>systemctl reload cups.socket</code></li><li><code>systemctl restart cups.socket</code></li><li><code>systemctl stop cups.socket</code><br><br></li></ul></li></ol></li><li><p><code>hostnamectl</code> 查看当前主机的信息，最开始用过。</p></li><li><p><code>localectl</code> 查看本地化设置</p></li><li><p><code>timedatectl</code> 查看当前时区设置</p></li><li><p><code>loginctl</code> 查看当前登录的用户</p></li></ol><p><br></p><h2 id="LNMP环境"><a href="#LNMP环境" class="headerlink" title="LNMP环境"></a>LNMP环境</h2><p>LNMP代表的就是，<code>Linux+Nginx+MySQL/MariaDB+PHP/Python/Perl</code>这种网站服务器架构。</p><ol><li><p>Nginx安装</p><ol><li><p>安装</p><ul><li><code>apt install nginx</code></li></ul></li><li><p>启动</p><ul><li><code>whereis nginx</code> 查看位置</li><li><code>/etc/nginx/nginx.conf</code> 配置文件</li><li><code>/etc/nginx/sites-enabled/</code>，修改<code>default</code>文件中的端口为<code>1126</code>。</li><li><code>systemctl start nginx</code> 启动nginx</li><li><code>systemctl enable nginx</code> 开机自启</li><li><code>systemctl status nginx</code> 查看状态</li><li><code>systemctl restart nginx</code> 重启Nginx</li></ul></li><li><p>检查<br> 在浏览器输入<code>IP:port</code>访问网址，有<code>Welcome to nginx!</code>则成功。<br> 网站根目录，<code>/var/www/html</code><br><br></p></li></ol></li><li><p>MySQL安装</p><ol><li><p>安装</p><ul><li><code>apt install mysql-server</code></li><li><code>apt install mysql-client</code></li></ul></li><li><p>检查</p><ul><li><code>mysql --version</code> 发现安装的实际是MariaDB，早已听闻开源界和Oracle的爱恨情仇。由于两者的兼容性，我也不想更换了，正好可以尝试一下MariaDB。(如果想非MySQL不可，可以<a href="https://dev.mysql.com/downloads/repo/apt/" target="_blank" rel="noopener">离线安装</a>)</li></ul></li><li><p>登录</p><ul><li><code>mysql -u root -p</code></li></ul></li><li><p><code>/etc/mysql/my.cnf</code></p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8mb4</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span>=utf8mb4</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">character-set-server</span>=utf8mb4</span><br><span class="line"></span><br><span class="line"><span class="attr">bind-address</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br></pre></td></tr></table></figure></li><li><p>远程登录（开启端口）</p><ul><li><code>grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;密码&#39;;</code></li><li><code>flush privileges;</code><br><br></li></ul></li></ol></li><li><p>其他</p><p> 后端不太想用PHP，Debian自带Python3和perl。</p><p> <strong>至此，一个基础的Linux环境就弄好了。由此来看，也许Red Hat系和Debian系真的就是<code>yum</code>和<code>apt-get</code>的差别了。可以暂告一段落了。</strong></p><p> <strong>注：</strong> perl运行准备</p><ul><li><code>echo &quot;export LC_ALL=C&quot; &gt;&gt; /root/.bashrc</code></li><li><code>source /root/.bashrc</code></li></ul></li></ol><p><br><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大一的时候折腾过Windows和Ubuntu桌面版双系统，后来换了Mac，接触的Linux服务器一直是CentOS，所以这次趁阿里云优惠尝试一下Debian练练手。&lt;/p&gt;
&lt;p&gt;拿到一个新的Linux机器，应该怎么开始？本文想从头记录Debian的折腾过程，&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="计算机" scheme="https://blog.ykqmain.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="Linux" scheme="https://blog.ykqmain.com/tags/Linux/"/>
    
      <category term="Apache" scheme="https://blog.ykqmain.com/tags/Apache/"/>
    
      <category term="服务器" scheme="https://blog.ykqmain.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="Debian" scheme="https://blog.ykqmain.com/tags/Debian/"/>
    
      <category term="Nginx" scheme="https://blog.ykqmain.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>利器</title>
    <link href="https://blog.ykqmain.com/liqi/"/>
    <id>https://blog.ykqmain.com/liqi/</id>
    <published>2016-01-03T16:00:00.000Z</published>
    <updated>2021-04-20T12:33:41.818Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到一个有意思的项目 <a href="http://liqi.io/community" target="_blank" rel="noopener">利器社群计划</a> ，借此机会，我也分享一下自己使用的一些小工具……</p><p><mark><em><strong>Update: 2021-04</strong></em></mark><br><br></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>昵称 <strong>秋风木叶</strong>，或 <em>Yang</em>。🤓<br><br><br></p><h2 id="你都在使用哪些硬件？"><a href="#你都在使用哪些硬件？" class="headerlink" title="你都在使用哪些硬件？"></a>你都在使用哪些硬件？</h2><ul><li>MacBook Pro (13-inch, M1, 2020) (16+256) [Anna]</li><li>iPhone 12 [Nana]<br><br><br></li></ul><h2 id="软件呢？"><a href="#软件呢？" class="headerlink" title="软件呢？"></a>软件呢？</h2><p><strong>我喜欢精简，系统自带的软件足够好则优先使用；免费或开源的软件其次；最后才是买断制收费软件；订阅制软件几乎不考虑。</strong></p><p><strong>在满足自己所需要功能的前提下，将自己的互联网帐号降到最低，涉及到的平台和APP减到最少。</strong></p><p><strong>macOS 11 (Big Sur)</strong></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/macOS11.png!sy" alt=""></p><ol><li><p>神器：<strong>终端</strong> (Terminal.app)</p><p> <img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/Terminal.png!sy" alt=""></p><ul><li><p><em>为什么不是<a href="https://www.iterm2.com" target="_blank" rel="noopener">iTerm2</a>？</em> iTerm2目前唯一的问题就是不能识别macOS的替身文件夹，需要用<code>ln</code>命令代替，除此之外比自带的终端好用。至于为什么不选择它，即使我很怀念iTerm2的选中复制右键粘贴功能，但我确实不需要那么多的功能。</p></li><li><p>Xcode命令行工具 <code>xcode-select --install</code></p></li><li><p>终端代理</p><ul><li><code>export https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890</code><br><br></li></ul></li><li><a href="http://ohmyz.sh" target="_blank" rel="noopener"><strong>oh-my-zsh</strong></a><ul><li><a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener">zsh-syntax-highlighting</a><ul><li><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting</code></li></ul></li><li><a href="https://github.com/zsh-users/zsh-completions" target="_blank" rel="noopener">zsh-completions</a><ul><li><code>git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions</code></li></ul></li><li><a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener">zsh-autosuggestions</a><ul><li><code>git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions</code></li></ul></li><li>权限问题<ul><li><code>chmod 755 /usr/local/share/zsh</code></li><li><code>chmod 755 /usr/local/share/zsh/site-functions</code><br><br></li></ul></li></ul></li><li><a href="https://brew.sh" target="_blank" rel="noopener"><strong>Homebrew</strong></a> (<code>/opt/homebrew</code>)<ul><li><a href="https://www.gnu.org/software/wget" target="_blank" rel="noopener">wget</a></li><li><a href="http://mama.indstate.edu/users/ice/tree" target="_blank" rel="noopener">tree</a></li><li><a href="https://tldr.sh" target="_blank" rel="noopener">tldr</a><ul><li><code>td -u</code></li></ul></li><li><a href="https://ffmpeg.org" target="_blank" rel="noopener">ffmpeg</a></li><li><a href="https://you-get.org" target="_blank" rel="noopener">you-get</a><br><br></li></ul></li><li><a href="https://www.python.org" target="_blank" rel="noopener"><strong>Python</strong></a><ul><li>缓存目录 <code>~/Library/Caches/pip</code></li><li><code>pip3 config set global.index-url https://pypi.doubanio.com/simple</code><ul><li>requests</li><li>beautifulsoup4</li><li>openpyxl</li><li>pandas</li><li>xlutils</li><li>matplotlib</li><li>mysqlclient (先安装MySQL)</li><li>Django</li><li>Flask</li><li>fastapi</li><li>uvicorn<br><br></li></ul></li></ul></li><li><a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">Node.js</a><ul><li><code>sudo chown -R $(whoami) /usr/local/lib/node_modules</code></li><li><code>npm config set registry https://registry.npm.taobao.org</code><ul><li><code>npm install n -g</code></li><li><code>npm install hexo-cli -g</code></li><li><code>npm list -g --depth 0</code><br><br></li></ul></li></ul></li><li><a href="https://adoptopenjdk.net" target="_blank" rel="noopener">AdoptOpenJDK</a></li><li><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">MySQL</a><ul><li><code>/private/etc/my.cnf</code></li></ul></li><li><a href="https://www.rust-lang.org/zh-CN/" target="_blank" rel="noopener"><del>Rust</del></a> (从入门到放弃)<br><br></li></ul></li><li><p>浏览器</p><ul><li>主要 <strong>Safari</strong><ul><li><a href="https://adguard.com/zh_cn/adguard-safari/overview.html" target="_blank" rel="noopener">AdGuard for Safari</a> 或 <a href="https://adblockersafari.com" target="_blank" rel="noopener">AdBlocker Pro for Safari</a> [App Store]</li><li><a href="https://www.tampermonkey.net/" target="_blank" rel="noopener">Tampermonkey</a> [App Store]<ul><li><a href="https://greasyfork.org/zh-CN/scripts/371672-哔哩哔哩-bilibili-com-播放器调整r-ver-stardust" target="_blank" rel="noopener">哔哩哔哩播放器调整R</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/372516-bilibili-merged-flv-mp4-ass-enhance" target="_blank" rel="noopener">bilibili merged flv+mp4+ass+enhance</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/1682-google-hit-hider-by-domain-search-filter-block-sites" target="_blank" rel="noopener">Google Hit Hider by Domain</a><br><br></li></ul></li></ul></li><li>情怀 <a href="https://www.mozilla.org/en-US/firefox/all/#product-desktop-release" target="_blank" rel="noopener">Firefox</a><ul><li><a href="https://github.com/gorhill/uBlock" target="_blank" rel="noopener">uBlock Origin</a><br><br></li></ul></li></ul></li><li><p>编辑器:</p><ul><li><p><a href="https://www.sublimetext.com" target="_blank" rel="noopener"><strong>Sublime Text</strong></a><br>  <img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/Sublime.png!sy" alt=""></p><ul><li><strong><em>Plugins</em></strong> (<code>~/Library/Application Support/Sublime Text/Packages</code>)<ul><li>BracketHighlighter</li><li>Color Highlight</li><li>Emmet</li><li>FileIcons</li><li><em>Package Control</em></li><li>PackageResourceViewer</li><li>SideBarEnhancements<br><br></li></ul></li><li>字体 <a href="https://github.com/adobe-fonts/source-code-pro" target="_blank" rel="noopener"><strong>SourceCodePro-Regular 14</strong></a></li><li>主题 <strong>Mariana</strong></li></ul></li><li><p>兜兜转转还是回到了最初的Sublime，并购买License支持了一下。我认为编辑器和IDE应该分工明确，一个快而准，一个大而全，各司其职。对于别人我还是推荐VSCode，一是免费，二是开箱即用。希望Sublime能一直陪伴我吧，转行以后估计不常写代码了，也就用用Python，使用Sublime有一种愉悦的感觉，最重要的还是值得纪念。<br><br></p></li></ul></li><li><p>IDE:</p><ul><li><a href="https://code.visualstudio.com" target="_blank" rel="noopener">VS Code</a> (加插件打造免费全面的IDE)<ul><li><strong><em>Extensions</em></strong> (<code>~/Library/Application Support/Code/User</code>)<ul><li>Chinese (Simplified) Language Pack</li><li>Atom One Dark Theme</li><li>vscode-icons</li><li>Python<br><br></li></ul></li></ul></li><li><strong>Xcode</strong> [App Store]</li><li><a href="https://www.eclipse.org/downloads/packages" target="_blank" rel="noopener">Eclipse</a></li><li><a href="https://www.jetbrains.com" target="_blank" rel="noopener"><del>JetBrains</del></a><br><br></li></ul></li><li><p>Developer Tools:</p><ul><li><a href="https://dbeaver.io" target="_blank" rel="noopener">DBeaver</a> (数据库)</li><li><a href="https://www.sourcetreeapp.com" target="_blank" rel="noopener">Sourcetree</a> (Git GUI)</li><li><a href="https://paw.cloud" target="_blank" rel="noopener">Paw</a> (<a href="https://hoppscotch.io/cn" target="_blank" rel="noopener">Hoppscotch</a>) (API tool)</li><li><a href="https://www.wireshark.org" target="_blank" rel="noopener">Wireshark</a> (网络协议分析)</li><li><a href="https://cyberduck.io" target="_blank" rel="noopener">Cyberduck</a> (FTP client)<br><br></li></ul></li><li><p>笔记:</p><ul><li><strong>备忘录</strong></li><li><strong>Sublime</strong> (.md)<br><br></li></ul></li><li><p>文档</p><ul><li>预览.app</li><li>iWork [App Store]</li><li><a href="https://www.wps.cn" target="_blank" rel="noopener"><strong>WPS Office</strong></a> [App Store]</li><li><a href="https://pdfexpert.com" target="_blank" rel="noopener">PDF Expert</a> (PDF编辑)</li><li><a href="https://www.toketaware.com" target="_blank" rel="noopener">iThoughtsX</a> (思维导图)<br><br></li><li>Photoshop</li><li>GarageBand [App Store]</li><li>iMovie [App Store]</li><li><a href="https://handbrake.fr" target="_blank" rel="noopener">HandBrake</a> (视频转码)<br><br></li></ul></li><li><p>影音娱乐</p><ul><li>照片.app (iCloud的核心)</li><li>音乐.app</li><li>播客.app</li><li><strong>QQ音乐</strong> (MAS版本也可以使用媒体键) [App Store]</li><li>腾讯视频 [App Store]</li><li>优酷 [App Store]</li><li>爱奇艺 [App Store]<br><br></li><li><a href="https://obsproject.com/zh-cn" target="_blank" rel="noopener">OBS</a> (直播串流和录屏)</li><li><a href="http://www.videolan.org" target="_blank" rel="noopener">VLC</a> (播放器)</li><li><a href="https://iina.io" target="_blank" rel="noopener">IINA</a> (播放器)</li><li>QuickTime Player</li><li><a href="https://openemu.org/" target="_blank" rel="noopener">OpenEmu</a> (video game emulation)</li><li><a href="https://www.wesnoth.org" target="_blank" rel="noopener">The Battle for Wesnoth</a> (open source, turn-based strategy game with a high fantasy theme) [App Store]</li><li><strong><del>iTunes</del></strong> (一个时代结束了)<br><br></li></ul></li><li><p>工具</p><ul><li><a href="https://www.keka.io/zh-cn" target="_blank" rel="noopener"><strong>Keka</strong></a> (压缩软件)</li><li><a href="https://weixin.qq.com" target="_blank" rel="noopener">微信</a> [App Store]</li><li><a href="https://im.qq.com" target="_blank" rel="noopener">QQ</a> [App Store]</li><li><a href="https://ranchero.com/netnewswire" target="_blank" rel="noopener"><strong>NetNewsWire</strong></a> (RSS阅读器)</li><li>Amphetamine (Keep Mac awake) [App Store]</li><li><a href="https://freemacsoft.net/appcleaner" target="_blank" rel="noopener">AppCleaner</a> (卸载工具)</li><li><a href="http://mac.xunlei.com" target="_blank" rel="noopener">迅雷</a> (下载工具)</li><li><a href="https://www.teamviewer.com/en/" target="_blank" rel="noopener">TeamViewer</a> (远程控制)</li><li><a href="https://github.com/ykqmain?tab=stars" target="_blank" rel="noopener"><strong><em>其他软件</em></strong></a><br><br></li></ul></li></ol><p>通篇看下来，<strong>我是真的穷🤭，也确实简单。</strong></p><p><a href="https://github.com/ykqmain/Config" target="_blank" rel="noopener"><strong><font color="#FFC0CB">myConfig</font></strong></a></p><p><br><br></p><h2 id="推荐一件生活中的利器给大家"><a href="#推荐一件生活中的利器给大家" class="headerlink" title="推荐一件生活中的利器给大家"></a>推荐一件生活中的利器给大家</h2><p>关于<strong>中性笔</strong>，一直在寻找一款合适的，</p><p>体验了网上推荐的<code>百乐 P500，G1，hi-tec</code>，<code>三菱 151</code>等以后，</p><p>还是觉得以前用过的笔芯<code>晨光 金钻007 和 G-5</code>比较好用，</p><p>至于笔，则推荐这款<strong><code>晨光 GP-1163</code></strong>(左一) 或 <code>GP-1008</code>(右仨)：</p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/GP-1163.JPG" width="480"></p><p><br><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天看到一个有意思的项目 &lt;a href=&quot;http://liqi.io/community&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;利器社群计划&lt;/a&gt; ，借此机会，我也分享一下自己使用的一些小工具……&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;em&gt;&lt;stro
      
    
    </summary>
    
      <category term="计算机" scheme="https://blog.ykqmain.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="软件" scheme="https://blog.ykqmain.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="Apple" scheme="https://blog.ykqmain.com/tags/Apple/"/>
    
      <category term="Mac" scheme="https://blog.ykqmain.com/tags/Mac/"/>
    
      <category term="macOS" scheme="https://blog.ykqmain.com/tags/macOS/"/>
    
      <category term="iPhone" scheme="https://blog.ykqmain.com/tags/iPhone/"/>
    
      <category term="iOS" scheme="https://blog.ykqmain.com/tags/iOS/"/>
    
      <category term="APP" scheme="https://blog.ykqmain.com/tags/APP/"/>
    
  </entry>
  
  <entry>
    <title>第一个网页</title>
    <link href="https://blog.ykqmain.com/hello/"/>
    <id>https://blog.ykqmain.com/hello/</id>
    <published>2015-11-24T16:00:00.000Z</published>
    <updated>2021-04-20T12:30:05.315Z</updated>
    
    <content type="html"><![CDATA[<p>假设已经拥有了一台服务器（<strong>系统为CentOS 6</strong>），需要知道 IP、端口（SSH Port）、密码。</p><ul><li>打开<code>终端</code>，登录服务器：<code>ssh -p 端口 root@IP</code></li></ul><ul><li>输入密码</li></ul><a id="more"></a><p><br></p><h2 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h2><ol><li><p>安装方式<br>CentOS安装Apache服务可以有两种方式，一种是用yum安装，一种是从官网下载源代码进行安装。这里使用yum安装。</p></li><li><p>输入<code>sudo yum install httpd -y</code><br>（采用该方式进行安装配置文件的默认路径为：<code>/etc/httpd/conf/httpd.conf</code>）</p></li><li><p>编辑配置文件，输入<code>vi /etc/httpd/conf/httpd.conf</code></p></li><li><p>找到如下内容<code>#ServerName www.example.com:80</code>，改为<code>ServerName localhost:80</code></p></li><li><p>重启一下Apache，<code>service httpd restart</code>即可。</p><p>常见Apache操作：</p><ul><li><code>service httpd start</code> 启动</li><li><code>service httpd stop</code> 停止</li><li><code>service httpd restart</code> 重启</li><li><code>service httpd status</code>  状态</li></ul></li><li><p>测试是否安装成功，在本地的浏览器中输入<code>http://IP</code> ，如果出现 <code>Apache 2 Test Page powered by CentOS</code>，说明成功。</p><p>如果出现错误，那就可能是iptables的问题：</p><p>编辑 iptables配置，<code>vi /etc/sysconfig/iptables</code> ，</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-A INPUT -m <span class="keyword">state</span> --state NEW -m tcp -p tcp --dport <span class="number">80</span> -j ACCEPT</span><br><span class="line">-A INPUT -m <span class="keyword">state</span> --state NEW -m tcp -p tcp --dport <span class="number">443</span> -j ACCEPT</span><br></pre></td></tr></table></figure><p>然后重启iptables、Apache。</p><p>常见iptables操作：</p><ul><li><code>service iptables status</code> 查看当前规则</li><li><code>service iptables restart</code> 重启</li><li><code>service iptables stop</code> 禁用</li></ul></li></ol><p><strong>最后设置Apache开机自启 <code>chkconfig iptables on</code></strong></p><p>//参考：<a href="http://www.linuxidc.com/Linux/2014-01/95256.htm" target="_blank" rel="noopener">CentOS Apache服务器安装与配置</a><br><br></p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><ol><li><p>安装方式<br>仍然是通过yum安装，查看版本信息<code>yum list | grep mysql</code> ，安装<code>yum install -y mysql-server mysql mysql-deve</code> ，查看安装好的版本<code>rpm -qi mysql-server</code> 。</p></li><li><p>通过<code>service mysqld start</code> 命令启动mysql服务。</p></li><li><p>第一次会提示很多信息，重启mysql <code>service mysqld restart</code></p></li><li><p><strong>最后设置MySQL开机自启 <code>chkconfig mysqld on</code></strong><br>（配置文件在 <code>/etc/my.cnf</code>）<br><br></p></li></ol><hr><p><br></p><p>回到本地，编辑或创建一个名为 <code>index.html</code> 的文件，这个HTML文件就是首页。HTML中的多媒体的路径要用<strong>服务器上的相对路径</strong>或者<strong>外链</strong>。</p><p><strong>将这个<code>index.html</code>送到服务器上的<code>/var/www/html</code>目录下即可</strong>，在本地和服务器传文件有很多方法，比如：scp、ftp、sftp…</p><ul><li>scp的方法：<code>scp -P 端口 本地文件路径 root@IP:服务器路径</code></li></ul><p>在浏览器输入服务器IP或者域名就可以看到最新成果。<br><br></p><p><strong>Enjoy it!</strong></p><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;假设已经拥有了一台服务器（&lt;strong&gt;系统为CentOS 6&lt;/strong&gt;），需要知道 IP、端口（SSH Port）、密码。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开&lt;code&gt;终端&lt;/code&gt;，登录服务器：&lt;code&gt;ssh -p 端口 root@IP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;输入密码&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://blog.ykqmain.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="Web" scheme="https://blog.ykqmain.com/tags/Web/"/>
    
      <category term="Linux" scheme="https://blog.ykqmain.com/tags/Linux/"/>
    
      <category term="Apache" scheme="https://blog.ykqmain.com/tags/Apache/"/>
    
      <category term="服务器" scheme="https://blog.ykqmain.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
</feed>
