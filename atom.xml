<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iAnna</title>
  
  <subtitle>Life &amp; Technology</subtitle>
  <link href="https://blog.ykqmain.com/atom.xml" rel="self"/>
  
  <link href="https://blog.ykqmain.com/"/>
  <updated>2022-01-19T04:40:12.098Z</updated>
  <id>https://blog.ykqmain.com/</id>
  
  <author>
    <name>秋风木叶</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客重启暨2021年词云图</title>
    <link href="https://blog.ykqmain.com/2021wc/"/>
    <id>https://blog.ykqmain.com/2021wc/</id>
    <published>2022-01-17T16:00:00.000Z</published>
    <updated>2022-01-19T04:40:12.098Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>只是在我心中还有一方净土，即使在别人眼里寸草不生，却始终一尘不染。</p></blockquote><p><strong>The Blog is Online, again.</strong></p><p><a href="https://blog.ykqmain.com/">https://blog.ykqmain.com</a></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/2021wc/Blog.png"></p><hr><br><p>思虑再三，决定重启博客，并升级了<code>Hexo</code>，果然生成速度快了很多，也清理了冗余数据，开始逐渐整理文章。重新出发，在这一方网络天地。</p><p>博客再次上线之后，自然是常规的动作，年终总结。</p><p>今年发现一个不一样的玩意<code>wordcloud</code>，那就来折腾一番，对2021年34篇长短不一样的随想进行词频分析，一篇少则一段话二三十字，最多的一篇公园随想有三千多字，主题就是游戏和人生。</p><p>文件夹结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── cy.py</span><br><span class="line">├── re</span><br><span class="line">│ ├── 1.jpg</span><br><span class="line">│ └── baidu_stopwords.txt</span><br><span class="line">└── txt</span><br><span class="line"></span><br><span class="line">2 directories, 3 files</span><br></pre></td></tr></table></figure><p>代码如下，注释完备：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">环境需求：</span></span><br><span class="line"><span class="string">Python 3.6+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">安装依赖：</span></span><br><span class="line"><span class="string">pip3 install jieba wordcloud matplotlib Pillow</span></span><br><span class="line"><span class="string">可选依赖</span></span><br><span class="line"><span class="string">pip3 install python-docx scikit-learn</span></span><br><span class="line"><span class="string">如有网络问题先设置镜像，</span></span><br><span class="line"><span class="string">pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">使用方法：</span></span><br><span class="line"><span class="string">打开终端，输入&quot;python FileName.py&quot;回车</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命名习惯：</span></span><br><span class="line"><span class="string">变量：下划线</span></span><br><span class="line"><span class="string">常量：全大写</span></span><br><span class="line"><span class="string">函数、方法：小驼峰</span></span><br><span class="line"><span class="string">类名：大驼峰</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Creation Date: 2022-01-18</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jieba  <span class="comment"># 结巴库对中文分词</span></span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud  <span class="comment"># wordcloud库生成词云图</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt  <span class="comment"># matplotlib库用来画图</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image  <span class="comment"># Pillow库处理图片</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  <span class="comment"># 科学计算库，matplotlib的依赖，安装matplotlib时会自动安装numpy</span></span><br><span class="line"><span class="keyword">import</span> os  <span class="comment"># 系统库</span></span><br><span class="line"><span class="comment"># 可选功能</span></span><br><span class="line"><span class="comment"># from docx import Document  # python-docx库处理docx文件</span></span><br><span class="line"><span class="comment"># from sklearn.feature_extraction.text import CountVectorizer  # scikit-learn机器学习库统计词频</span></span><br><span class="line"><span class="comment"># import csv</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fileName</span>(<span class="params">file_dir</span>):</span></span><br><span class="line">    <span class="string">&#x27;遍历文件夹，返回指定后缀的文件名列表&#x27;</span></span><br><span class="line">    L = []</span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(file_dir):</span><br><span class="line">        <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">            <span class="comment"># if os.path.splitext(file)[1] == &quot;.docx&quot;:  # 筛选.docx文件</span></span><br><span class="line">            <span class="keyword">if</span> os.path.splitext(file)[<span class="number">1</span>] == <span class="string">&quot;.txt&quot;</span>:  <span class="comment"># 筛选.txt文件</span></span><br><span class="line">                L.append(os.path.join(root, file))</span><br><span class="line">    <span class="keyword">return</span> L</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; 备用方式，从docx读取数据</span></span><br><span class="line"><span class="string">def readDoc(docx_name):</span></span><br><span class="line"><span class="string">    &#x27;借助python-docx库读取.docx文档，不支持.doc后缀&#x27;</span></span><br><span class="line"><span class="string">    document = Document(docx_name)  # 打开word文档</span></span><br><span class="line"><span class="string">    # 获取所有段落</span></span><br><span class="line"><span class="string">    all_paragraphs = document.paragraphs</span></span><br><span class="line"><span class="string">    # 打印看all_paragraphs类型</span></span><br><span class="line"><span class="string">    print(type(all_paragraphs))  # &lt;class &#x27;list&#x27;&gt;，打印后发现是列表</span></span><br><span class="line"><span class="string">    # 是列表就开始循环读取</span></span><br><span class="line"><span class="string">    L = []</span></span><br><span class="line"><span class="string">    for paragraph in all_paragraphs:</span></span><br><span class="line"><span class="string">        # 打印每一个段落的文字</span></span><br><span class="line"><span class="string">        # print(paragraph.text)</span></span><br><span class="line"><span class="string">        L.append(paragraph.text)</span></span><br><span class="line"><span class="string">        # 循环读取每个段落里的run内容</span></span><br><span class="line"><span class="string">        # for run in paragraph.runs:</span></span><br><span class="line"><span class="string">            # print(run.text)  # 打印run内容</span></span><br><span class="line"><span class="string">    return L</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">file_list = fileName(<span class="string">r&#x27;./txt/&#x27;</span>)  <span class="comment"># 获取文档文件夹下所有文件名</span></span><br><span class="line"><span class="built_in">print</span>(file_list, <span class="built_in">len</span>(file_list))  <span class="comment"># 文档列表，文档数量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; 备用方式，处理docx文档</span></span><br><span class="line"><span class="string">temp_text = []</span></span><br><span class="line"><span class="string">for x in range(len(file_list)):</span></span><br><span class="line"><span class="string">    docx = &#x27; &#x27;.join(readDoc(file_list[x]))</span></span><br><span class="line"><span class="string">    temp_text.append(docx)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 导入文本数据并进行简单的文本处理</span></span><br><span class="line">temp_text = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(file_list)):</span><br><span class="line">    txt = <span class="built_in">open</span>(file_list[x], encoding=<span class="string">&#x27;utf8&#x27;</span>).read()</span><br><span class="line">    temp_text.append(txt)</span><br><span class="line"><span class="comment"># print(temp_text)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">text = <span class="string">&#x27; &#x27;</span>.join(temp_text)</span><br><span class="line">text = text.replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;\u3000&quot;</span>, <span class="string">&quot;&quot;</span>)  <span class="comment"># 去掉换行符和空格</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 结巴库分词，返回结果为词的列表</span></span><br><span class="line">text_cut = jieba.lcut(text)</span><br><span class="line"><span class="comment"># 将分好的词用某个符号分割开连成字符串</span></span><br><span class="line">text_cut = <span class="string">&#x27; &#x27;</span>.join(text_cut)</span><br><span class="line"><span class="built_in">print</span>(text_cut)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 导入停词</span></span><br><span class="line"><span class="comment"># 用于去掉文本中类似于&#x27;啊&#x27;、&#x27;你&#x27;，&#x27;我&#x27;之类的词，网上有现成的成熟的停词表</span></span><br><span class="line">stop_words = <span class="built_in">open</span>(<span class="string">&quot;./re/baidu_stopwords.txt&quot;</span>, encoding=<span class="string">&quot;utf8&quot;</span>).read().split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 图像的形状</span></span><br><span class="line">background = Image.<span class="built_in">open</span>(<span class="string">&quot;./re/1.jpg&quot;</span>)</span><br><span class="line">graph = np.array(background)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用WordCloud生成词云</span></span><br><span class="line">word_cloud = WordCloud(</span><br><span class="line">    font_path=<span class="string">r&#x27;/Users/yang/Library/Fonts/HanyiSentyTang.ttf&#x27;</span>,  <span class="comment"># 设置词云字体，macOS</span></span><br><span class="line">    <span class="comment"># font_path=r&#x27;C:\Users\Yang\字体\仿宋_GB2312.ttf&#x27;,  # 设置词云字体，Windows</span></span><br><span class="line">    collocations=<span class="literal">False</span>,</span><br><span class="line">    background_color=<span class="string">&quot;white&quot;</span>,  <span class="comment"># 词云图的背景颜色</span></span><br><span class="line">    width=<span class="number">2560</span>, height=<span class="number">1440</span>,</span><br><span class="line">    max_words=<span class="number">2000</span>,</span><br><span class="line">    mask=graph,  <span class="comment"># 指定词云的形状</span></span><br><span class="line">    stopwords=stop_words  <span class="comment"># 去掉的停词</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;开始生成词云&#x27;</span>)</span><br><span class="line">word_cloud.generate(text_cut)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运用matplotlib展现结果</span></span><br><span class="line">plt.subplots(figsize=(<span class="number">12</span>, <span class="number">8</span>))</span><br><span class="line">plt.imshow(word_cloud)</span><br><span class="line">plt.axis(<span class="string">&quot;off&quot;</span>)  <span class="comment"># 关闭x,y轴</span></span><br><span class="line">plt.show()  <span class="comment"># 显示</span></span><br><span class="line"></span><br><span class="line">word_cloud.to_file(<span class="string">&#x27;ciyun.jpg&#x27;</span>)  <span class="comment"># 保存词云图</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;已保存图片&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 使用CountVectorizer统计词频</span></span><br><span class="line"><span class="comment"># cv = CountVectorizer()</span></span><br><span class="line"><span class="comment"># contents_count = cv.fit_transform([text_cut])</span></span><br><span class="line"><span class="comment"># # 词有哪些</span></span><br><span class="line"><span class="comment"># list1 = cv.get_feature_names()</span></span><br><span class="line"><span class="comment"># # 词的频率</span></span><br><span class="line"><span class="comment"># list2 = contents_count.toarray().tolist()[0] </span></span><br><span class="line"><span class="comment"># # 将词与频率一一对应</span></span><br><span class="line"><span class="comment"># contents_dict = dict(zip(list1, list2))</span></span><br><span class="line"><span class="comment"># # 输出csv文件,newline=&quot;&quot;，解决输出的csv隔行问题</span></span><br><span class="line"><span class="comment"># with open(&quot;cipin.csv&quot;, &#x27;w&#x27;, newline=&quot;&quot;) as f:</span></span><br><span class="line"><span class="comment">#     writer = csv.writer(f)</span></span><br><span class="line"><span class="comment">#     for key, value in contents_dict.items():</span></span><br><span class="line"><span class="comment">#         writer.writerow([key, value])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(&#x27;完成&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/2021wc/ciyun.jpg"></p><br><p>从图可知2021年想的最多的关键词是：游戏、世界、人生、经历和学习。</p><p>2021年的经历，让我对所有制、民主、以及形式主义三个方面有了更加辩证、理性、深刻地认识，看待事物和问题也更加全面和长远。就像我之前总是一味地把历史的轮回归结于私有制的斗争和兼并，对形式主义也深恶痛绝，现在我有了更多的想法，以海纳百川的态度和眼光去走出固有思维的偏见，将会发现不一样的世界。</p><p>历史总是有惊人的相似，缩小到个人也有似曾相识的感觉，在北京的那个夏天，和现在的处境，让我读懂了孟子说的“生于忧患死于安乐”，事与愿违的未来也有可能是如愿以偿，后之视今，亦犹今之视昔。</p><p>希望2022年的关键词是「奋斗」，为个人理想而奋斗、为家庭幸福而奋斗、为国家发展而奋斗，毕竟奋斗的样子最迷人。</p><p>无论成败。</p><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;只是在我心中还有一方净土，即使在别人眼里寸草不生，却始终一尘不染。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;The Blog is Online, again.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://b</summary>
      
    
    
    
    <category term="生活" scheme="https://blog.ykqmain.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="Python" scheme="https://blog.ykqmain.com/tags/Python/"/>
    
    <category term="博客" scheme="https://blog.ykqmain.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="2021" scheme="https://blog.ykqmain.com/tags/2021/"/>
    
    <category term="回忆" scheme="https://blog.ykqmain.com/tags/%E5%9B%9E%E5%BF%86/"/>
    
    <category term="编程" scheme="https://blog.ykqmain.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>计算机之路</title>
    <link href="https://blog.ykqmain.com/cs/"/>
    <id>https://blog.ykqmain.com/cs/</id>
    <published>2021-04-19T16:00:00.000Z</published>
    <updated>2022-01-21T14:19:01.408Z</updated>
    
    <content type="html"><![CDATA[<p>随便聊聊我的计算机之路，以及我的近况，本文的主题也许算是「离别」。留个记录，给人生一个节点，再开启新的征程。</p><br><hr><br><p>小学时期，<strong>《红色警戒2》</strong>打开了我的计算机大门，从此开启了我的计算机之旅。沉迷在新世界，这里探索一下、那里折腾一番，没有体系。</p><p>我接触编程语言不算早，初中时期家里才拥有了第一台电脑（联想台式），这时候我才第一次接触编程语言——<strong>C语言</strong>。犹如昙花一现，埋没在少年的记忆中，唯独<strong>函数</strong>这个思想深深印在脑海。</p><br><p>时间过得很快，再见面，就已经是高中毕业了，由于对计算机的喜爱，大学专业毫不犹豫地选择了<strong>计算机科学与技术</strong>。</p><p>高考后我拥有了人生中第一台笔记本电脑（联想），取了一个名字——<strong>Anna</strong>。</p><p>抱着我的第一代Anna来到学校，伴随着高考失败，心态爆炸。然后辗转到图书馆做了一学期管理员，心稍微静了下来。</p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/anna1.jpg!sy"></p><p>大学的开始毫无疑问是C语言，关于C语言的学习，教材的每一个例子我都动手敲了，用的是Visual Studio，一个章节建一个项目。除此之外，还把<a href="https://book.douban.com/subject/1240002/">《C Primer Plus》</a>和<a href="https://book.douban.com/subject/1139336/">《C程序设计语言》</a>学了若干遍，当然这时候我开始用上了编辑器，把VS中的<code>cl.exe</code>单独拿出来在cmd中编译运行C。当时的想法是，赶紧学完C，复习一遍，再巩固一遍，最后告别一遍。<strong>每种流行的编程语言都有适合的场景以及它自己的生态</strong>，在我看来，C是系统级别和硬件级别的语言，不得不学、但又不是那么称手，适合入门编程，作为自己的基础，隐藏在底层。</p><p>在大一寒假初次接触Linux，在我的Anna上折腾Ubuntu和windows的双系统，浏览器全面转向Firefox，遇到有趣的游戏——韦诺之战(The Battle for Wesnoth)。</p><p>到了大一下学期，手机已经坏了2个，本来想尝试小米，奈何总是无货，一气之下打开了Apple的官网，从此打开了更大世界的大门。得到了人生第一部Apple设备——iPhone 6，与我的笔记本电脑对应，我给她取名<strong>Nana</strong>，她们是我最好的朋友。</p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/nana.jpg!sy" width="480"><p>如果说C带领我踏上编程之路，那么Java就让我深刻理解了<strong>「面向对象」</strong>思想。</p><p>即使我学习了面向对象，可我对Java仍然不喜欢，甚至说有点厌恶。最直观的感受，就是从C的语法到Java的语法不适应感。但不喜欢归不喜欢，我仍然把教材的例子全部敲了一遍，这时候接触到了Eclipse，以及尝试用记事本写Java（现在看来完全没必要记事本，还是专业文本编辑器好一些）。要说也得益于记事本手敲代码，我对面向对象思想确实有一种理解了的感觉。完美主义的驱使下，即使不喜欢Java，但我仍然想给它一个句号，自己买了<a href="https://book.douban.com/subject/25762168/">《Java核心技术》</a>两本，学了一遍。也是这个时候接触的<strong>Sublime Text</strong>，养成了能不用IDE就不用的习惯，反正都是些几行代码的小玩意。</p><p>大一的暑假来临，由于自己更偏向于C系语言，很自然地想要向C++进发。那个夏天我去北京跟父母一起度过，那个房间的微风，我至今记忆犹新。<a href="https://book.douban.com/subject/25708312/">《C++ Primer》</a>和下载的动漫，陪伴了我整个暑假。随着对计算机行业的深入了解，以及对C++的学习体会，我发现他的复杂确实如网友所言，以我的能力无法驾驭，C++也就在这里不了了之，不过<strong>C++的迭代器和Vector</strong>令我印象深刻。暑假之末，我得到了父母“馈赠”的人生中第一台苹果笔记本——MacBook Pro (Retina, 13-inch, Early 2015)，我把这台笔记本仍然取名Anna（很显然她是第二代Anna了）。<strong>OS X</strong>这个全新的系统，毫无疑问是非常有吸引力的，折腾了好久，热情至今丝毫不减，喜爱程度难以言表。</p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/anna2.jpg!sy"></p><br><p>大二新学期的开始，学校的课程大多是数学、物理、电工、数电之类的课程，我又刚接触OS X，在折腾新系统各个功能、探访各个角落的同时，我的目光转向了iOS开发，即Objective-C，虽然当时Apple已经发布了Swift，因为还不成熟，我仍然打算先过一遍Objective-C，然后再来一遍Swift。沉浸于图书馆几个月，看了几本书和一些视频。我认为iOS开发也许并不是一个好选择，需求不大，市场饱和，再加上Apple Developer账号的收费机制，我又放弃了一个方向。不过，我仍然在这个过程收获了<strong>MVC模式</strong>。</p><p>知识和见识越来越广，之前在编译型语言兜兜转转，放弃iOS之后，打算找一门解释型语言玩一玩。层层筛选下来，最后在Perl、Ruby和Pyhton之间举棋不定，至于JavaScript，当时的我认为它只适合前端，遂没有考虑。我的印象中，在图书馆找了好几本书对比，甚至夜晚跑步的时候也在纠结选哪个，网上也搜了很多资料。</p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/language.JPG"></p><p>当时比较了很多项，也纠结了很久，如果我没记错的话，决定的最主要原因是：Perl因为太老而首先排除，Ruby资源的母语是日语，而Python是英语。要知道一门外语对我而言是非常困难的，我就是那种没有一丝外语天赋的人，即使英语学了这么多年，还是这个水样子，而英语明显更为通用。<strong>我最后选择了Python</strong>，之后在图书馆通过<a href="https://book.douban.com/subject/25880388/">《Python基础教程》</a>正式接触Python。</p><p>Python基础之后，也没有上手什么项目。厌烦了通过hosts方式上Google，极其不稳定和慢速。偶然得知了VPS，便开启了SS之门，就像打开潘多拉魔盒。我的行动完全转向，重访Google，开启Twitter之旅。写了第一个网页，又萌生写博客的想法，于是立即动手，折腾WordPress废寝忘食。觉得博客应该专注内容，又了解到Hexo，于是把Blog迁移到Hexo。期间买了几个域名，最后还是在com稳定下来。</p><p>这一折腾，就是寒假来临。这个寒假，我又复习了一遍《C Primer Plus》和《C++ Primer》，后来我还偶尔翻过C，但再也没有看过C++了。</p><p>大二下学期，学校的课程关于编程语言的很少了，开始安排上了数据库、数据结构、汇编语言、计算机网络等课程。把重心放在了数据库上，同时买了一个iPad，新玩意又沉浸其中很久，不过不到一学期我就发现了iPad的鸡肋，自此将其给我妈用了。开始尝试Web开发。HTML很好，但是JavaScript则是浅尝则止，CSS更是无从下手，对我而言，太繁杂了，技术更新太快，毫无头绪。而且我自认为前端需要一点设计技能，这对一个强迫症患者，简直是噩梦。即使说JavaScript是每个程序员应该掌握的技能，但至今我仍然只敢说我仅仅熟悉HTML，而对JavaScript了解还算不上。期间我又看了一遍《Java核心技术》，博客也一直在更新。</p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/tsg.jpeg!sy" width="480"><br><p>大三的时候，学校开始教C++，由于我已经重复翻过多次，但又不打算深入学习，应付考试完全足够，所以没啥感觉就上完了。同时还有编译原理、操作系统、计算机组成原理、微型计算机原理与接口技术、以及PHP，对PHP无感，只记得做了一个成绩信息系统就过了。</p><p>在那之后，我基本不接触新的编程语言了，而是暂时专注在计算机的其他的方面，比如数据库和计算机网络，对macOS和Linux的探索也足够的多。经历了这么多，对Java的讨厌，也逐渐转变为不喜欢，即使不喜欢，却还是隔三差五就把《Java核心技术》拿出来翻翻。也许这就是缘分，不喜欢Java，整个大学在这门语言上花的时间却最多。</p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/book1.JPG!sy"></p><br><p>2017年开始，大三下学期的课程主要有计算方法、软件工程、R语言、数据仓库和数据挖掘、信息安全，以及各种设计报告的实践课程，内容丰富，加上要准备考研事宜，时光飞逝；连接大四上学期，基本就彻底没有时间跟计算机打交道了，大四的课程我印象中只有大数据和人工智能而已，时间大多在备考。</p><p>考研一战失败，大四下学期的任务只有实习和毕业设计。期间去深圳屡屡碰壁，让我决心考研二战，于是回来天天在图书馆专心搞毕业设计。这段时间对互联网有了更深的认识，也沉浸折腾了一番，最后完成了一个Java实现的FTPClient。</p><p>时间过得真的很快，就这样毕业了。</p><br><hr><br><p>考研二战也以失败告终，家里有些变故、社会的险恶，中间的一些插曲就不在此谈了。</p><p>2019年必须得出去找工作了，在综合考虑后，那个春节我又全面深入学习了Python，没等元宵节就北上开启了北漂之旅。原本我更希望找一份关于Python的工作，后来看到招聘网站寥寥无几的岗位开始投Java，最后去了运维，市场需求和自身能力的局限，没办法。</p><p>在经历了一些事之后，逐渐改变了自己的一些想法。</p><br><hr><br><p><strong>人生，就是各种经历组成的。</strong>下定决心考虑转行，2019年底毅然辞职回老家，另谋出路。</p><p>突遇疫情，2020年初滞留在家有点闲，于是又复习了一些计算机的知识，还开了一个新坑，算法一直以来都很头疼，如果这个计划半途而废也不奇怪，<strong>但我希望对于计算机、对于编程更多一点兴趣，而不是饭碗。</strong></p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/algorithm.JPG!sy" width="480"><p>还想着找一门新玩意，我的目光追寻到新时代特性的语言，Go或Rust。上个世纪的潮流没能赶上，这波不能掉队。至于为啥选择了Rust，一来是Go对标的的是Java，Rust用来代替C++，对现在我的而言，我早已不再讨厌Java，保留Java，Rust能作为C++很好的补充；二来是因为Mozilla情怀。</p><p>即使Rust的学习曲线陡峭，我也希望在这里竖一块里程碑。我想我过多的涉猎了不同的方向，却没有在一个方向上足够深入，实在可惜。哪怕我将要转行了，如果真是那样，那么Rust也算是一个很好的纪念。</p><p>精力不足、能力不够，我也是真的学不动了，除了纸质书，还有电子的。最后打算再看一下<a href="https://www.rust-lang.org/zh-CN/">Rust</a>，我就不再展开了，太累了。</p><br><hr><br><p>语言之争是激烈的，有时候比电影还精彩。还是那句话，<strong>每种流行的编程语言都有适合的场景以及它自己的生态</strong>，除了看一门语言本身的设计之外，必须要看到这们语言周围的生态，争论语言好坏的意义不大。</p><p>很多时候我们可以说，语言只是表达工具，更重要的是深处的算法和设计模式等等；我们也可以说，不同的语言有不同的适用领域，用得好了，事半功倍。</p><p>其实这两种看法并不是相反的，而是相辅相成的。比如说，C/C++更适合系统编程和硬件、有很高的运行效率，但是上手难度大，不易控制。Java虽然语法啰嗦，但正是这一套规范，适合大型项目的协作开发，再加上Java强大的生态，成为目前最流行的企业语言不足为奇，在Web、大数据方面无人能敌，还带一个Android。对于脚本语言PHP、Python都有使用场景，PHP和网页的契合度，以及Python的开发效率，都是非常棒的优点。对于前端，几乎就是JavaScript没得选。</p><p>陷于语言之争只会让自己变得偏执，以及浪费时间。一门语言以及它周围的生态是不容易改变的，但是个人完全有一些小余地选择自己喜欢的。</p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/code.png!sy"></p><p>一名程序员必须学习3种以上的编程语言（HTML属于标记语言，SQL属于查询语言不在此列，另外Shell也不算在里面），其中一门编译型语言、一门脚本语言、一门工作吃饭/喜欢兴趣的语言。不同的语言可以学到不一样的思想，见识到不一样的世界。</p><p>要我说需要学习和自己喜欢的编程语言选出5种，无论是缘分也好、选择也罢，结合已有的经历结果来看，按时间顺序那就是<code>C</code>、<code>Java</code>、<code>C++</code>、<code>Python</code>、<code>JavaScript</code>。</p><ul><li><p>C：入门的首选，打好基础。一开始就从脚本入手，容易走偏，由奢入俭难；（对于非程序员，还是非常推荐Python的）</p></li><li><p>Java：面向对象目前还是主流，可选C++或Java等等，我偏向Java，虽然啰嗦，但是工整、规范；</p></li><li><p>C++：无论喜不喜欢，它就在我的记忆中、经历里。买纸质书学习的语言不多，C++是一个，一字一句敲过字符的感觉永远不会忘记；</p></li><li><p>Python：脚本语言是程序员的必备工具，对我而言毫不犹豫选Python；（现在看来Ruby的哲学不是我喜欢的，过多的语法糖令人有些混乱，选择困难症，对于方法的调用不能适应）</p></li><li><p>JavaScript：跟C语言一样，几乎是程序员必备技能；（我不算了解）</p></li></ul><p>虽然我把C和C++视为两种语言，但由于他们的渊源，很多人也将其看作整体C/C++，这样的话，5种语言还可以添加一门，那必然是Rust。按时间、喜好和缘分综合排序的话，最后就成了<code>Python</code>、<code>Java</code>、<code>C/C++</code>、<code>JavaScript</code>、<code>Rust</code>。</p><p>以前我也在不断寻找一门契合自己的编程语言，最后发现每种都有这样那样的缺点，但是不能掩盖他们的光芒，有它们各自的应用场景。果然这个世界上只有两种语言，被人骂的和没人用的。</p><p>深有预感我的编程之路会告一段落了，<strong>从C到Rust之旅，非常美好、感慨良多。</strong></p><p>总结一点经验就是，<strong>三分钟热度要不得，坚持难能可贵，深度比广度重要</strong>。</p><p>不管怎么样，学无止境。💻</p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/book2.JPG!sy" width="480"><p><br><br></p><p><mark><em><strong>Update: 2021-04</strong></em></mark></p><p>2020年底转行成功，正式告别计算机行业。</p><p>2020年底，陪伴了我5年多的第二代Anna，终于顶不住了。迫于贫穷，入了联想 小新 Pro14 2021，被视为第三代Anna。</p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/anna3.jpeg!sy" width="480"><p>很长时间没用Windows，回归之后有各种不适。系统环境变量混乱不堪，没有原生终端；反斜杠的路径也非常难受。许多功能强制依赖着一个个GUI的窗口（Windows之名名副其实，Window的复数），将细节过度藏匿于无形之中，拉开人机之间的距离，对于用户而言是简单而高效，对于开发商也是有大量需求的市场，对我而言则是始终有种隔阂，成功戒了我喜欢捣鼓电脑的兴趣，完全不想折腾。</p><p>对于笔记本而言，以前我觉得仅仅是喜欢macOS，后来有了对比才发现Mac是软硬一体的精致、无与伦比的美妙。计算机对我而言，是一个完整的个人世界，各种软件精挑细选，海量的数据皆有所归，哪里存放些什么，一丝不苟，什么该与什么在一起，整整齐齐，犹如一座图书馆，是精巧的外在建筑美学，也有精神海洋的丰富内涵，完完美美；同时又像一个伙伴，陪伴着我、记录着经历，书写着这个世界的故事。光是目之所及，手之所触就心情愉悦不已。</p><p>仔细想了想，用着难受还不如不用。虽然是最短暂的Anna3，也有了一定的感情，有一丝的不舍。正好给我爸使用，避免造成浪费，也减轻我的愧疚感。以后坚决不买Windows笔记本了，<strong>将Windows留给台式，把Linux留在服务器，还是MacBook更适合作为伙伴、形影不离。</strong></p><br><hr><br><p>2021年开启了新的生活，度过了一段没有电脑的时光，每天抱着iPhone刷，于3月份终于按捺不住，还是入了MacBook Pro (13-inch, M1, 2020)。</p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cs/anna4.jpeg!sy"></p><p>虽然我告别了程序员，但我不能告别编程；虽然我已经离开计算机行业，但我离不开计算机，我对于计算机的兴趣依然不减，反而由于不再焦虑，感觉更加轻松和愉快，只是不再有那么多的时间学习新的技术，唯一能够保持与时俱进的，估计只有Python了。</p><p>这种状态真的舒服，macOS和Python陪伴左右，逛着B站和豆瓣，偶尔看看GitHub和Twitter，时不时有Java、MySQL、Node.js等老朋友的问候，关注着Rust的发展，继续深耕Python。工作和生活中遇到的问题可以用Python快速解决，不去争论语言的长短，还可以“拿来主义”直接调用C/C++和Rust的成果，偏向实用为主，享受生活即可。</p><p>本博客可能不再更新了，有缘人可以在 <a href="https://space.bilibili.com/7216933">B站</a> 或者 <a href="https://douban.com/people/250982855">豆瓣</a> 找到我。</p><blockquote><p>人生如梦，一尊还酹江月。</p></blockquote><p><br><br> </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;随便聊聊我的计算机之路，以及我的近况，本文的主题也许算是「离别」。留个记录，给人生一个节点，再开启新的征程。&lt;/p&gt;
&lt;br&gt;

&lt;hr&gt;
&lt;br&gt;


&lt;p&gt;小学时期，&lt;strong&gt;《红色警戒2》&lt;/strong&gt;打开了我的计算机大门，从此开启了我的计算机之旅。沉迷在新</summary>
      
    
    
    
    <category term="文章" scheme="https://blog.ykqmain.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="回忆" scheme="https://blog.ykqmain.com/tags/%E5%9B%9E%E5%BF%86/"/>
    
    <category term="编程" scheme="https://blog.ykqmain.com/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="计算机" scheme="https://blog.ykqmain.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="TimeLine" scheme="https://blog.ykqmain.com/tags/TimeLine/"/>
    
  </entry>
  
  <entry>
    <title>Windows List</title>
    <link href="https://blog.ykqmain.com/windows/"/>
    <id>https://blog.ykqmain.com/windows/</id>
    <published>2021-01-07T16:00:00.000Z</published>
    <updated>2022-01-21T11:59:02.315Z</updated>
    
    <content type="html"><![CDATA[<p>精简的Windows办公、娱乐软件推荐列表。</p><br><ul><li><p><strong>办公</strong></p><ul><li><a href="https://www.mozilla.org/en-US/firefox/all/#product-desktop-release">Firefox</a></li><li><a href="http://www.sublimetext.com/">Sublime</a></li><li><a href="https://www.wps.cn/">WPS</a></li><li><a href="https://im.qq.com/">QQ</a></li><li><a href="https://support.hp.com/cn-zh/drivers/printers">HP LaserJet M1005驱动</a><br>&nbsp;</li><li><a href="https://www.7-zip.org/">7z</a></li><li><a href="http://www.bandisoft.com/honeyview/">Honeyview</a></li><li><a href="https://www.videolan.org/">VLC</a></li><li><a href="https://obsproject.com/">OBS</a></li><li><a href="https://www.adobe.com/cn/products/photoshop.html">Adobe Photoshop</a><br>&nbsp;</li><li><a href="https://www.python.org/">Python</a></li><li><a href="https://nodejs.org/zh-cn/">Node.js</a></li><li><a href="https://www.oracle.com/java/technologies/downloads/">JDK</a></li><li><a href="https://dev.mysql.com/downloads/">MySQL</a></li><li><a href="https://git-scm.com/">Git</a></li><li><a href="https://github.com/microsoft/terminal">Windows Terminal</a></li><li><a href="https://visualstudio.microsoft.com/zh-hans/visual-cpp-build-tools/">Microsoft C++ 生成工具</a><br>&nbsp;</li><li><a href="https://www.huorong.cn/">火绒</a></li><li><a href="https://iknow.lenovo.com.cn/detail/dc_178562.html">关闭Win10更新</a></li></ul></li></ul><br><ul><li><p><strong>娱乐</strong></p><ul><li><a href="https://y.qq.com/">QQ音乐</a></li><li><a href="https://v.qq.com/">腾讯视频</a></li><li><a href="https://www.youku.com/">优酷</a></li><li><a href="https://www.iqiyi.com/">爱奇艺</a><br>&nbsp;</li><li><a href="https://store.steampowered.com/">Steam</a></li><li><a href="https://cor-games.com/">红色警戒3：日冕</a></li></ul></li></ul><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;精简的Windows办公、娱乐软件推荐列表。&lt;/p&gt;
&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;办公&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/all/#product</summary>
      
    
    
    
    <category term="计算机" scheme="https://blog.ykqmain.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="工具" scheme="https://blog.ykqmain.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="Windows" scheme="https://blog.ykqmain.com/tags/Windows/"/>
    
    <category term="SoftWare" scheme="https://blog.ykqmain.com/tags/SoftWare/"/>
    
    <category term="办公" scheme="https://blog.ykqmain.com/tags/%E5%8A%9E%E5%85%AC/"/>
    
    <category term="娱乐" scheme="https://blog.ykqmain.com/tags/%E5%A8%B1%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>openpyxl实践</title>
    <link href="https://blog.ykqmain.com/openpyxl/"/>
    <id>https://blog.ykqmain.com/openpyxl/</id>
    <published>2020-04-23T16:00:00.000Z</published>
    <updated>2022-01-19T15:09:51.391Z</updated>
    
    <content type="html"><![CDATA[<p><strong>占坑，待补充……</strong></p><br><p>代码如下，进行了多次修改完善：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">环境需求：</span></span><br><span class="line"><span class="string">Python 3.6+</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">安装依赖：</span></span><br><span class="line"><span class="string">pip3 install openpyxl</span></span><br><span class="line"><span class="string">pip3 install pandas</span></span><br><span class="line"><span class="string">pip3 install xlutils</span></span><br><span class="line"><span class="string">如有网络问题先设置镜像，</span></span><br><span class="line"><span class="string">pip3 config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">使用方法：</span></span><br><span class="line"><span class="string">打开终端，输入&quot;python FileName.py&quot;回车</span></span><br><span class="line"><span class="string">可选参数，[班级:str, 时长:int 是否标记:y]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命名习惯：</span></span><br><span class="line"><span class="string">变量：下划线</span></span><br><span class="line"><span class="string">常量：全大写</span></span><br><span class="line"><span class="string">函数、方法：小驼峰</span></span><br><span class="line"><span class="string">类名：大驼峰</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Creation Date: 2020-04-24</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> openpyxl <span class="keyword">import</span> Workbook, load_workbook</span><br><span class="line"><span class="keyword">from</span> openpyxl.styles <span class="keyword">import</span> Font, NamedStyle</span><br><span class="line"><span class="comment"># from openpyxl.styles import colors, Alignment</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initData</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;进行第一次处理，将大表简化成小表。&quot;&quot;&quot;</span></span><br><span class="line">    wb1 = load_workbook(<span class="string">&#x27;1.xlsx&#x27;</span>)  <span class="comment"># 打开文件1.xlsx</span></span><br><span class="line">    data_sheet = wb1[wb1.sheetnames[<span class="number">0</span>]]  <span class="comment"># 打开第1位置的表格，即导出的数据Sheet</span></span><br><span class="line">    new_wb = Workbook()  <span class="comment"># 新建Excel文件</span></span><br><span class="line">    new_sheet = new_wb.active  <span class="comment"># 获取默认表</span></span><br><span class="line"></span><br><span class="line">    temp_dict = <span class="built_in">dict</span>(<span class="built_in">zip</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>), (<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>)))</span><br><span class="line">    <span class="comment"># print(temp_dict)</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">        copyColumn(new_sheet, x, data_sheet, temp_dict[x])</span><br><span class="line"></span><br><span class="line">    new_wb.save(NEWFILE)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 利用pandas进行排序</span></span><br><span class="line">    df = pd.read_excel(NEWFILE)</span><br><span class="line">    df.sort_values(by=<span class="string">&#x27;学生姓名&#x27;</span>, inplace=<span class="literal">True</span>, ascending=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># inplace默认为False，如果该值为True，那么就会在当前的dataframe上操作。</span></span><br><span class="line">    <span class="comment"># ascending参数True为升序，False为降序。</span></span><br><span class="line">    <span class="comment"># print(df)</span></span><br><span class="line">    df.to_excel(NEWFILE)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># pandas会对Excel添加一个索引列，由于pandas强大，暂时就不折腾，利用openpyxl去掉这一列</span></span><br><span class="line">    wb_sorted = load_workbook(NEWFILE)</span><br><span class="line">    sheet_sorted = wb_sorted[wb_sorted.sheetnames[<span class="number">0</span>]]  <span class="comment"># 打开第1位置的表格，即排序后的Sheet</span></span><br><span class="line">    sheet_sorted.title = <span class="string">&#x27;原始数据&#x27;</span></span><br><span class="line">    sheet_sorted.delete_cols(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    C = [<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">65</span>, <span class="number">65</span> + <span class="number">5</span>)]  <span class="comment"># 字母列表 A-E，对应Excle的1～5列</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> C:</span><br><span class="line">        sheet_sorted.column_dimensions[x].width = <span class="number">15</span>  <span class="comment"># 设置列宽</span></span><br><span class="line"></span><br><span class="line">    sheet_sorted.column_dimensions[<span class="string">&#x27;B&#x27;</span>].width = <span class="number">25</span>  <span class="comment"># 设置列宽</span></span><br><span class="line">    sheet_sorted.column_dimensions[<span class="string">&#x27;D&#x27;</span>].width = <span class="number">25</span>  <span class="comment"># 设置列宽</span></span><br><span class="line"></span><br><span class="line">    wb_sorted.save(NEWFILE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">copyColumn</span>(<span class="params">sheetA, intX, sheetB, intY</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;将B表的第Y列复制到A表的第X列。&quot;&quot;&quot;</span></span><br><span class="line">    r = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> sheetB.iter_rows(min_row=<span class="number">5</span>,</span><br><span class="line">                                max_row=sheetB.max_row,</span><br><span class="line">                                min_col=intY,</span><br><span class="line">                                max_col=intY):</span><br><span class="line">        <span class="comment"># min_row=5 视情况而定</span></span><br><span class="line">        <span class="keyword">for</span> cell <span class="keyword">in</span> row:</span><br><span class="line">            <span class="comment"># print(cell.value, r)</span></span><br><span class="line">            sheetA.cell(r, intX, cell.value)</span><br><span class="line">            r += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reTime</span>(<span class="params">time: <span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Excel的E列为观看时长，正则匹配字符串中的数字，返回的是一个列表。&quot;&quot;&quot;</span></span><br><span class="line">    res: <span class="built_in">list</span> = re.findall(<span class="string">r&quot;\d+\.?\d*&quot;</span>, <span class="built_in">str</span>(time))</span><br><span class="line">    <span class="comment"># 判断列表是否为空</span></span><br><span class="line">    <span class="keyword">if</span> res:</span><br><span class="line">        timeLong = res[<span class="number">0</span>]  <span class="comment"># 取列表的字符串，str -&gt; int</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        timeLong = <span class="number">0</span>  <span class="comment"># 应对“观看不足一分钟”这种情况</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(timeLong)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dataFilter</span>(<span class="params">sheet, classNum: <span class="built_in">int</span></span>) -&gt; <span class="built_in">list</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;从精简的小表提取相应数据分班级，然后过滤出中文姓名，返回一个列表。&quot;&quot;&quot;</span></span><br><span class="line">    new_work = load_workbook(NEWFILE)  <span class="comment"># 打开Excle</span></span><br><span class="line">    new_sheet = new_work.create_sheet(CLASSNAME + <span class="built_in">str</span>(classNum),</span><br><span class="line">                                      classNum - <span class="number">1</span>)  <span class="comment"># 新建一个班级Sheet</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span> * <span class="number">20</span> + <span class="string">&#x27;\n开始处理&#x27;</span>)</span><br><span class="line">    <span class="comment"># 复制第1行表头，和5列有用信息</span></span><br><span class="line">    <span class="keyword">for</span> init_column <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">        new_sheet.cell(<span class="number">1</span>, init_column,</span><br><span class="line">                       sheet.cell(<span class="number">1</span>, init_column).value).style = sty_black</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置列宽，代码重复，考虑优化</span></span><br><span class="line">    C = [<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">65</span>, <span class="number">65</span> + <span class="number">5</span>)]  <span class="comment"># 字母列表 A-E，对应Excle的1～5列</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> C:</span><br><span class="line">        new_sheet.column_dimensions[x].width = <span class="number">15</span>  <span class="comment"># 设置列宽</span></span><br><span class="line"></span><br><span class="line">    new_sheet.column_dimensions[<span class="string">&#x27;B&#x27;</span>].width = <span class="number">25</span>  <span class="comment"># 设置列宽</span></span><br><span class="line">    new_sheet.column_dimensions[<span class="string">&#x27;D&#x27;</span>].width = <span class="number">25</span>  <span class="comment"># 设置列宽</span></span><br><span class="line"></span><br><span class="line">    name_filter = []</span><br><span class="line">    a = <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(&#x27;行数&#x27;, sheet.max_row)</span></span><br><span class="line">    <span class="comment"># 开始筛选复制有用信息</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, sheet.max_row + <span class="number">1</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">str</span>(sheet[<span class="string">&quot;C&quot;</span> + <span class="built_in">str</span>(x)].value).startswith(</span><br><span class="line">                CLASSNAME + <span class="built_in">str</span>(classNum)):  <span class="comment"># 复制以classNum开头的行</span></span><br><span class="line">            <span class="keyword">for</span> column <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">                timeLong = reTime(sheet[<span class="string">&quot;E&quot;</span> + <span class="built_in">str</span>(x)].value)  <span class="comment"># 正则匹配字符串中的数字的函数</span></span><br><span class="line">                <span class="comment"># print(&#x27;时长：&#x27;, timeLong)</span></span><br><span class="line">                <span class="comment"># 观看少于 TIMELONG 分钟则标红</span></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">int</span>(timeLong) &gt;= TIMELONG:</span><br><span class="line">                    new_sheet.cell(a + <span class="number">1</span>, column,</span><br><span class="line">                                   sheet.cell(x,</span><br><span class="line">                                              column).value).style = sty_black</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    new_sheet.cell(a + <span class="number">1</span>, column,</span><br><span class="line">                                   sheet.cell(x, column).value).style = sty_red</span><br><span class="line">                <span class="comment"># 其中的&#x27;0-行, 0-列&#x27;指定表中的单元，&#x27;value&#x27;是向该单元写入的内容</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># 正则匹配中文姓名</span></span><br><span class="line">            res = re.findall(<span class="string">&#x27;[\u4e00-\u9fa5]+&#x27;</span>, sheet[<span class="string">&quot;C&quot;</span> + <span class="built_in">str</span>(x)].value)</span><br><span class="line">            name_filter.extend(res)  <span class="comment"># 筛选出中文姓名，返回一个list</span></span><br><span class="line">            a += <span class="number">1</span>  <span class="comment"># 以classNum开头的行的计数器</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># listIndex(name_filter)</span></span><br><span class="line">    <span class="comment"># 处理掉线重连后重复的情况</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">duplicates</span>(<span class="params">aList, item</span>):</span></span><br><span class="line">        <span class="keyword">return</span> [i <span class="keyword">for</span> i, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(aList) <span class="keyword">if</span> x == item]</span><br><span class="line"></span><br><span class="line">    re_dict = <span class="built_in">dict</span>((x, duplicates(name_filter, x)) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">set</span>(name_filter)</span><br><span class="line">                   <span class="keyword">if</span> name_filter.count(x) &gt; <span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 寻找列表中重复项目，并返回索引，存储到一个字典</span></span><br><span class="line">    <span class="comment"># print(re_dict, len(re_dict))</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(re_dict):</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> <span class="built_in">sorted</span>(re_dict):</span><br><span class="line">            time_sum = <span class="number">0</span></span><br><span class="line">            <span class="built_in">print</span>(key, <span class="string">&#x27;掉线重连过。&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(re_dict[key])  <span class="comment"># 字典的值是一个列表，存储列表重复项目的索引位置</span></span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> re_dict[key]:</span><br><span class="line">                name = new_sheet.cell(x + <span class="number">2</span>, <span class="number">3</span>).value  <span class="comment"># 列表中的索引+2对应Excle中的行</span></span><br><span class="line">                time = new_sheet.cell(x + <span class="number">2</span>, <span class="number">5</span>).value</span><br><span class="line">                <span class="built_in">print</span>(name, time)</span><br><span class="line">                time_sum += reTime(time)</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;总时长，&#x27;</span>, time_sum, <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> time_sum &gt;= TIMELONG:  <span class="comment"># 如果总时长超过TIMELONG</span></span><br><span class="line">                <span class="comment"># print(&#x27;索引为：&#x27;, re_dict[key])</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> re_dict[key]:  <span class="comment"># 则把所有的符合的行标记为一个颜色</span></span><br><span class="line">                    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>):</span><br><span class="line">                        new_sheet.cell(i + <span class="number">2</span>, c).style = sty_flag</span><br><span class="line"></span><br><span class="line">    new_work.save(NEWFILE)</span><br><span class="line">    <span class="keyword">return</span> name_filter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">studentFilter</span>(<span class="params">sheet, classNum: <span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;从学生名单Excle提取中文姓名，返回一个列表。&quot;&quot;&quot;</span></span><br><span class="line">    student_filter = []</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, sheet.max_row + <span class="number">1</span>):</span><br><span class="line">        <span class="comment"># 已修改学生名单&quot;800.xlsx&quot;，只存在中文姓名，所以不需要正则筛选。但是以防万一，保证正确。</span></span><br><span class="line">        res = re.findall(<span class="string">&#x27;[\u4e00-\u9fa5]+&#x27;</span>,</span><br><span class="line">                         <span class="built_in">str</span>(sheet.cell(x, classNum).value))</span><br><span class="line">        student_filter.extend(res)</span><br><span class="line">    <span class="keyword">return</span> student_filter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">absentStudent</span>(<span class="params">classNum: <span class="built_in">int</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;筛出缺勤学生。&quot;&quot;&quot;</span></span><br><span class="line">    wb1 = load_workbook(NEWFILE)  <span class="comment"># 打开Excle</span></span><br><span class="line">    data_sheet = wb1[<span class="string">&#x27;原始数据&#x27;</span>]  <span class="comment"># 打开经过initData()精简后的Sheet</span></span><br><span class="line">    wb80 = load_workbook(CLASSNAME + <span class="string">&#x27;.xlsx&#x27;</span>)  <span class="comment"># 打开学生名单Excle</span></span><br><span class="line">    student_sheet = wb80[<span class="string">&#x27;Sheet1&#x27;</span>]  <span class="comment"># 打开Sheet</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 追加缺勤名单到表尾部，返回缺勤名单列表</span></span><br><span class="line">    name_filter: <span class="built_in">list</span> = dataFilter(data_sheet, classNum)  <span class="comment"># 过滤后的原始数据Excle姓名列表</span></span><br><span class="line">    student_filter: <span class="built_in">list</span> = studentFilter(student_sheet,</span><br><span class="line">                                         classNum)  <span class="comment"># 过滤后的学生Excle姓名列表</span></span><br><span class="line"></span><br><span class="line">    a = [x <span class="keyword">for</span> x <span class="keyword">in</span> name_filter <span class="keyword">if</span> x <span class="keyword">in</span> student_filter]</span><br><span class="line">    <span class="comment"># 两个列表中都存在，交集</span></span><br><span class="line">    absent_list = [y <span class="keyword">for</span> y <span class="keyword">in</span> (name_filter + student_filter) <span class="keyword">if</span> y <span class="keyword">not</span> <span class="keyword">in</span> a]</span><br><span class="line">    <span class="comment"># 两个列表中的不同元素，缺勤</span></span><br><span class="line"></span><br><span class="line">    add_absent_wb = load_workbook(NEWFILE)  <span class="comment"># 打开Excle</span></span><br><span class="line">    add_absent_sheet = add_absent_wb[CLASSNAME + <span class="built_in">str</span>(classNum)]  <span class="comment"># 打开相应的班级Sheet</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 利用学生名单Excel，获取某列的元组，然后获取行数，取非空项目数，作为学生人数</span></span><br><span class="line">    alphabet_dict = <span class="built_in">dict</span>(<span class="built_in">zip</span>(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">9</span>), [<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">65</span>, <span class="number">65</span> + <span class="number">8</span>)]))</span><br><span class="line">    <span class="comment"># &#123;1: &#x27;A&#x27;, 2: &#x27;B&#x27;, 3: &#x27;C&#x27;, 4: &#x27;D&#x27;, 5: &#x27;E&#x27;, 6: &#x27;F&#x27;, 7: &#x27;G&#x27;, 8: &#x27;H&#x27;&#125;</span></span><br><span class="line">    column_tpl: <span class="built_in">tuple</span> = student_sheet[alphabet_dict[classNum]]  <span class="comment"># 配合字典，获取某列的元组</span></span><br><span class="line">    <span class="comment"># print(column_tpl)</span></span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(column_tpl)):</span><br><span class="line">        <span class="keyword">if</span> column_tpl[x].value:  <span class="comment"># 非空，则计数器+1</span></span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(classNum, <span class="string">&#x27;班人数：&#x27;</span>, n)</span><br><span class="line">    full = n</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 追加的统计信息</span></span><br><span class="line">    str1 = <span class="string">&#x27;备注：红色为观看总时长少于 &#x27;</span> + <span class="built_in">str</span>(TIMELONG) + <span class="string">&#x27; 分钟的人&#x27;</span></span><br><span class="line">    <span class="keyword">global</span> STRFLAG</span><br><span class="line">    note = str1 + STRFLAG</span><br><span class="line">    add_absent_sheet.cell(add_absent_sheet.max_row + <span class="number">2</span>, <span class="number">1</span>,</span><br><span class="line">                          note).style = sty_red</span><br><span class="line"></span><br><span class="line">    remarks = CLASSNAME + <span class="built_in">str</span>(classNum) + <span class="string">&#x27;应到 &#x27;</span> + <span class="built_in">str</span>(full) + <span class="string">&#x27; 人，实到 &#x27;</span> + <span class="built_in">str</span>(</span><br><span class="line">        full - <span class="built_in">len</span>(absent_list)) + <span class="string">&#x27; 人。&#x27;</span></span><br><span class="line">    add_absent_sheet.cell(add_absent_sheet.max_row + <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line">                          remarks).style = sty_red</span><br><span class="line"></span><br><span class="line">    absentStr = <span class="string">&#x27;缺勤 &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(absent_list)) + <span class="string">&#x27; 人：&#x27;</span> + <span class="string">&#x27;, &#x27;</span>.join(absent_list)</span><br><span class="line">    add_absent_sheet.cell(add_absent_sheet.max_row + <span class="number">1</span>, <span class="number">1</span>,</span><br><span class="line">                          absentStr).style = sty_red</span><br><span class="line"></span><br><span class="line">    add_absent_wb.save(NEWFILE)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;已生成的表格&#x27;</span>, <span class="string">&#x27;, &#x27;</span>.join(add_absent_wb.sheetnames))</span><br><span class="line">    <span class="keyword">return</span> absent_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(</span><br><span class="line">        <span class="string">&#x27;注意事项：\n腾讯课堂导出的Excle需要重命名为\&quot;1.xlsx\&quot;，\n需要常备一份学生名单的Excle命名为\&quot;80.xlsx\&quot;，\n注意班级人数是否正确。\n&#x27;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 格式化成时间格式，作为文件名</span></span><br><span class="line">    time_stamp = time.strftime(<span class="string">&quot;%m-%d&quot;</span>, time.localtime())</span><br><span class="line">    NEWFILE = <span class="built_in">str</span>(time_stamp) + <span class="string">&#x27;.xlsx&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;将在当前文件夹生成新文件：&#x27;</span> + NEWFILE)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 默认黑色字体，红色字体，蓝色字体，对齐方式</span></span><br><span class="line">    font_black = Font(name=<span class="string">u&#x27;宋体&#x27;</span>, size=<span class="number">14</span>, color=<span class="string">&#x27;#000000&#x27;</span>)</span><br><span class="line">    font_red = Font(name=<span class="string">u&#x27;宋体&#x27;</span>, size=<span class="number">14</span>, color=<span class="string">&#x27;#FF0000&#x27;</span>)</span><br><span class="line">    font_blue = Font(name=<span class="string">u&#x27;宋体&#x27;</span>, size=<span class="number">14</span>, color=<span class="string">&#x27;#0000FF&#x27;</span>)</span><br><span class="line">    <span class="comment"># alignment = Alignment(horizontal=&#x27;center&#x27;, vertical=&#x27;center&#x27;)</span></span><br><span class="line">    sty_black = NamedStyle(name=<span class="string">&#x27;sty_black&#x27;</span>, font=font_black)</span><br><span class="line">    sty_red = NamedStyle(name=<span class="string">&#x27;sty_red&#x27;</span>, font=font_red)</span><br><span class="line">    sty_blue = NamedStyle(name=<span class="string">&#x27;sty_blue&#x27;</span>, font=font_blue)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接受命令行参数</span></span><br><span class="line">    <span class="comment"># print(sys.argv)</span></span><br><span class="line">    <span class="comment"># 默认值</span></span><br><span class="line">    CLASSNAME = <span class="string">&#x27;80&#x27;</span>  <span class="comment"># 班级学生名单Excel文件名</span></span><br><span class="line">    TIMELONG = <span class="number">40</span>  <span class="comment"># 默认听课时长</span></span><br><span class="line">    STRFLAG = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    sty_flag = NamedStyle(name=<span class="string">&#x27;sty_flag&#x27;</span>, font=font_black)  <span class="comment"># 不标记蓝色</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) == <span class="number">4</span>:  <span class="comment"># 3个参数</span></span><br><span class="line">        <span class="comment"># sys.argv[0] 表示脚本名</span></span><br><span class="line">        CLASSNAME = <span class="built_in">str</span>(sys.argv[<span class="number">1</span>])  <span class="comment"># 第1个参数设置班级</span></span><br><span class="line">        TIMELONG = <span class="built_in">int</span>(sys.argv[<span class="number">2</span>])  <span class="comment"># 第2个参数设置时长</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">str</span>(sys.argv[<span class="number">3</span>]) == <span class="string">&#x27;y&#x27;</span>:  <span class="comment"># 第3个参数为&#x27;y&#x27;则标记为蓝色</span></span><br><span class="line">            STRFLAG = <span class="string">&#x27;，蓝色为断线后重连的人&#x27;</span></span><br><span class="line">            sty_flag = NamedStyle(name=<span class="string">&#x27;sty_flag&#x27;</span>, font=font_blue)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;本次处理的是 &#x27;</span> + CLASSNAME[<span class="number">0</span>] + <span class="string">&#x27; 年级，&#x27;</span> + <span class="string">&#x27;将把观看时长低于&#x27;</span>, TIMELONG,</span><br><span class="line">          <span class="string">&#x27;分钟的人标为红色&#x27;</span> + STRFLAG + <span class="string">&#x27;。\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    initData()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">7</span>):  <span class="comment"># 从1班到6班，索引从1开始</span></span><br><span class="line">        absentStudent(x)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># input(&#x27;程序运行完成！按 回车键 退出-&gt;&#x27;)</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从输入到输出一步都不用点，就得到自己想要的表格，这就是我想要的效果。</p><blockquote><p>哪里不会，import哪里。</p></blockquote><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;占坑，待补充……&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;

&lt;p&gt;代码如下，进行了多次修改完善：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span clas</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ykqmain.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="https://blog.ykqmain.com/tags/Python/"/>
    
    <category term="Excel" scheme="https://blog.ykqmain.com/tags/Excel/"/>
    
    <category term="openpyxl" scheme="https://blog.ykqmain.com/tags/openpyxl/"/>
    
    <category term="pandas" scheme="https://blog.ykqmain.com/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>Debian</title>
    <link href="https://blog.ykqmain.com/debian/"/>
    <id>https://blog.ykqmain.com/debian/</id>
    <published>2019-04-17T16:00:00.000Z</published>
    <updated>2022-01-19T15:15:20.552Z</updated>
    
    <content type="html"><![CDATA[<p>大一的时候折腾过Windows和Ubuntu桌面版双系统，后来换了Mac，接触的Linux服务器一直是CentOS，所以这次趁阿里云优惠尝试一下<a href="https://www.debian.org/">Debian</a>练练手，记录折腾过程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">本机：</span><br><span class="line">macOS 10.14.4</span><br><span class="line">终端.app</span><br><span class="line">Cyberduck</span><br><span class="line"></span><br><span class="line">Windows 10</span><br><span class="line">Xshell</span><br><span class="line">Xftp</span><br><span class="line"></span><br><span class="line">服务器：</span><br><span class="line">Debian 9.8 x64</span><br></pre></td></tr></table></figure><br><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p><code>ssh user@IP -p port</code></p><br><h2 id="版本和名字"><a href="#版本和名字" class="headerlink" title="版本和名字"></a>版本和名字</h2><ol><li><p>查看Linux内核版本</p><ul><li><code>cat /proc/version</code><ul><li><code>Linux version 4.9.0-9-amd64 (debian-kernel@lists.debian.org) (gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1) ) #1 SMP Debian 4.9.168-1 (2019-04-12)</code></li></ul></li><li><code>uname -a</code><ul><li><code>Linux Anna2 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1 (2019-04-12) x86_64 GNU/Linux</code></li></ul></li></ul></li><li><p>查看Linux系统版本</p><ul><li><code>lsb_release -a</code>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">No LSB modules are available.</span><br><span class="line">Distributor ID: Debian</span><br><span class="line">Description:    Debian GNU/Linux 9.8 (stretch)</span><br><span class="line">Release:    9.8</span><br><span class="line">Codename:   stretch</span><br></pre></td></tr></table></figure></li><li><code>cat /etc/issue</code></li><li><code>cat /etc/redhat-release</code> (红帽系，RHEL、CentOS)</li></ul></li><li><p>修改机器名</p><ul><li><p>查看</p><ul><li><code>hostnamectl</code></li></ul></li><li><p>修改</p><ul><li><code>hostnamectl set-hostname Anna2</code></li><li><code>vim /etc/hostname</code></li><li><code>vim /etc/hosts</code></li></ul></li><li><p>重启</p><ul><li><code>reboot</code></li></ul></li></ul></li></ol><br><h2 id="ssh免密登录"><a href="#ssh免密登录" class="headerlink" title="ssh免密登录"></a>ssh免密登录</h2><ol><li><p>apt包管理 (.DEB)</p><ul><li>macOS有<code>brew</code>, CentOS有<code>yum</code>, Debian/Ubuntu有<code>apt-get</code></li><li>一般来说，也许Red Hat系和Debian系的差别，也就是<code>yum</code>和<code>apt-get</code>的差别了。😅</li><li>apt-get, apt, aptitude三者有区别，但是大体来说差别不大。我倾向于用<code>apt</code>，因为它输入最方便。</li><li>常用命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apt search  搜索包</span><br><span class="line">apt show  显示包的信息</span><br><span class="line">apt install  安装</span><br><span class="line">apt remove  移除</span><br><span class="line">apt purge  移除软件和配置文件</span><br><span class="line">apt update  更新源</span><br><span class="line">apt upgrade  升级所有可升级的软件包</span><br><span class="line">apt list  列出包含条件的包（已安装，可升级等）</span><br><span class="line">apt autoremove  自动删除不需要的包</span><br></pre></td></tr></table></figure></li></ul></li><li><p>准备工作</p><ul><li>更新源，<code>apt update</code></li><li>升级软件，<code>apt upgrade</code></li><li>安装build工具，<code>apt install build-essential</code> (CentOS有<code>yum groupinstall &quot;Development Tools&quot;</code>)</li></ul></li><li><p>ssh</p><ol><li><p>生成<code>ssh keys</code>，参考<a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/">Generating a new SSH key</a> 或者 <a href="http://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5">Git-生成-SSH-公钥</a></p></li><li><p>上传公钥<code>id_rsa.pub</code>到服务器的<code>~/.ssh</code>目录</p></li><li><p>写入<code>authorized_keys</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 644 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li><li><p>修改ssh配置文件</p><ul><li><code>vim /etc/ssh/sshd_config</code></li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">port    # 修改为任意，我设置为1024。</span><br><span class="line">PermitRootLogin yes    # 开发机器，用root方便。配置其他管理员用户，权限命令需要sudo或者su切换用户。</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile  .ssh/authorized_keys .ssh/authorized_keys2</span><br><span class="line">PasswordAuthentication no    # 禁止密码登陆</span><br></pre></td></tr></table></figure></li><li><p>重启sshd服务，<code>systemctl restart sshd.service</code></p></li><li><p>阿里云有个坑，它自带一个<code>安全组规则</code>，ssh更改端口之后，必须在那里也开启<code>相应的入方向tcp端口</code>，我开启了用于ssh的1024端口，顺便配置了用于http的1126端口（因为A解析不备案也无法访问，所以就用<code>IP:port</code>直接访问了。）</p></li><li><p>重启机器后再测试能不能免密登录，<code>reboot</code></p></li></ol></li></ol><br><h2 id="配置终端"><a href="#配置终端" class="headerlink" title="配置终端"></a>配置终端</h2><p>ssh上去就是终端，整天跟它打交道，必须要趁手，</p><ol><li><p>安装几个工具</p><ul><li><p><code>apt install XXX</code></p><ul><li><code>p7zip</code></li><li><code>git</code></li><li><code>tree</code></li><li><code>dos2unix</code></li><li><code>pip3</code>, Debian9自带Python3.5，但是没有pip3，使用<code>apt install python3-pip</code>安装。</li></ul></li><li><p>pip3</p><ul><li>Requests<br></li></ul></li></ul></li></ol><ol start="2"><li><p>安装oh-my-zsh (可选的，服务器很卡，bash也能用)</p><ol><li><p>安装zsh，<code>apt install zsh</code></p></li><li><p>安装oh-my-zsh，<code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></p></li><li><p>配置<code>.zshrc</code>，我把本地的配置文件传上去，稍作修改。</p></li><li><p>因为这是配置好了的文件，要先把主题和插件准备好了之后再source。</p><ul><li><p>自定义preference主题，将本地的<code>preference.zsh-theme</code>上传到<code>~/.oh-my-zsh/custom/themes</code>，稍作修改。</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copied and modified from the oh-my-zsh theme from clean</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$UID</span> -eq 0 ]; <span class="keyword">then</span> NCOLOR=<span class="string">&quot;red&quot;</span>; <span class="keyword">else</span> NCOLOR=<span class="string">&quot;white&quot;</span>; <span class="keyword">fi</span></span><br><span class="line"><span class="comment"># 如果UID等于0(root)，则为红色，否则为白色</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">local</span> ret_status=<span class="string">&quot;%(?:%&#123;<span class="variable">$fg</span>[green]%&#125;%B&gt;%b :%&#123;<span class="variable">$fg</span>[red]%&#125;%B&gt;%b )&quot;</span></span><br><span class="line"><span class="comment"># 命令正确则为绿色，否则为红色</span></span><br><span class="line"></span><br><span class="line">PROMPT=<span class="string">&#x27;%&#123;$fg[$NCOLOR]%&#125;%n%&#123;$reset_color%&#125;@%&#123;$fg[white]%&#125;%m%&#123;$reset_color%&#125;:%&#123;$fg[blue]%&#125;%B%c%b%&#123;$reset_color%&#125;$(git_prompt_info) $&#123;ret_status&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 颜色</span></span><br><span class="line"><span class="comment"># black, red, green, yellow, blue, magenta, cyan, white</span></span><br><span class="line"><span class="comment"># 黑，红，绿，黄，蓝，洋红(紫)，青色，白色</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --------------------- </span></span><br><span class="line"><span class="comment"># %n  用户名</span></span><br><span class="line"><span class="comment"># %M  计算机的主机名</span></span><br><span class="line"><span class="comment"># %m  计算机的主机名（在第一个句号之前截断）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %d  目前的工作目录</span></span><br><span class="line"><span class="comment"># %~  目前的工作目录相对于～的相对路径</span></span><br><span class="line"><span class="comment"># %l  当前的tty</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %T  系统时间（时：分）</span></span><br><span class="line"><span class="comment"># %*  系统时间（时：分：秒）</span></span><br><span class="line"><span class="comment"># %D  系统日期（年-月-日）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># %B - %b 开始到结束使用粗体打印</span></span><br><span class="line"><span class="comment"># %U - %u 开始到结束使用下划线打印</span></span><br><span class="line"><span class="comment"># --------------------- </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># git theming</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_PREFIX=<span class="string">&quot;%&#123;<span class="variable">$fg_bold</span>[white]%&#125;(%&#123;<span class="variable">$fg_bold</span>[yellow]%&#125;%B&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_SUFFIX=<span class="string">&quot;%b%&#123;<span class="variable">$fg_bold</span>[white]%&#125;)%&#123;<span class="variable">$reset_color</span>%&#125;&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_CLEAN=<span class="string">&quot;%&#123;<span class="variable">$fg_bold</span>[green]%&#125; ✔&quot;</span></span><br><span class="line">ZSH_THEME_GIT_PROMPT_DIRTY=<span class="string">&quot;%&#123;<span class="variable">$fg_bold</span>[red]%&#125; ✗&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>下载相关插件</p><ul><li><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a></li><li><a href="https://github.com/zsh-users/zsh-completions">zsh-completions</a></li><li><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a></li></ul></li></ul></li><li><p><code>source .zshrc</code>，oh-my-zsh就配置好了。</p><br></li></ol></li></ol><ol start="3"><li><p>配置Vim</p><p> oh-my-zsh是平台，Vim就是双手。</p><ul><li><p>开启终端鼠标复制</p><ul><li><code>vim /etc/vim/vimrc</code> (<code>vim /usr/share/vim/vim80/defaults.vim</code> 70行)</li><li><code>set mouse=c</code></li></ul></li><li><p>上传本地<code>.vimrc</code>到服务器，稍作修改</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; Configuration file for vim</span></span><br><span class="line"><span class="keyword">set</span> modelines=<span class="number">0</span>     <span class="comment">&quot; CVE-2007-2438</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Normally we use vim-extensions. If you want true vi-compatibility</span></span><br><span class="line"><span class="comment">&quot; remove change the following statements</span></span><br><span class="line"><span class="keyword">set</span> nocompatible    <span class="comment">&quot; Use Vim defaults instead of 100% vi compatibility</span></span><br><span class="line"><span class="keyword">set</span> backspace=<span class="number">2</span>     <span class="comment">&quot; more powerful backspacing</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; Don&#x27;t write backup file if vim is being called by &quot;</span>crontab -<span class="keyword">e</span><span class="comment">&quot;</span></span><br><span class="line"><span class="keyword">au</span> BufWrite /private/tmp/crontab.* <span class="keyword">set</span> nowritebackup nobackup</span><br><span class="line"><span class="string">&quot; Don&#x27;t write backup file if vim is being called by &quot;</span>chpass<span class="comment">&quot;</span></span><br><span class="line"><span class="keyword">au</span> BufWrite /private/etc/<span class="keyword">pw</span>.* <span class="keyword">set</span> nowritebackup nobackup</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> fileencodings=utf-<span class="number">8</span>,gb18030</span><br><span class="line"><span class="keyword">set</span> termencoding=utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> expandtab</span><br><span class="line"><span class="keyword">set</span> softtabstop=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> smartindent</span><br></pre></td></tr></table></figure></li><li><p>Vim常用操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">esc    从编辑模式切换到命令模式</span><br><span class="line"></span><br><span class="line">a      切换到编辑模式，在光标后插入</span><br><span class="line">o      切换到编辑模式，在光标下一行插入</span><br><span class="line"></span><br><span class="line">v      可视模式</span><br><span class="line">r      取代模式</span><br><span class="line"></span><br><span class="line">命令模式下：</span><br><span class="line">Ctrl+b 向上翻页</span><br><span class="line">Ctrl+d 向下翻页</span><br><span class="line">/      光标之后搜索</span><br><span class="line">?      光标之前搜索</span><br><span class="line"></span><br><span class="line">n&lt;space&gt; 光标向右移动n个字符</span><br><span class="line">n&lt;Enter&gt; 光标向下移动n行</span><br><span class="line">0      光标移到行首</span><br><span class="line">$      光标移到行尾</span><br><span class="line"></span><br><span class="line">G      跳至文件末尾</span><br><span class="line">ggdG   清空内容，光标移动到首字符，删除到尾部</span><br><span class="line"></span><br><span class="line">u      撤销操作</span><br><span class="line">Ctrl+r 重做上一个动作</span><br><span class="line"></span><br><span class="line">d      剪切</span><br><span class="line">dd     删除光标那一行字符</span><br><span class="line">dw     删除当前光标所在位置到单词尾字符</span><br><span class="line">d0     删除光标到行首的字符</span><br><span class="line">d$     删除光标到行尾的字符</span><br><span class="line">y      复制</span><br><span class="line">y2     复制单词</span><br><span class="line">p      粘贴（将已复制的数据在光标下一行粘贴）</span><br><span class="line">x      删除当前光标所在处的字符（向后删除一个字符）</span><br><span class="line"></span><br><span class="line">:wq    保存退出</span><br><span class="line">:q     退出</span><br><span class="line">:q!    强制退出</span><br><span class="line">:w [filename] 将编辑的数据另存为</span><br></pre></td></tr></table></figure></li></ul></li></ol><br><h2 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h2><p>CentOS7已经默认使用Firewalld了，Firewalld的防火墙本质上是建立在原生的iptable防火墙之上的抽象层，再加上Firewalld默认关闭所有端口，需要哪个开哪个，以及命令也比较灵活，所以在Debian上我也想用Firewalld。</p><ol><li><p>安装</p><ul><li><code>apt install firewalld</code></li><li><code>firewall-cmd --version</code> 查看版本</li></ul></li><li><p>启动</p><ul><li><code>systemctl start firewalld</code> 启动</li><li><code>systemctl enable firewalld</code> 开机启动</li><li><code>firewall-cmd --state</code> 运行状态</li><li><code>systemctl status firewalld</code> 查看FirewallD守护进程的状态</li></ul></li><li><p>使用</p><p> Firewalld的配置可通过三种方式：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd    # 命令行的用户接口，常用</span><br><span class="line">/etc/firewalld/    # 目录下的xml文件，编辑xml文件实现firewall的配置</span><br><span class="line">firewall-config    # 图形界面接口，终端上无法使用</span><br></pre></td></tr></table></figure></li><li><p>服务和端口</p><p> 默认支持的服务的配置文件位于<code>/usr/lib/firewalld/services</code>，用户创建的服务文件在<code>/etc/firewalld/services</code>中。</p><ul><li><code>firewall-cmd --list-all</code> 列出配置的所有防火墙规则</li><li><code>firewall-cmd --get-services</code> 查看启用的所有服务的列表</li><li><code>firewall-cmd --add-service=http --permanent</code> 启用http服务</li><li><code>firewall-cmd --add-port=1024/tcp --permanent</code> 启用tcp端口1024</li><li><code>firewall-cmd --add-port=5000-5200/udp --permanent</code> 启用udp端口一个地址段</li><li><code>firewall-cmd --reload</code> 重新加载 FirewallD 配置</li><li>禁用服务或端口，将add改为<code>remove</code></li></ul></li><li><p>区域管理</p><p> “区域”是针对给定位置或场景（例如家庭、公共、受信任等）可能具有的各种信任级别的预构建规则集。不同的区域允许不同的网络服务和入站流量类型，而拒绝其他任何流量。 首次启用 FirewallD 后，public 将是默认区域。</p><ul><li><code>firewall-cmd --get-default-zone</code> 默认区域</li><li><code>firewall-cmd --set-default-zone=internal</code> 修改默认区域</li><li><code>firewall-cmd --zone=public --list-all</code> 得到特定区域的所有配置</li><li><code>firewall-cmd --list-all-zones</code> 得到所有区域的配置</li><li><code>firewall-cmd --zone=public --add-port=12345/tcp --permanent</code> 启用特定区域的端口</li></ul></li></ol><p>与阿里云安全组规则对应，我开启了<code>22/tcp 1024/tcp 1126/tcp</code>四个端口，每次配置之后，运行<code>firewall-cmd --reload</code> 重新加载FirewallD使其生效。</p><br><h2 id="Systemd"><a href="#Systemd" class="headerlink" title="Systemd"></a>Systemd</h2><p>Systemd很方便用于系统服务管理。</p><ol><li><p>systemctl</p><p> <code>systemctl</code>是Systemd的主命令，用于管理系统。</p><ol><li><p>检查</p><ul><li><code>systemctl --version</code></li><li><code>whereis systemd </code> 安装位置</li><li><code>whereis systemctl</code></li></ul></li><li><p>使用</p><ul><li><p><code>systemctl list-unit-files</code> 列出所有可用单元</p></li><li><p><code>systemctl list-units</code> 列出所有运行中单元</p></li><li><p><code>systemctl --failed</code> 列出所有失败单元</p></li><li><p><code>systemctl list-unit-files --type=service</code> 列出所有服务（包括启用的和禁用的）  </p></li><li><p><code>systemctl is-active nginx.service</code> 查看服务是否运行</p></li><li><p><code>systemctl is-enabled nginx</code> 查看服务是否设置为开机启动（不带后缀默认就是<code>.service</code>单元，其他的单元比如<code>.mount .sockets .device .target</code>都必须指定类型）</p></li><li><p><code>systemctl status firewalld.service</code> 检查某个单元或服务状态</p></li></ul></li><li><p>管理</p><ul><li><code>systemctl status httpd.service</code> 检查状态</li><li><code>systemctl start httpd.service</code> 启动</li><li><code>systemctl reload httpd.service</code> 重载</li><li><code>systemctl restart httpd.service</code> 重启</li><li><code>systemctl stop httpd.service</code> 停止</li><li><code>systemctl show httpd</code> 检查某个服务的所有配置细节</li><li><code>systemctl kill httpd</code> 杀死服务</li></ul></li><li><p>开机自启</p><ul><li><code>systemctl is-active httpd.service</code> 激活服务</li><li><code>systemctl enable httpd.service</code> 开机自启</li><li><code>systemctl disable httpd.service</code> 禁用</li></ul></li><li><p>管理套接口</p><p> 与服务类似。</p><ul><li><code>systemctl list-unit-files --type=socket</code> 列出所有可用系统套接口</li><li><code>systemctl status cups.socket</code></li><li><code>systemctl start cups.socket</code></li><li><code>systemctl reload cups.socket</code></li><li><code>systemctl restart cups.socket</code></li><li><code>systemctl stop cups.socket</code><br></li></ul></li></ol></li><li><p><code>hostnamectl</code> 查看当前主机的信息，最开始用过。</p></li><li><p><code>localectl</code> 查看本地化设置</p></li><li><p><code>timedatectl</code> 查看当前时区设置</p></li><li><p><code>loginctl</code> 查看当前登录的用户</p></li></ol><br><h2 id="LNMP环境"><a href="#LNMP环境" class="headerlink" title="LNMP环境"></a>LNMP环境</h2><p>LNMP代表的就是<code>Linux+Nginx+MySQL/MariaDB+PHP/Python/Perl</code>。</p><ol><li><p>Nginx安装</p><ol><li><p>安装</p><ul><li><code>apt install nginx</code></li></ul></li><li><p>启动</p><ul><li><code>whereis nginx</code> 查看位置</li><li><code>/etc/nginx/nginx.conf</code> 配置文件</li><li><code>/etc/nginx/sites-enabled/</code>，修改<code>default</code>文件中的端口为<code>1126</code>。</li><li><code>systemctl start nginx</code> 启动nginx</li><li><code>systemctl enable nginx</code> 开机自启</li><li><code>systemctl status nginx</code> 查看状态</li><li><code>systemctl restart nginx</code> 重启Nginx</li></ul></li><li><p>检查<br> 在浏览器输入<code>IP:port</code>访问网址，有<code>Welcome to nginx!</code>则成功。<br> 网站根目录，<code>/var/www/html</code></p><br></li></ol></li><li><p>MySQL安装</p><ol><li><p>安装</p><ul><li><code>apt install mysql-server</code></li><li><code>apt install mysql-client</code></li></ul></li><li><p>检查</p><ul><li><code>mysql --version</code> 发现安装的实际是MariaDB，早已听闻开源界和Oracle的爱恨情仇。由于两者的兼容性，我也不想更换了，正好可以尝试一下MariaDB。(如果想非MySQL不可，可以<a href="https://dev.mysql.com/downloads/repo/apt/">离线安装</a>)</li></ul></li><li><p>登录</p><ul><li><code>mysql -u root -p </code></li></ul></li><li><p><code>/etc/mysql/my.cnf</code></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line"></span><br><span class="line">bind-address = 0.0.0.0</span><br></pre></td></tr></table></figure></li><li><p>远程登录（开启端口）</p><ul><li><code>grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;密码&#39;;</code></li><li><code>flush privileges;</code><br></li></ul></li></ol></li><li><p>其他</p><p> 后端不太想用PHP，Debian自带Python3和perl。</p><p> 至此，一个基础的Linux环境就弄好了。由此来看，也许Red Hat系和Debian系也许真的就是<code>yum</code>和<code>apt-get</code>的差别了。🤔</p><p> <strong>可以暂告一段落了，也可能到此为止了。</strong></p><p> <strong>注：</strong> perl运行准备</p><ul><li><code>echo &quot;export LC_ALL=C&quot; &gt;&gt; /root/.bashrc</code></li><li><code>source /root/.bashrc </code><br></li></ul></li></ol><blockquote><p>生命在于折腾。</p></blockquote><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大一的时候折腾过Windows和Ubuntu桌面版双系统，后来换了Mac，接触的Linux服务器一直是CentOS，所以这次趁阿里云优惠尝试一下&lt;a href=&quot;https://www.debian.org/&quot;&gt;Debian&lt;/a&gt;练练手，记录折腾过程。&lt;/p&gt;
&lt;figu</summary>
      
    
    
    
    <category term="计算机" scheme="https://blog.ykqmain.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Linux" scheme="https://blog.ykqmain.com/tags/Linux/"/>
    
    <category term="Debian" scheme="https://blog.ykqmain.com/tags/Debian/"/>
    
    <category term="Apache" scheme="https://blog.ykqmain.com/tags/Apache/"/>
    
    <category term="Nginx" scheme="https://blog.ykqmain.com/tags/Nginx/"/>
    
    <category term="服务器" scheme="https://blog.ykqmain.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Flask实践</title>
    <link href="https://blog.ykqmain.com/flask/"/>
    <id>https://blog.ykqmain.com/flask/</id>
    <published>2019-01-02T16:00:00.000Z</published>
    <updated>2022-01-19T15:12:37.929Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">开发环境</span><br><span class="line">Python 3.7.2</span><br><span class="line">Flask 1.0.2</span><br><span class="line"></span><br><span class="line">本机</span><br><span class="line">macOS 10.14.3</span><br><span class="line"></span><br><span class="line">远程</span><br><span class="line">Linux version 4.14.77-81.59.amzn2.x86_64</span><br><span class="line"></span><br><span class="line">其他软件</span><br><span class="line">Atom Editor 1.34</span><br><span class="line">Postman 6.7.2</span><br></pre></td></tr></table></figure><p>学完了Python，就开始Flask实践。</p><br><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><p>虚拟环境</p><p> 在虚拟环境安装私有包，保持全局的干净整洁。</p><p> <code>新建一个文件夹</code></p><p> 创建虚拟环境：</p><p> <code>python3 -m venv hello</code></p><br></li><li><p>激活虚拟环境</p><p> <code>source hello/bin/activate</code></p><p> 激活虚拟环境后会修改命令提示符，加入环境名<code>(venv) $</code>，在虚拟环境中使用<code>python3</code>命令，调用的是虚拟环境中的解释器。</p><br></li><li><p>安装Python包</p><p> 使用pip命令安装Python包，<code>pip3 install XXX</code></p><p> 使用<code>pip3 freeze</code>查看安装了哪些包，生成<code>requirements.txt</code>文件，<code>pip3 freeze &gt;requirements.txt</code></p><p> 安装所有需求包，<code>pip3 install -r requirements.txt</code></p><p> 安装Flask，<code>pip3 install flask</code></p></li></ol><br><h2 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h2><ol><li><p>初始化</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br></pre></td></tr></table></figure><br></li><li><p>路由和视图</p><p> 处理URL和函数之间关系的程序称为路由，在Flask中定义路由的最简便方式，是使用应用实例提供的<code>app.route</code>装饰器。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br></pre></td></tr></table></figure><p> <code>app.add_url_rule()</code>方法，接受3个参数，URL、端点名、视图函数。</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"></span><br><span class="line">app.add_url_rule(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;index&#x27;</span>, index)</span><br></pre></td></tr></table></figure><br></li><li><p>一个完整的应用</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hello.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">user</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, &#123;&#125;!&#x27;</span>.<span class="built_in">format</span>(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>在虚拟环境的终端中，输入<code>python3 hello.py</code>启动Flask。</p><br><h2 id="GET和POST"><a href="#GET和POST" class="headerlink" title="GET和POST"></a>GET和POST</h2><p>使用浏览器(Safari 12)和Postman(6.7.2)来测试各种GET和POST。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;get&#x27;</span>]</span>)    </span><span class="comment"># 一个简单的get请求</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World!&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_number</span>(<span class="params">s</span>):</span>    <span class="comment"># 判断字符串是否为数字的函数</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">float</span>(s)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">import</span> unicodedata</span><br><span class="line">        unicodedata.numeric(s)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> (TypeError, ValueError):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/api&#x27;</span>, methods=[<span class="string">&#x27;get&#x27;</span>]</span>)    </span><span class="comment"># 通过get请求判断&quot;http://127.0.0.1:5000/api?number=X&quot;中X是奇数还是偶数</span></span><br><span class="line"><span class="comment"># 使用浏览器访问网址</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">api</span>():</span></span><br><span class="line">    s = request.args.get(<span class="string">&#x27;number&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> is_number(s):    <span class="comment"># 判断是否是数字</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">float</span>(s) % <span class="number">2</span> == <span class="number">0</span>:    <span class="comment"># 判断是否是偶数，如果不加float会报错，not all arguments converted during string formatting</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;偶数&quot;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">float</span>(s) % <span class="number">2</span> != <span class="number">0</span>:    <span class="comment"># 判断是否是奇数</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;奇数&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;数据错误&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;post&#x27;</span>]</span>)    </span><span class="comment"># 通过post请求和json数据判断number是奇数还是偶数</span></span><br><span class="line"><span class="comment"># 利用Postman发送post请求</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">response</span>():</span></span><br><span class="line">    data = request.get_json()</span><br><span class="line">    <span class="comment"># 从请求的包体里取出数据并格式化为dict格式</span></span><br><span class="line">    <span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">    s = data.get(<span class="string">&#x27;number&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> is_number(s):    <span class="comment"># 判断是否是数字</span></span><br><span class="line">        <span class="keyword">if</span> s % <span class="number">2</span> == <span class="number">0</span>:    <span class="comment"># 判断是否是偶数</span></span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;偶数&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">elif</span> s % <span class="number">2</span> != <span class="number">0</span>:    <span class="comment"># 判断是否是奇数</span></span><br><span class="line">            <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;奇数&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;数据错误&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><br><p>用类视图改写上面的函数视图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">from</span> flask.views <span class="keyword">import</span> MethodView</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_number</span>(<span class="params">s</span>):</span>    <span class="comment"># 判断字符串是否为数字</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">float</span>(s)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">import</span> unicodedata</span><br><span class="line">        unicodedata.numeric(s)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> (TypeError, ValueError):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserView</span>(<span class="params">MethodView</span>):</span></span><br><span class="line">    methods = [<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dispatch_request</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:    <span class="comment"># 当客户端通过get方法进行访问的时候</span></span><br><span class="line">            s = request.args.get(<span class="string">&#x27;number&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> is_number(s):    <span class="comment"># 判断是否是数字</span></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">float</span>(s) % <span class="number">2</span> == <span class="number">0</span>:    <span class="comment"># 判断是否是偶数，如果不加float会报错，not all arguments converted during string formatting</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;偶数&quot;</span></span><br><span class="line">                <span class="keyword">elif</span> <span class="built_in">float</span>(s) % <span class="number">2</span> != <span class="number">0</span>:    <span class="comment"># 判断是否是奇数</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&quot;奇数&quot;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;数据错误&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> request.method == <span class="string">&#x27;POST&#x27;</span>:    <span class="comment"># 当客户端通过post方法进行访问的时候</span></span><br><span class="line">            data = request.get_json()</span><br><span class="line">            <span class="built_in">print</span>(data)</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">type</span>(data))</span><br><span class="line"></span><br><span class="line">            s = data.get(<span class="string">&#x27;number&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> is_number(s):    <span class="comment"># 判断是否是数字</span></span><br><span class="line">                <span class="keyword">if</span> s % <span class="number">2</span> == <span class="number">0</span>:    <span class="comment"># 判断是否是偶数</span></span><br><span class="line">                    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;偶数&quot;</span>&#125;)</span><br><span class="line">                <span class="keyword">elif</span> s % <span class="number">2</span> != <span class="number">0</span>:    <span class="comment"># 判断是否是奇数</span></span><br><span class="line">                    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;奇数&quot;</span>&#125;)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;数据错误&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user_view = UserView.as_view(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line"><span class="comment"># 将GET /user 请求绑定到UserView.get()方法上</span></span><br><span class="line">app.add_url_rule(<span class="string">&#x27;/user&#x27;</span>, view_func=user_view, methods=[<span class="string">&#x27;GET&#x27;</span>, ])</span><br><span class="line"><span class="comment"># 将POST /user 请求绑定到UserView.post()方法上</span></span><br><span class="line">app.add_url_rule(<span class="string">&#x27;/user&#x27;</span>, view_func=user_view, methods=[<span class="string">&#x27;POST&#x27;</span>, ])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h2 id="Flask的数据库基础操作"><a href="#Flask的数据库基础操作" class="headerlink" title="Flask的数据库基础操作"></a>Flask的数据库基础操作</h2><p>使用flask-sqlalchemy操作mysql实现增删改查。</p><p>安装Python包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install flask-sqlalchemy</span><br><span class="line">pip3 install PyMySQL</span><br></pre></td></tr></table></figure><p>具体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意使用的不同请求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">&#x27;SQLALCHEMY_DATABASE_URI&#x27;</span>] = <span class="string">&#x27;mysql+pymysql://root:密码@localhost:3306/test?charset=utf8&#x27;</span></span><br><span class="line">app.config[<span class="string">&#x27;SQLALCHEMY_TRACK_MODIFICATIONS&#x27;</span>] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">mydb = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 模型</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Movie</span>(<span class="params">mydb.Model</span>):</span>    <span class="comment"># 创建一个表</span></span><br><span class="line">    __tablename__ = <span class="string">&#x27;movies&#x27;</span></span><br><span class="line">    <span class="built_in">id</span> = mydb.Column(mydb.Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    name = mydb.Column(mydb.String(<span class="number">100</span>), unique=<span class="literal">True</span>)</span><br><span class="line">    date = mydb.Column(mydb.Integer)</span><br><span class="line">    star = mydb.Column(mydb.Float, nullable=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&lt;Name %r&gt;&#x27;</span> % self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取列表</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/users&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getMovies</span>():</span></span><br><span class="line">    data = Movie.query.<span class="built_in">all</span>()</span><br><span class="line">    datas = []</span><br><span class="line">    <span class="keyword">for</span> movies <span class="keyword">in</span> data:</span><br><span class="line">        datas.append(&#123;<span class="string">&#x27;id&#x27;</span>: movies.<span class="built_in">id</span>, <span class="string">&#x27;name&#x27;</span>: movies.name, <span class="string">&#x27;date&#x27;</span>: movies.date, <span class="string">&#x27;star&#x27;</span>: movies.star&#125;)</span><br><span class="line">    <span class="keyword">return</span> jsonify(data=datas)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加数据</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addMovie</span>():</span></span><br><span class="line"></span><br><span class="line">    adict = request.get_json()</span><br><span class="line">    name = adict.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    date = adict.get(<span class="string">&#x27;date&#x27;</span>)</span><br><span class="line">    star = adict.get(<span class="string">&#x27;star&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(name, date, star)</span><br><span class="line"></span><br><span class="line">    movies = Movie(name=name, date=date, star=star)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        mydb.session.add(movies)</span><br><span class="line">        mydb.session.commit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">        mydb.session.rollback()</span><br><span class="line">        mydb.session.flush()</span><br><span class="line">    userId = movies.<span class="built_in">id</span></span><br><span class="line">    <span class="keyword">if</span> (movies.<span class="built_in">id</span> <span class="keyword">is</span> <span class="literal">None</span>):</span><br><span class="line">        result = &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;添加失败&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">return</span> jsonify(data=result)</span><br><span class="line"></span><br><span class="line">    data = Movie.query.filter_by(<span class="built_in">id</span>=userId).first()</span><br><span class="line">    result = &#123;<span class="string">&#x27;id&#x27;</span>: movies.<span class="built_in">id</span>, <span class="string">&#x27;name&#x27;</span>: movies.name, <span class="string">&#x27;date&#x27;</span>: movies.date, <span class="string">&#x27;star&#x27;</span>: movies.star&#125;</span><br><span class="line">    <span class="keyword">return</span> jsonify(data=result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取单条数据</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/&lt;int:userId&gt;&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getMovie</span>(<span class="params">userId</span>):</span></span><br><span class="line">    movies = Movie.query.filter_by(<span class="built_in">id</span>=userId).first()</span><br><span class="line">    <span class="keyword">if</span> (movies <span class="keyword">is</span> <span class="literal">None</span>):</span><br><span class="line">        result = &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;None&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result = &#123;<span class="string">&#x27;id&#x27;</span>: movies.<span class="built_in">id</span>, <span class="string">&#x27;name&#x27;</span>: movies.name, <span class="string">&#x27;date&#x27;</span>: movies.date, <span class="string">&#x27;star&#x27;</span>: movies.star&#125;</span><br><span class="line">    <span class="keyword">return</span> jsonify(data=result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改数据</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/&lt;int:userId&gt;&#x27;</span>, methods=[<span class="string">&#x27;PATCH&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">updateMovie</span>(<span class="params">userId</span>):</span></span><br><span class="line"></span><br><span class="line">    adict = request.get_json()</span><br><span class="line">    name = adict.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    date = adict.get(<span class="string">&#x27;date&#x27;</span>)</span><br><span class="line">    star = adict.get(<span class="string">&#x27;star&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        movies = Movie.query.filter_by(<span class="built_in">id</span>=userId).first()</span><br><span class="line">        <span class="keyword">if</span> (movies <span class="keyword">is</span> <span class="literal">None</span>):</span><br><span class="line">            result = &#123;<span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;找不到要修改的记录&#x27;</span>&#125;</span><br><span class="line">            <span class="keyword">return</span> jsonify(data=result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            movies.name = name</span><br><span class="line">            movies.date = date</span><br><span class="line">            movies.star = star</span><br><span class="line">            mydb.session.commit()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        mydb.session.rollback()</span><br><span class="line">        mydb.session.flush()</span><br><span class="line">    userId = movies.<span class="built_in">id</span></span><br><span class="line">    data = Movie.query.filter_by(<span class="built_in">id</span>=userId).first()</span><br><span class="line">    result = &#123;<span class="string">&#x27;id&#x27;</span>: movies.<span class="built_in">id</span>, <span class="string">&#x27;name&#x27;</span>: movies.name, <span class="string">&#x27;date&#x27;</span>: movies.date, <span class="string">&#x27;star&#x27;</span>: movies.star&#125;</span><br><span class="line">    <span class="keyword">return</span> jsonify(data=result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># # 删除数据</span></span><br><span class="line"><span class="comment"># @app.route(&#x27;/user/&lt;int:userId&gt;&#x27;, methods=[&#x27;DELETE&#x27;])</span></span><br><span class="line"><span class="comment"># def deleteMovie(userId):</span></span><br><span class="line"><span class="comment">#     Movie.query.filter_by(id=userId).delete()</span></span><br><span class="line"><span class="comment">#     mydb.session.commit()</span></span><br><span class="line"><span class="comment">#     return getMovies()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数据</span></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/user/delete&#x27;</span>, methods=[<span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteMovie</span>():</span></span><br><span class="line">    adict = request.get_json()</span><br><span class="line">    <span class="built_in">id</span> = adict.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">    Movie.query.filter_by(<span class="built_in">id</span>=<span class="built_in">id</span>).delete()</span><br><span class="line">    mydb.session.commit()</span><br><span class="line">    <span class="keyword">return</span> getMovies()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># mydb.drop_all()</span></span><br><span class="line">    <span class="comment"># mydb.create_all()</span></span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h2 id="Flask连接企业微信的自建应用"><a href="#Flask连接企业微信的自建应用" class="headerlink" title="Flask连接企业微信的自建应用"></a>Flask连接企业微信的自建应用</h2><ol><li>发送消息给自建应用</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/wx&#x27;</span>, methods=[<span class="string">&#x27;post&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sendMsg</span>():</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;touser&quot;</span>: (<span class="string">&#x27;|&#x27;</span>).join(self.userid.split(<span class="string">&#x27;,&#x27;</span>)),</span><br><span class="line">        <span class="string">&quot;toparty&quot;</span>: (<span class="string">&#x27;|&#x27;</span>).join(self.partid.split(<span class="string">&#x27;,&#x27;</span>)),</span><br><span class="line">        <span class="comment"># &quot;toparty&quot;:int(self.partid),</span></span><br><span class="line">        <span class="string">&quot;msgtype&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;agentid&quot;</span>: self.agent_id,</span><br><span class="line">        <span class="string">&quot;text&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: request.get_json().get(<span class="string">&quot;content&quot;</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;safe&quot;</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(data.get(<span class="string">&#x27;text&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    requests.post(self.send_msg_url.<span class="built_in">format</span>(self.access_token), json=data)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;success&#x27;</span></span><br></pre></td></tr></table></figure><br><ol start="2"><li>接收应用的消息，并回复相同的内容</li></ol><p>首先进行回调配置，改写腾讯官方的<code>WXBizMsgCrypt.py</code>工具，导入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将原版本改写成Python3版</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot; 对企业微信发送给企业后台的消息加解密示例代码.</span></span><br><span class="line"><span class="string">@copyright: Copyright (c) 1998-2014 Tencent Inc.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># ------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> xml.etree.cElementTree <span class="keyword">as</span> ET</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> ierror</span><br><span class="line"></span><br><span class="line"><span class="comment"># import sys</span></span><br><span class="line"><span class="comment"># reload(sys)</span></span><br><span class="line"><span class="comment"># sys.setdefaultencoding(&#x27;utf-8&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># import importlib</span></span><br><span class="line"><span class="comment"># importlib.reload(sys)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">关于Crypto.Cipher模块，ImportError: No module named &#x27;Crypto&#x27;解决方案</span></span><br><span class="line"><span class="string">请到官方网站 https://www.dlitz.net/software/pycrypto/ 下载pycrypto。</span></span><br><span class="line"><span class="string">下载后，按照README中的“Installation”小节的提示进行pycrypto安装。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FormatException</span>(<span class="params">Exception</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">throw_exception</span>(<span class="params">message, exception_class=FormatException</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;my define raise exception function&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">raise</span> exception_class(message)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SHA1</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;计算企业微信的消息签名接口&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getSHA1</span>(<span class="params">self, token, timestamp, nonce, encrypt</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;用SHA1算法生成安全签名</span></span><br><span class="line"><span class="string">        @param token:  票据</span></span><br><span class="line"><span class="string">        @param timestamp: 时间戳</span></span><br><span class="line"><span class="string">        @param encrypt: 密文</span></span><br><span class="line"><span class="string">        @param nonce: 随机字符串</span></span><br><span class="line"><span class="string">        @return: 安全签名</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        sortlist = [token, timestamp, nonce, encrypt]</span><br><span class="line">        sortlist.sort()</span><br><span class="line">        sha = hashlib.sha1()</span><br><span class="line">        sha.update(<span class="string">&quot;&quot;</span>.join(sortlist).encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">        <span class="keyword">return</span> ierror.WXBizMsgCrypt_OK, sha.hexdigest()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># try:</span></span><br><span class="line">        <span class="comment">#     sortlist = [token, timestamp, nonce, encrypt]</span></span><br><span class="line">        <span class="comment">#     sortlist.sort()</span></span><br><span class="line">        <span class="comment">#     sha = hashlib.sha1()</span></span><br><span class="line">        <span class="comment">#     sha.update(&quot;&quot;.join(sortlist))</span></span><br><span class="line">        <span class="comment">#     return ierror.WXBizMsgCrypt_OK, sha.hexdigest()</span></span><br><span class="line">        <span class="comment"># except Exception as e:</span></span><br><span class="line">        <span class="comment">#     print(e)</span></span><br><span class="line">        <span class="comment">#     return ierror.WXBizMsgCrypt_ComputeSignature_Error, None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JsonParse</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;提供提取消息格式中的密文及生成回复消息格式的接口&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># json消息模板</span></span><br><span class="line">    AES_TEXT_RESPONSE_TEMPLATE = <span class="string">&#x27;&#x27;&#x27;&#123;</span></span><br><span class="line"><span class="string">&quot;Encrypt&quot;: &quot;%(msg_encrypt)s&quot;,</span></span><br><span class="line"><span class="string">&quot;MsgSignature&quot;: &quot;%(msg_signaturet)s&quot;,</span></span><br><span class="line"><span class="string">&quot;TimeStamp&quot;: %(timestamp)s,</span></span><br><span class="line"><span class="string">&quot;Nonce&quot;: &quot;%(nonce)s&quot;</span></span><br><span class="line"><span class="string">&#125;&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extract</span>(<span class="params">self, jsontext</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;提取出json数据包中的加密消息</span></span><br><span class="line"><span class="string">        @param jsontext: 待提取的json字符串</span></span><br><span class="line"><span class="string">        @return: 提取出的加密消息字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            json_dict = json.loads(jsontext)</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_OK, json_dict[<span class="string">&#x27;Encrypt&#x27;</span>]</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_ParseXml_Error, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate</span>(<span class="params">self, encrypt, signature, timestamp, nonce</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;生成json消息</span></span><br><span class="line"><span class="string">        @param encrypt: 加密后的消息密文</span></span><br><span class="line"><span class="string">        @param signature: 安全签名</span></span><br><span class="line"><span class="string">        @param timestamp: 时间戳</span></span><br><span class="line"><span class="string">        @param nonce: 随机字符串</span></span><br><span class="line"><span class="string">        @return: 生成的json字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        resp_dict = &#123;</span><br><span class="line">            <span class="string">&#x27;msg_encrypt&#x27;</span>: encrypt,</span><br><span class="line">            <span class="string">&#x27;msg_signaturet&#x27;</span>: signature,</span><br><span class="line">            <span class="string">&#x27;timestamp&#x27;</span>: timestamp,</span><br><span class="line">            <span class="string">&#x27;nonce&#x27;</span>: nonce,</span><br><span class="line">        &#125;</span><br><span class="line">        resp_json = self.AES_TEXT_RESPONSE_TEMPLATE % resp_dict</span><br><span class="line">        <span class="keyword">return</span> resp_json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XMLParse</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;提供提取消息格式中的密文及生成回复消息格式的接口&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># xml消息模板</span></span><br><span class="line">    AES_TEXT_RESPONSE_TEMPLATE = <span class="string">&quot;&quot;&quot;&lt;xml&gt;</span></span><br><span class="line"><span class="string">&lt;Encrypt&gt;&lt;![CDATA[%(msg_encrypt)s]]&gt;&lt;/Encrypt&gt;</span></span><br><span class="line"><span class="string">&lt;MsgSignature&gt;&lt;![CDATA[%(msg_signaturet)s]]&gt;&lt;/MsgSignature&gt;</span></span><br><span class="line"><span class="string">&lt;TimeStamp&gt;%(timestamp)s&lt;/TimeStamp&gt;</span></span><br><span class="line"><span class="string">&lt;Nonce&gt;&lt;![CDATA[%(nonce)s]]&gt;&lt;/Nonce&gt;</span></span><br><span class="line"><span class="string">&lt;/xml&gt;&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extract</span>(<span class="params">self, xmltext</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;提取出xml数据包中的加密消息</span></span><br><span class="line"><span class="string">        @param xmltext: 待提取的xml字符串</span></span><br><span class="line"><span class="string">        @return: 提取出的加密消息字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            xml_tree = ET.fromstring(xmltext)</span><br><span class="line">            encrypt = xml_tree.find(<span class="string">&quot;Encrypt&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_OK, encrypt.text</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_ParseXml_Error, <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generate</span>(<span class="params">self, encrypt, signature, timestamp, nonce</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;生成xml消息</span></span><br><span class="line"><span class="string">        @param encrypt: 加密后的消息密文</span></span><br><span class="line"><span class="string">        @param signature: 安全签名</span></span><br><span class="line"><span class="string">        @param timestamp: 时间戳</span></span><br><span class="line"><span class="string">        @param nonce: 随机字符串</span></span><br><span class="line"><span class="string">        @return: 生成的xml字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        resp_dict = &#123;</span><br><span class="line">            <span class="string">&#x27;msg_encrypt&#x27;</span>: encrypt,</span><br><span class="line">            <span class="string">&#x27;msg_signaturet&#x27;</span>: signature,</span><br><span class="line">            <span class="string">&#x27;timestamp&#x27;</span>: timestamp,</span><br><span class="line">            <span class="string">&#x27;nonce&#x27;</span>: nonce,</span><br><span class="line">        &#125;</span><br><span class="line">        resp_xml = self.AES_TEXT_RESPONSE_TEMPLATE % resp_dict</span><br><span class="line">        <span class="keyword">return</span> resp_xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PKCS7Encoder</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;提供基于PKCS7算法的加解密接口&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    block_size = <span class="number">32</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">self, text</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; 对需要加密的明文进行填充补位</span></span><br><span class="line"><span class="string">        @param text: 需要进行填充补位操作的明文</span></span><br><span class="line"><span class="string">        @return: 补齐明文字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        text_length = <span class="built_in">len</span>(text)</span><br><span class="line">        <span class="comment"># 计算需要填充的位数</span></span><br><span class="line">        amount_to_pad = self.block_size - (text_length % self.block_size)</span><br><span class="line">        <span class="keyword">if</span> amount_to_pad == <span class="number">0</span>:</span><br><span class="line">            amount_to_pad = self.block_size</span><br><span class="line">        <span class="comment"># 获得补位所用的字符</span></span><br><span class="line">        pad = <span class="built_in">chr</span>(amount_to_pad)</span><br><span class="line">        <span class="keyword">return</span> text + pad * amount_to_pad</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decode</span>(<span class="params">self, decrypted</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;删除解密后明文的补位字符</span></span><br><span class="line"><span class="string">        @param decrypted: 解密后的明文</span></span><br><span class="line"><span class="string">        @return: 删除补位字符后的明文</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># pad = ord(decrypted[-1])</span></span><br><span class="line">        pad = decrypted[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> pad &lt; <span class="number">1</span> <span class="keyword">or</span> pad &gt; <span class="number">32</span>:</span><br><span class="line">            pad = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> decrypted[:-pad]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Prpcrypt</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;提供接收和推送给企业微信消息的加解密接口&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, key</span>):</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># self.key = base64.b64decode(key+&quot;=&quot;)</span></span><br><span class="line">        self.key = key</span><br><span class="line">        <span class="comment"># 设置加解密模式为AES的CBC模式</span></span><br><span class="line">        self.mode = AES.MODE_CBC</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">encrypt</span>(<span class="params">self, text, receiveid</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;对明文进行加密</span></span><br><span class="line"><span class="string">        @param text: 需要加密的明文</span></span><br><span class="line"><span class="string">        @return: 加密得到的字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># 16位随机字符串添加到明文开头</span></span><br><span class="line">        text = self.get_random_str() + struct.pack(<span class="string">&quot;I&quot;</span>, socket.htonl(<span class="built_in">len</span>(text))) + text + receiveid</span><br><span class="line">        <span class="comment"># 使用自定义的填充方式对明文进行补位填充</span></span><br><span class="line">        pkcs7 = PKCS7Encoder()</span><br><span class="line">        text = pkcs7.encode(text)</span><br><span class="line">        <span class="comment"># 加密</span></span><br><span class="line">        cryptor = AES.new(self.key, self.mode, self.key[:<span class="number">16</span>])</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            ciphertext = cryptor.encrypt(text)</span><br><span class="line">            <span class="comment"># 使用BASE64对加密后的字符串进行编码</span></span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_OK, base64.b64encode(ciphertext)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_EncryptAES_Error, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">self, text, receiveid</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;对解密后的明文进行补位删除</span></span><br><span class="line"><span class="string">        @param text: 密文</span></span><br><span class="line"><span class="string">        @return: 删除填充补位后的明文</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cryptor = AES.new(self.key, self.mode, self.key[:<span class="number">16</span>])</span><br><span class="line">            <span class="comment"># 使用BASE64对密文进行解码，然后AES-CBC解密</span></span><br><span class="line">            plain_text = cryptor.decrypt(base64.b64decode(text))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_DecryptAES_Error, <span class="literal">None</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># pad = ord(plain_text[-1])</span></span><br><span class="line">            pad = plain_text[-<span class="number">1</span>]</span><br><span class="line">            <span class="comment"># 去掉补位字符串</span></span><br><span class="line">            <span class="comment"># pkcs7 = PKCS7Encoder()</span></span><br><span class="line">            <span class="comment"># plain_text = pkcs7.encode(plain_text)</span></span><br><span class="line">            <span class="comment"># 去除16位随机字符串</span></span><br><span class="line">            content = plain_text[<span class="number">16</span>:-pad]</span><br><span class="line">            json_len = socket.ntohl(struct.unpack(<span class="string">&quot;I&quot;</span>, content[: <span class="number">4</span>])[<span class="number">0</span>])</span><br><span class="line">            json_content = content[<span class="number">4</span>: json_len+<span class="number">4</span>]</span><br><span class="line">            from_receiveid = content[json_len+<span class="number">4</span>:].decode(<span class="string">&quot;utf8&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_IllegalBuffer, <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> from_receiveid != receiveid:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;receiveid not match&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(from_receiveid)</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_ValidateCorpid_Error, <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>, json_content</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_random_str</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; 随机生成16位字符串</span></span><br><span class="line"><span class="string">        @return: 16位字符串</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        rule = string.letters + string.digits</span><br><span class="line">        <span class="built_in">str</span> = random.sample(rule, <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WXBizMsgCrypt</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="comment"># 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,sToken,sEncodingAESKey,sReceiveId</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.key = base64.b64decode(sEncodingAESKey+<span class="string">&quot;=&quot;</span>)</span><br><span class="line">            <span class="keyword">assert</span> <span class="built_in">len</span>(self.key) == <span class="number">32</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            throw_exception(<span class="string">&quot;[error]: EncodingAESKey unvalid !&quot;</span>, FormatException)</span><br><span class="line">            <span class="comment"># return ierror.WXBizMsgCrypt_IllegalAesKey,None</span></span><br><span class="line">        self.m_sToken = sToken</span><br><span class="line">        self.m_sReceiveId = sReceiveId</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 验证URL</span></span><br><span class="line">        <span class="comment"># @param sMsgSignature: 签名串，对应URL参数的msg_signature</span></span><br><span class="line">        <span class="comment"># @param sTimeStamp: 时间戳，对应URL参数的timestamp</span></span><br><span class="line">        <span class="comment"># @param sNonce: 随机串，对应URL参数的nonce</span></span><br><span class="line">        <span class="comment"># @param sEchoStr: 随机串，对应URL参数的echostr</span></span><br><span class="line">        <span class="comment"># @param sReplyEchoStr: 解密之后的echostr，当return返回0时有效</span></span><br><span class="line">        <span class="comment"># @return：成功0，失败返回对应的错误码</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">VerifyURL</span>(<span class="params">self, sMsgSignature, sTimeStamp, sNonce, sEchoStr</span>):</span></span><br><span class="line">        sha1 = SHA1()</span><br><span class="line">        ret,signature = sha1.getSHA1(self.m_sToken, sTimeStamp, sNonce, sEchoStr)</span><br><span class="line">        <span class="keyword">if</span> ret != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> ret, <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> signature == sMsgSignature:</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_ValidateSignature_Error, <span class="literal">None</span></span><br><span class="line">        pc = Prpcrypt(self.key)</span><br><span class="line">        ret,sReplyEchoStr = pc.decrypt(sEchoStr,self.m_sReceiveId)</span><br><span class="line">        <span class="keyword">return</span> ret,sReplyEchoStr</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">EncryptMsg</span>(<span class="params">self, sReplyMsg, sNonce, timestamp=<span class="literal">None</span></span>):</span></span><br><span class="line">        <span class="comment"># 将企业回复用户的消息加密打包</span></span><br><span class="line">        <span class="comment"># @param sReplyMsg: 企业号待回复用户的消息，xml格式的字符串</span></span><br><span class="line">        <span class="comment"># @param sTimeStamp: 时间戳，可以自己生成，也可以用URL参数的timestamp,如为None则自动用当前时间</span></span><br><span class="line">        <span class="comment"># @param sNonce: 随机串，可以自己生成，也可以用URL参数的nonce</span></span><br><span class="line">        <span class="comment"># sEncryptMsg: 加密后的可以直接回复用户的密文，包括msg_signature, timestamp, nonce, encrypt的xml格式的字符串,</span></span><br><span class="line">        <span class="comment"># return：成功0，sEncryptMsg,失败返回对应的错误码None</span></span><br><span class="line">        pc = Prpcrypt(self.key)</span><br><span class="line">        ret,encrypt = pc.encrypt(sReplyMsg, self.m_sReceiveId)</span><br><span class="line">        <span class="keyword">if</span> ret != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> ret,<span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> timestamp <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            timestamp = <span class="built_in">str</span>(<span class="built_in">int</span>(time.time()))</span><br><span class="line">        <span class="comment"># 生成安全签名</span></span><br><span class="line">        sha1 = SHA1()</span><br><span class="line">        ret,signature = sha1.getSHA1(self.m_sToken, timestamp, sNonce, encrypt)</span><br><span class="line">        <span class="keyword">if</span> ret != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> ret,<span class="literal">None</span></span><br><span class="line">        xmlParse = XMLParse()</span><br><span class="line">        <span class="keyword">return</span> ret,xmlParse.generate(encrypt, signature, timestamp, sNonce)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">DecryptMsg</span>(<span class="params">self, sPostData, sMsgSignature, sTimeStamp, sNonce</span>):</span></span><br><span class="line">        <span class="comment"># 检验消息的真实性，并且获取解密后的明文</span></span><br><span class="line">        <span class="comment"># @param sMsgSignature: 签名串，对应URL参数的msg_signature</span></span><br><span class="line">        <span class="comment"># @param sTimeStamp: 时间戳，对应URL参数的timestamp</span></span><br><span class="line">        <span class="comment"># @param sNonce: 随机串，对应URL参数的nonce</span></span><br><span class="line">        <span class="comment"># @param sPostData: 密文，对应POST请求的数据</span></span><br><span class="line">        <span class="comment">#  xml_content: 解密后的原文，当return返回0时有效</span></span><br><span class="line">        <span class="comment"># @return: 成功0，失败返回对应的错误码</span></span><br><span class="line">        <span class="comment"># 验证安全签名</span></span><br><span class="line">        xmlParse = XMLParse()</span><br><span class="line">        ret, encrypt = xmlParse.extract(sPostData)</span><br><span class="line">        <span class="keyword">if</span> ret != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> ret, <span class="literal">None</span></span><br><span class="line">        sha1 = SHA1()</span><br><span class="line">        ret,signature = sha1.getSHA1(self.m_sToken, sTimeStamp, sNonce, encrypt)</span><br><span class="line">        <span class="keyword">if</span> ret != <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> ret, <span class="literal">None</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> signature == sMsgSignature:</span><br><span class="line">            <span class="keyword">return</span> ierror.WXBizMsgCrypt_ValidateSignature_Error, <span class="literal">None</span></span><br><span class="line">        pc = Prpcrypt(self.key)</span><br><span class="line">        ret, xml_content = pc.decrypt(encrypt,self.m_sReceiveId)</span><br><span class="line">        <span class="keyword">return</span> ret, xml_content</span><br></pre></td></tr></table></figure><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> configparser <span class="keyword">import</span> ConfigParser</span><br><span class="line"><span class="keyword">from</span> WXBizMsgCrypt <span class="keyword">import</span> WXBizMsgCrypt</span><br><span class="line"><span class="keyword">import</span> xml.etree.cElementTree <span class="keyword">as</span> ET</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeChatMsg</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8000</span></span>):</span></span><br><span class="line">        config = ConfigParser()</span><br><span class="line">        config.read(<span class="string">&#x27;config.py&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="comment"># 定义服务器监听地址和端口</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = port</span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        self.sCorpID = config[<span class="string">&#x27;common&#x27;</span>][<span class="string">&#x27;corpid&#x27;</span>]</span><br><span class="line">        self.agent_secret = config[<span class="string">&#x27;appconfig&#x27;</span>][<span class="string">&#x27;secret&#x27;</span>]</span><br><span class="line">        self.agent_id = config[<span class="string">&#x27;appconfig&#x27;</span>][<span class="string">&#x27;agentid&#x27;</span>]</span><br><span class="line">        self.userid = config[<span class="string">&#x27;appconfig&#x27;</span>][<span class="string">&#x27;userid&#x27;</span>]</span><br><span class="line">        self.partid = config[<span class="string">&#x27;appconfig&#x27;</span>][<span class="string">&#x27;partid&#x27;</span>]</span><br><span class="line">        self.get_access_token_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;get_access_token_url&#x27;</span>]</span><br><span class="line">        self.send_msg_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;send_msg_url&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 转发接收消息的应用信息配置</span></span><br><span class="line">        self.sToken = config[<span class="string">&#x27;recmsg&#x27;</span>][<span class="string">&#x27;Token&#x27;</span>]</span><br><span class="line">        self.sEncodingAESKey = config[<span class="string">&#x27;recmsg&#x27;</span>][<span class="string">&#x27;EncodingAESKey&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取access_token</span></span><br><span class="line">        self.access_token = json.loads(requests.get(self.get_access_token_url.<span class="built_in">format</span>(self.sCorpID,self.agent_secret)).content)[<span class="string">&#x27;access_token&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_send_text_msg</span>(<span class="params">self, content, userid</span>):</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;touser&quot;</span>: userid,</span><br><span class="line">            <span class="string">&quot;toparty&quot;</span>: (<span class="string">&#x27;|&#x27;</span>).join(self.partid.split(<span class="string">&#x27;,&#x27;</span>)),</span><br><span class="line">            <span class="comment"># &quot;toparty&quot;:int(self.partid),</span></span><br><span class="line">            <span class="string">&quot;msgtype&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="string">&quot;agentid&quot;</span>: self.agent_id,</span><br><span class="line">            <span class="string">&quot;text&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;content&quot;</span>: content</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;safe&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(self.send_msg_url.<span class="built_in">format</span>(self.access_token), json.dumps(data))</span><br><span class="line">        <span class="built_in">print</span>(response.text)</span><br><span class="line">        result_msg = json.loads(response.content)[<span class="string">&#x27;errmsg&#x27;</span>]</span><br><span class="line">        <span class="keyword">return</span> result_msg</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">server_run</span>(<span class="params">self</span>):</span></span><br><span class="line">        app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">        @app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">            wxcpt = WXBizMsgCrypt(self.sToken, self.sEncodingAESKey, self.sCorpID)</span><br><span class="line">            <span class="comment"># 获取url验证时微信发送的相关参数</span></span><br><span class="line">            sVerifyMsgSig = request.args.get(<span class="string">&#x27;msg_signature&#x27;</span>)</span><br><span class="line">            sVerifyTimeStamp = request.args.get(<span class="string">&#x27;timestamp&#x27;</span>)</span><br><span class="line">            sVerifyNonce = request.args.get(<span class="string">&#x27;nonce&#x27;</span>)</span><br><span class="line">            sVerifyEchoStr = request.args.get(<span class="string">&#x27;echostr&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(sVerifyMsgSig, sVerifyTimeStamp, sVerifyNonce, sVerifyEchoStr)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 验证url</span></span><br><span class="line">            <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">                ret, sEchoStr = wxcpt.VerifyURL(sVerifyMsgSig, sVerifyTimeStamp, sVerifyNonce, sVerifyEchoStr)</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">type</span>(ret))</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">type</span>(sEchoStr))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (ret != <span class="number">0</span>):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;ERR: VerifyURL ret:&quot;</span> + <span class="built_in">str</span>(ret))</span><br><span class="line">                    sys.exit(<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> sEchoStr</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 接收客户端消息</span></span><br><span class="line">            <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">                sReqMsgSig = sVerifyMsgSig</span><br><span class="line">                sReqTimeStamp = sVerifyTimeStamp</span><br><span class="line">                sReqNonce = sVerifyNonce</span><br><span class="line">                sReqData = request.data</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;sReqData=&#x27;</span>, sReqData, <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">                ret, sMsg = wxcpt.DecryptMsg(sReqData, sReqMsgSig, sReqTimeStamp, sReqNonce)</span><br><span class="line">                <span class="built_in">print</span>(ret, sMsg, <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">if</span> (ret != <span class="number">0</span>):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;ERR: DecryptMsg ret: &quot;</span> + <span class="built_in">str</span>(ret))</span><br><span class="line">                    sys.exit(<span class="number">1</span>)</span><br><span class="line">                <span class="comment"># 解析发送的内容并打印</span></span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">type</span>(sMsg))</span><br><span class="line">                string = <span class="built_in">str</span>(sMsg,<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(string)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 转成字符串索引分片</span></span><br><span class="line">                <span class="comment"># i = string.index(&#x27;&lt;Content&gt;&#x27;)</span></span><br><span class="line">                <span class="comment"># j = string.index(r&#x27;&lt;/Content&gt;&#x27;)</span></span><br><span class="line">                <span class="comment"># print(i, j)</span></span><br><span class="line">                <span class="comment"># print(&quot;收到消息：&quot;, string[i+18:j-3])</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 解析XML</span></span><br><span class="line">                root = ET.fromstring(string)    <span class="comment"># 调用fromstring(), 直接返回解析树的根元素</span></span><br><span class="line">                <span class="keyword">for</span> child <span class="keyword">in</span> root:</span><br><span class="line">                    <span class="comment"># 第二层节点的标签名称和属性</span></span><br><span class="line">                    <span class="built_in">print</span>(child.tag,<span class="string">&quot;:&quot;</span>, child.text)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># 索引获取</span></span><br><span class="line">                <span class="comment"># print(root.tag, &quot;:&quot;, root.attrib)</span></span><br><span class="line">                <span class="comment"># print(&#x27;收到消息：&#x27;, root[4].text)</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 直接查找</span></span><br><span class="line">                content = root.find(<span class="string">&quot;Content&quot;</span>).text</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;\n收到消息：&#x27;</span>, content)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># xml_tree = ET.fromstring(sMsg)</span></span><br><span class="line">                <span class="comment"># print(&#x27;xml_tree is &#x27;, xml_tree)</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 自动回复相同消息给客户端</span></span><br><span class="line">                access_token = json.loads(requests.get(self.get_access_token_url.<span class="built_in">format</span>(self.sCorpID, self.agent_secret)).content)[<span class="string">&#x27;access_token&#x27;</span>]</span><br><span class="line">                <span class="built_in">print</span>(access_token)</span><br><span class="line"></span><br><span class="line">                userid = root.find(<span class="string">&quot;FromUserName&quot;</span>).text</span><br><span class="line">                <span class="built_in">print</span>(userid)</span><br><span class="line">                result = self._send_text_msg(content, userid)</span><br><span class="line">                <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    wechatserver = WeChatMsg()</span><br><span class="line">    wechatserver.server_run()</span><br></pre></td></tr></table></figure><br><ol start="3"><li>对通讯录进行增删改查</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> configparser <span class="keyword">import</span> ConfigParser</span><br><span class="line"><span class="keyword">from</span> WXBizMsgCrypt <span class="keyword">import</span> WXBizMsgCrypt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WeChattxl</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8000</span></span>):</span></span><br><span class="line">        config = ConfigParser()</span><br><span class="line">        config.read(<span class="string">&#x27;config.py&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="comment"># 定义服务器监听地址和端口</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = port</span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        self.sCorpID = config[<span class="string">&#x27;common&#x27;</span>][<span class="string">&#x27;corpid&#x27;</span>]</span><br><span class="line">        self.partid = config[<span class="string">&#x27;appconfig&#x27;</span>][<span class="string">&#x27;partid&#x27;</span>]</span><br><span class="line">        self.txlsecret = config[<span class="string">&#x27;appconfig&#x27;</span>][<span class="string">&#x27;txlsecret&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        self.get_access_token_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;get_access_token_url&#x27;</span>]</span><br><span class="line">        self.user_simplelist_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;user_simplelist_url&#x27;</span>]</span><br><span class="line">        self.user_list_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;user_list_url&#x27;</span>]</span><br><span class="line">        self.get_user_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;get_user_url&#x27;</span>]</span><br><span class="line">        self.create_user_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;create_user_url&#x27;</span>]</span><br><span class="line">        self.update_user_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;update_user_url&#x27;</span>]</span><br><span class="line">        self.delete_user_url = config[<span class="string">&#x27;urlconfig&#x27;</span>][<span class="string">&#x27;delete_user_url&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 应用信息配置</span></span><br><span class="line">        self.sToken = config[<span class="string">&#x27;recmsg&#x27;</span>][<span class="string">&#x27;Token&#x27;</span>]</span><br><span class="line">        self.sEncodingAESKey = config[<span class="string">&#x27;recmsg&#x27;</span>][<span class="string">&#x27;EncodingAESKey&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 获取access_token</span></span><br><span class="line">        self.access_token = json.loads(requests.get(self.get_access_token_url.<span class="built_in">format</span>(self.sCorpID,self.txlsecret)).content)[<span class="string">&#x27;access_token&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">server_run</span>(<span class="params">self</span>):</span></span><br><span class="line">        app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">        @app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">            wxcpt = WXBizMsgCrypt(self.sToken, self.sEncodingAESKey, self.sCorpID)</span><br><span class="line">            <span class="comment"># 获取url验证时微信发送的相关参数</span></span><br><span class="line">            sVerifyMsgSig = request.args.get(<span class="string">&#x27;msg_signature&#x27;</span>)</span><br><span class="line">            sVerifyTimeStamp = request.args.get(<span class="string">&#x27;timestamp&#x27;</span>)</span><br><span class="line">            sVerifyNonce = request.args.get(<span class="string">&#x27;nonce&#x27;</span>)</span><br><span class="line">            sVerifyEchoStr = request.args.get(<span class="string">&#x27;echostr&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(sVerifyMsgSig, sVerifyTimeStamp, sVerifyNonce, sVerifyEchoStr)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 验证url</span></span><br><span class="line">            <span class="keyword">if</span> request.method == <span class="string">&#x27;GET&#x27;</span>:</span><br><span class="line">                ret, sEchoStr = wxcpt.VerifyURL(sVerifyMsgSig, sVerifyTimeStamp, sVerifyNonce, sVerifyEchoStr)</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">type</span>(ret))</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">type</span>(sEchoStr))</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (ret != <span class="number">0</span>):</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;ERR: VerifyURL ret:&quot;</span> + <span class="built_in">str</span>(ret))</span><br><span class="line">                    sys.exit(<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> sEchoStr</span><br><span class="line"></span><br><span class="line">            <span class="comment"># if request.method == &#x27;POST&#x27;:</span></span><br><span class="line">                <span class="comment"># return &#x27;success&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        获取成员列表  127.0.0.1:8000/user  get</span></span><br><span class="line"><span class="string">        成员详细信息  /users  get</span></span><br><span class="line"><span class="string">        创建成员     /create post</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            &quot;userid&quot;: userid,  #必填</span></span><br><span class="line"><span class="string">            &quot;name&quot;: name,  #必填</span></span><br><span class="line"><span class="string">            &quot;mobile&quot;: mobile,  #选填，使用默认值</span></span><br><span class="line"><span class="string">            &quot;email&quot;: email,  #选填，使用默认值</span></span><br><span class="line"><span class="string">            &quot;position&quot;: position,  #选填，使用默认值</span></span><br><span class="line"><span class="string">            &quot;department&quot;: self.partid  #不填</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        读取成员  /get?id=[userid]  get</span></span><br><span class="line"><span class="string">        更新成员  /update  post</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">            &quot;userid&quot;: userid,  #必填</span></span><br><span class="line"><span class="string">            &quot;name&quot;: name,  #选填</span></span><br><span class="line"><span class="string">            &quot;mobile&quot;: mobile,  #选填</span></span><br><span class="line"><span class="string">            &quot;email&quot;: email,  #选填</span></span><br><span class="line"><span class="string">            &quot;position&quot;: position,  #选填</span></span><br><span class="line"><span class="string">            &quot;department&quot;: self.partid  #不填</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        删除成员  /delete?id=[userid]  get</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">        @app.route(<span class="params"><span class="string">&#x27;/user&#x27;</span>, methods=[<span class="string">&#x27;get&#x27;</span>]</span>)    </span><span class="comment"># 获取成员列表</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">user</span>():</span></span><br><span class="line">            url = self.user_simplelist_url.<span class="built_in">format</span>(self.access_token, self.partid)</span><br><span class="line">            r = requests.get(url)</span><br><span class="line">            <span class="keyword">return</span> jsonify(data=r.json())</span><br><span class="line"></span><br><span class="line"><span class="meta">        @app.route(<span class="params"><span class="string">&#x27;/users&#x27;</span>, methods=[<span class="string">&#x27;get&#x27;</span>]</span>)    </span><span class="comment"># 获取成员详细信息</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">users</span>():</span></span><br><span class="line">            url = self.user_list_url.<span class="built_in">format</span>(self.access_token, self.partid)</span><br><span class="line">            r = requests.get(url)</span><br><span class="line">            <span class="keyword">return</span> jsonify(data=r.json())</span><br><span class="line"></span><br><span class="line"><span class="meta">        @app.route(<span class="params"><span class="string">&#x27;/create&#x27;</span>, methods=[<span class="string">&#x27;post&#x27;</span>]</span>)    </span><span class="comment"># 创建成员</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">create</span>():</span></span><br><span class="line">            data = request.get_json()</span><br><span class="line">            <span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">            userid = data.get(<span class="string">&#x27;userid&#x27;</span>)    <span class="comment"># 必须，方便数据的录入，使用两位数字</span></span><br><span class="line">            name = data.get(<span class="string">&#x27;name&#x27;</span>)    <span class="comment"># 必须</span></span><br><span class="line"></span><br><span class="line">            mobile = data.get(<span class="string">&#x27;mobile&#x27;</span>)    <span class="comment"># 可选</span></span><br><span class="line">            email = data.get(<span class="string">&#x27;email&#x27;</span>)    <span class="comment"># 可选</span></span><br><span class="line">            position = data.get(<span class="string">&#x27;position&#x27;</span>)    <span class="comment"># 可选</span></span><br><span class="line">            <span class="keyword">if</span> mobile <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                mobile = <span class="string">&#x27;185000000&#x27;</span>+userid    <span class="comment"># 方便录入，用userid直接拼接成手机号</span></span><br><span class="line">            <span class="keyword">if</span> email <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                email = userid+<span class="string">&#x27;@ianna.com&#x27;</span>    <span class="comment"># 方便录入，邮箱也用userid拼接而成</span></span><br><span class="line">            <span class="keyword">if</span> position <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                position = <span class="string">&#x27;Worker&#x27;</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(mobile, email, position)</span><br><span class="line"></span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&quot;userid&quot;</span>: userid,</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: name,</span><br><span class="line">                <span class="string">&quot;mobile&quot;</span>: mobile,</span><br><span class="line">                <span class="string">&quot;email&quot;</span>: email,</span><br><span class="line">                <span class="string">&quot;position&quot;</span>: position,</span><br><span class="line">                <span class="string">&quot;department&quot;</span>: self.partid</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">            r = requests.post(self.create_user_url.<span class="built_in">format</span>(self.access_token), json.dumps(data))</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line">            result_msg = json.loads(r.content)[<span class="string">&#x27;errmsg&#x27;</span>]</span><br><span class="line">            <span class="keyword">return</span> result_msg</span><br><span class="line"></span><br><span class="line"><span class="meta">        @app.route(<span class="params"><span class="string">&#x27;/get&#x27;</span>, methods=[<span class="string">&#x27;get&#x27;</span>]</span>)    </span><span class="comment"># 读取成员</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">get</span>():</span></span><br><span class="line">            userid = request.args.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">            url = self.get_user_url.<span class="built_in">format</span>(self.access_token, userid)</span><br><span class="line">            r = requests.get(url)</span><br><span class="line">            <span class="keyword">return</span> jsonify(data=r.json())</span><br><span class="line"></span><br><span class="line"><span class="meta">        @app.route(<span class="params"><span class="string">&#x27;/update&#x27;</span>, methods=[<span class="string">&#x27;post&#x27;</span>]</span>)    </span><span class="comment"># 更新成员</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">update</span>():</span></span><br><span class="line">            <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            data = &#123;</span></span><br><span class="line"><span class="string">                &quot;userid&quot;: userid,</span></span><br><span class="line"><span class="string">                &quot;name&quot;: name,</span></span><br><span class="line"><span class="string">                &quot;mobile&quot;: mobile,</span></span><br><span class="line"><span class="string">                &quot;email&quot;: email,</span></span><br><span class="line"><span class="string">                &quot;position&quot;: position,</span></span><br><span class="line"><span class="string">                &quot;department&quot;: self.partid</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">            data = request.get_json()</span><br><span class="line">            data.update(&#123;<span class="string">&quot;department&quot;</span>: self.partid&#125;)</span><br><span class="line">            <span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line">            r = requests.post(self.update_user_url.<span class="built_in">format</span>(self.access_token), json.dumps(data))</span><br><span class="line">            <span class="built_in">print</span>(r.text)</span><br><span class="line">            result_msg = json.loads(r.content)[<span class="string">&#x27;errmsg&#x27;</span>]</span><br><span class="line">            <span class="keyword">return</span> result_msg</span><br><span class="line"></span><br><span class="line"><span class="meta">        @app.route(<span class="params"><span class="string">&#x27;/delete&#x27;</span>, methods=[<span class="string">&#x27;get&#x27;</span>]</span>)    </span><span class="comment"># 删除成员</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">delete</span>():</span></span><br><span class="line">            userid = request.args.get(<span class="string">&#x27;id&#x27;</span>)</span><br><span class="line">            url = self.delete_user_url.<span class="built_in">format</span>(self.access_token, userid)</span><br><span class="line">            r = requests.get(url)</span><br><span class="line">            result_msg = json.loads(r.content)[<span class="string">&#x27;errmsg&#x27;</span>]</span><br><span class="line">            <span class="keyword">return</span> result_msg</span><br><span class="line"></span><br><span class="line">        app.run(host=self.host, port=self.port, debug=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    wechatserver = WeChattxl()</span><br><span class="line">    wechatserver.server_run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ykqmain.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="https://blog.ykqmain.com/tags/Python/"/>
    
    <category term="Web" scheme="https://blog.ykqmain.com/tags/Web/"/>
    
    <category term="Flask" scheme="https://blog.ykqmain.com/tags/Flask/"/>
    
    <category term="http" scheme="https://blog.ykqmain.com/tags/http/"/>
    
    <category term="企业微信" scheme="https://blog.ykqmain.com/tags/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>基于Hadoop的简单云盘</title>
    <link href="https://blog.ykqmain.com/cloud-drive/"/>
    <id>https://blog.ykqmain.com/cloud-drive/</id>
    <published>2017-07-01T16:00:00.000Z</published>
    <updated>2022-01-19T15:35:18.205Z</updated>
    
    <content type="html"><![CDATA[<p><strong>首先完成 <a href="http://blog.ykqmain.com/hadoop/" target="\_blank">hadoop完全分布式搭建</a></strong></p><p>开发环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">本机 macOS 10.12.5</span><br><span class="line">虚拟机 CentOS 6.9  ×3</span><br><span class="line">Hadoop 2.7.3</span><br><span class="line">JDK 1.8</span><br><span class="line">Tomcat 8.5.16</span><br><span class="line">IDE Eclipse Java EE IDE for Web Developers, Oxygen Release (4.7.0)</span><br></pre></td></tr></table></figure><h2 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h2><p>下载<a href="http://tomcat.apache.org/">Tomcat</a>，我选择8.5.16的<code>.tar.gz</code>文件，解压并改名，最终路径为<code>/usr/local/tomcat</code></p><p>授予权限，<code>sudo chmod 755 /usr/local/tomcat/bin/*.sh</code></p><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/tomcat/bin</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>在浏览器输入<code>localhost:8080</code>即可访问，关闭在终端输入<code>./shutdown.sh</code>。</p><br><h2 id="Eclipse配置Tomcat"><a href="#Eclipse配置Tomcat" class="headerlink" title="Eclipse配置Tomcat"></a>Eclipse配置Tomcat</h2><ol><li><p>打开设置，<code>Server</code> - <code>Runtime Environments</code></p></li><li><p>右侧<code>Add</code>，选择对应Tomcat版本，next</p></li><li><p>路径填写Tomcat安装路径，我这里为<code>/usr/local/tomcat</code>，并选择JRE</p></li><li><p>Finish</p></li><li><p>点击IDE下方<code>Servers</code>，<code>create a new server</code>, next</p></li><li><p>Finish</p></li><li><p>双击创建的服务，Deploy path 填写Tomcat安装路径，即<code>/usr/local/tomcat</code>，关闭保存</p></li></ol><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/1.png!xsy"></p><br><h2 id="Eclipse创建Dynamic-Web-Project"><a href="#Eclipse创建Dynamic-Web-Project" class="headerlink" title="Eclipse创建Dynamic Web Project"></a>Eclipse创建Dynamic Web Project</h2><ol><li><p><code>File</code>-<code>New</code>-<code>Other</code>-<code>Web </code>-<code>Dynamic Web Project</code><br><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/2.png!xsy"></p><br></li><li><p>如图所示填写，创建一个名为TomcatTest的项目，之后一路next<br><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/3.png!xsy"></p><br></li><li><p>选择下方服务，右键，选择<code>Add and Remove</code>，将左侧的<code>TomcatTest</code>添加到右边，完成。</p></li><li><p>在<code>WebContent</code>目录下新建<code>index.html</code>文件，写入<br><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/4.png!xsy"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Tomcat<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>右键下方服务，<code>Start</code><br><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/5.png!xsy"></p><br></li><li><p>在浏览器输入<code>localhost:8080/TomcatTest/index.html</code>访问。</p><p> 本地tomcat测试成功</p></li></ol><br><h2 id="启动hadoop"><a href="#启动hadoop" class="headerlink" title="启动hadoop"></a>启动hadoop</h2><h3 id="1-启动3个虚拟机，"><a href="#1-启动3个虚拟机，" class="headerlink" title="1.启动3个虚拟机，"></a>1.启动3个虚拟机，</h3><p><strong><em>Update: 2017-9</em></strong></p><p><strong>事实证明，人确实容易犯懒，拖到现在😅。一旦放下等以后再整理，会花更多的时间和精力。</strong><br><br></p><h3 id="2-启动Hadoop"><a href="#2-启动Hadoop" class="headerlink" title="2.启动Hadoop"></a>2.启动Hadoop</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/hadoop/sbin</span><br><span class="line">./start-dfs.sh</span><br><span class="line">./start-yarn.sh</span><br></pre></td></tr></table></figure><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/6.png!xsy"></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/7.png!xsy"></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/8.png!xsy"></p><p><strong>50070端口：</strong></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/9.png!xsy"></p><p><br><br></p><h2 id="在Eclipse里创建新项目"><a href="#在Eclipse里创建新项目" class="headerlink" title="在Eclipse里创建新项目"></a>在Eclipse里创建新项目</h2><h3 id="1-主页及子版块页面，结构类似，其框架及部分代码如下图"><a href="#1-主页及子版块页面，结构类似，其框架及部分代码如下图" class="headerlink" title="1.主页及子版块页面，结构类似，其框架及部分代码如下图"></a>1.主页及子版块页面，结构类似，其框架及部分代码如下图</h3><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/10.png!xsy"></p><p><code>core-site.xml</code>和<code>hdfs-site.xml</code>为hadoop配置文件，复制到项目下。<br><br></p><h3 id="2-相关代码如下"><a href="#2-相关代码如下" class="headerlink" title="2.相关代码如下"></a>2.相关代码如下</h3><ul><li>FileInfo.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wh.entity;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileInfo</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">private</span> String fileName;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> fileSize;</span><br><span class="line"><span class="keyword">private</span> String createDate;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FileInfo</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">FileInfo</span><span class="params">(String fileName, <span class="keyword">double</span> fileSize, String createDate)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.fileName = fileName;</span><br><span class="line"><span class="keyword">this</span>.fileSize = fileSize;</span><br><span class="line"><span class="keyword">this</span>.createDate = createDate;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getFileName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fileName;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileName</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getFileSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> fileSize;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileSize</span><span class="params">(<span class="keyword">double</span> fileSize)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.fileSize = fileSize;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getCreateDate</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> createDate;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCreateDate</span><span class="params">(String createDate)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.createDate = createDate;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li>UserServlet.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wh.servlet;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileStatus;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.wh.entity.FileInfo;</span><br><span class="line"><span class="keyword">import</span> com.wh.util.HDFSUtil;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@WebServlet(&quot;/userServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取浏览器提交的数据</span></span><br><span class="line">        String userName = request.getParameter(<span class="string">&quot;userName&quot;</span>);</span><br><span class="line">        String userPassword = request.getParameter(<span class="string">&quot;userPassword&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//把提交的数据与数据库中的用户信息进行</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;admin&quot;</span>.equals(userName) &amp;&amp; <span class="string">&quot;123456&quot;</span>.equals(userPassword)) &#123;</span><br><span class="line">            </span><br><span class="line">            FileStatus[] files = HDFSUtil.listFile();</span><br><span class="line">            List&lt;FileInfo&gt; listFile = <span class="keyword">new</span> ArrayList&lt;FileInfo&gt;();</span><br><span class="line">            <span class="keyword">for</span>(FileStatus fs : files) &#123;</span><br><span class="line">                FileInfo file = <span class="keyword">new</span> FileInfo(fs.getPath().getName(), fs.getLen(), <span class="string">&quot;2017-07-01&quot;</span>);</span><br><span class="line">                listFile.add(file);</span><br><span class="line">            &#125;</span><br><span class="line">            request.setAttribute(<span class="string">&quot;fileInfos&quot;</span>, listFile);            </span><br><span class="line">            </span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;main.jsp&quot;</span>).forward(request, response);</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;failure.html&quot;</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li>FileUploadServlet.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wh.servlet;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.MultipartConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Part;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileStatus;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.wh.entity.FileInfo;</span><br><span class="line"><span class="keyword">import</span> com.wh.util.HDFSUtil;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@WebServlet(&quot;/fileUploadServlet&quot;)</span></span><br><span class="line"><span class="meta">@MultipartConfig</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileUploadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置中文编码</span></span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//获取客户端提交的文件</span></span><br><span class="line">        Part part = request.getPart(<span class="string">&quot;file&quot;</span>);</span><br><span class="line">        <span class="comment">//获取客户端提交的文件名</span></span><br><span class="line">        System.out.println(part.getSubmittedFileName());</span><br><span class="line">        <span class="comment">//=========================文件上传==================================</span></span><br><span class="line">        InputStream in = part.getInputStream();</span><br><span class="line">        HDFSUtil.uploadFile(in, part.getSubmittedFileName());</span><br><span class="line">        <span class="comment">//=========================文件列表==============================</span></span><br><span class="line">        FileStatus[] files = HDFSUtil.listFile();</span><br><span class="line">        List&lt;FileInfo&gt; listFile = <span class="keyword">new</span> ArrayList&lt;FileInfo&gt;();</span><br><span class="line">        <span class="keyword">for</span>(FileStatus fs : files) &#123;</span><br><span class="line">            FileInfo file = <span class="keyword">new</span> FileInfo(fs.getPath().getName(), fs.getLen(), <span class="string">&quot;2017-07-01&quot;</span>);</span><br><span class="line">            listFile.add(file);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        request.setAttribute(<span class="string">&quot;fileInfos&quot;</span>, listFile);</span><br><span class="line">        <span class="comment">//页面跳转</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">&quot;main.jsp&quot;</span>).forward(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li>FileDownloadServlet.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wh.servlet;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.wh.util.HDFSUtil;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件下载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/fileDownLoadServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDownloadServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        String fileName = request.getParameter(<span class="string">&quot;fileName&quot;</span>); </span><br><span class="line">        <span class="comment">//解决中文乱码</span></span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> </span><br><span class="line">                    + <span class="keyword">new</span> String(fileName.getBytes(<span class="string">&quot;GB18030&quot;</span>),<span class="string">&quot;ISO8859-1&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        OutputStream out = response.getOutputStream();</span><br><span class="line">        <span class="comment">//文件下载</span></span><br><span class="line">        HDFSUtil.downLoadFile(fileName, out);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li>FileDeleteServlet.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wh.servlet;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Part;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileStatus;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.wh.entity.FileInfo;</span><br><span class="line"><span class="keyword">import</span> com.wh.util.HDFSUtil;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@WebServlet(&quot;/fileDeleteServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FileDeleteServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">String fileName = request.getParameter(<span class="string">&quot;fileName&quot;</span>);</span><br><span class="line"></span><br><span class="line">HDFSUtil.deleteFile(fileName);</span><br><span class="line">doPost(request, response);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">FileStatus[] files = HDFSUtil.listFile();</span><br><span class="line">    List&lt;FileInfo&gt; listFile = <span class="keyword">new</span> ArrayList&lt;FileInfo&gt;();</span><br><span class="line">    <span class="keyword">for</span>(FileStatus fs : files) &#123;</span><br><span class="line">    FileInfo file = <span class="keyword">new</span> FileInfo(fs.getPath().getName(), fs.getLen(), <span class="string">&quot;2017-07-01&quot;</span>);</span><br><span class="line">    listFile.add(file);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    request.setAttribute(<span class="string">&quot;fileInfos&quot;</span>, listFile);</span><br><span class="line">request.getRequestDispatcher(<span class="string">&quot;main.jsp&quot;</span>).forward(request, response);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li>HDFSUtil.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wh.util;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FSDataInputStream;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FSDataOutputStream;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileStatus;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.FileSystem;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</span><br><span class="line"><span class="keyword">import</span> org.apache.hadoop.io.IOUtils;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * HDFS工具类</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Administrator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HDFSUtil</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 加载HDFS配置文件</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Configuration conf = <span class="keyword">new</span> Configuration();</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 上传</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">uploadFile</span><span class="params">(InputStream in, String fileName)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">FileSystem hdfs = FileSystem.get(conf);</span><br><span class="line"><span class="comment">// 设置要上传文件的路径</span></span><br><span class="line">Path uploadPath = <span class="keyword">new</span> Path(<span class="string">&quot;/user/hadoop/&quot;</span> + fileName);</span><br><span class="line"><span class="comment">// 进行文件上传</span></span><br><span class="line">FSDataOutputStream out = hdfs.create(uploadPath);</span><br><span class="line"><span class="comment">// 开始进行文件上传</span></span><br><span class="line">IOUtils.copyBytes(in, out, conf);</span><br><span class="line"><span class="comment">// 关闭</span></span><br><span class="line">IOUtils.closeStream(in);</span><br><span class="line">IOUtils.closeStream(out);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 下载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">downLoadFile</span><span class="params">(String fileName, OutputStream out)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">FileSystem hdfs = FileSystem.get(conf);</span><br><span class="line"><span class="comment">// 定位要访问的文件</span></span><br><span class="line">Path remoteFile = <span class="keyword">new</span> Path(<span class="string">&quot;/user/hadoop/&quot;</span> + fileName);</span><br><span class="line"><span class="comment">// 与定位文件连接输入流管道</span></span><br><span class="line">FSDataInputStream in = hdfs.open(remoteFile);</span><br><span class="line"><span class="comment">// 进行文件下载</span></span><br><span class="line">IOUtils.copyBytes(in, out, conf);</span><br><span class="line"><span class="comment">// 关闭流</span></span><br><span class="line">IOUtils.closeStream(in);</span><br><span class="line">IOUtils.closeStream(out);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteFile</span><span class="params">(String fileName)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">FileSystem hdfs = FileSystem.get(conf);</span><br><span class="line">Path remoteFile = <span class="keyword">new</span> Path(<span class="string">&quot;/user/hadoop/&quot;</span> + fileName);</span><br><span class="line">hdfs.delete(remoteFile,<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 文件列表展示</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> FileStatus[] listFile() <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">FileSystem hdfs = FileSystem.get(conf);</span><br><span class="line"><span class="comment">// 查看hdfs中某个文件目录</span></span><br><span class="line">Path remotePath = <span class="keyword">new</span> Path(<span class="string">&quot;/user/hadoop/&quot;</span>);</span><br><span class="line"><span class="comment">// 获取目录下的文件列表</span></span><br><span class="line">FileStatus[] files = hdfs.listStatus(remotePath);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> files;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 删除</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">FileSystem hdfs = FileSystem.get(conf);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><ul><li>login.html</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>欢迎登录XX系统<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- action配置请求的服务器地址 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- method表示HTTP请求的方式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;userServlet&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;userName&quot;</span>&gt;</span>用户名:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;userPassword&quot;</span>&gt;</span>密<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>码:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userPassword&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userPassword&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li>failure.html</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>登录失败<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">用户名或密码错误，请<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;login.html&quot;</span>&gt;</span>重新登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><ul><li>main.jsp</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@ taglib uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> prefix=<span class="string">&quot;c&quot;</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span> <span class="string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;th&gt;文件名&lt;/th&gt;</span><br><span class="line">&lt;th&gt;文件大小&lt;/th&gt;</span><br><span class="line">&lt;th&gt;创建时间&lt;/th&gt;</span><br><span class="line">&lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;file&quot;</span> items=<span class="string">&quot;$&#123;fileInfos&#125;&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td&gt;$&#123;file.fileName&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;file.fileSize&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;$&#123;file.createDate&#125;&lt;/td&gt;</span><br><span class="line">&lt;td&gt;&lt;a href=<span class="string">&quot;fileDownLoadServlet?fileName=$&#123;file.fileName&#125;&quot;</span>&gt;下载&lt;/a&gt;|&lt;a href=<span class="string">&quot;fileDeleteServlet?fileName=$&#123;file.fileName&#125;&quot;</span>&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">&lt;!-- application/x-www-form-urlencoded --&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;fileUploadServlet&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;label <span class="keyword">for</span>=<span class="string">&quot;file&quot;</span>&gt;上传文件:&lt;/label&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> id=<span class="string">&quot;file&quot;</span>  name=<span class="string">&quot;file&quot;</span>/&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传文件&quot;</span> /&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br><h3 id="3-相关库"><a href="#3-相关库" class="headerlink" title="3.相关库"></a>3.相关库</h3><p><code>~/file/WebContent/WEB-INF/lib</code></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/11.png!xsy"></p><p>注意从Tomcat中复制<code>servlet-api.jar</code>文件到<code>lib</code>中<br><br></p><h3 id="4-相关界面"><a href="#4-相关界面" class="headerlink" title="4.相关界面"></a>4.相关界面</h3><ul><li><strong>登录</strong></li></ul><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/12.png!xsy"></p><ul><li><strong>操作</strong></li></ul><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/13.png!xsy"></p><ul><li><strong>上传</strong></li></ul><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/14.png!xsy"></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/15.png!xsy"></p><ul><li><strong>下载</strong></li></ul><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/16.png!xsy"></p><ul><li><strong>删除</strong></li></ul><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/17.png!xsy"></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/18.png!xsy"></p><p><br><br></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/19.png!sy"></p><p>在项目制作过程中思路很重要，制作初期不能太纠结于个别效果，先按流程搭建好开发环境。</p><p>化繁为简，用最简单的方法，制作出理想的效果，实现全部的基础功能，实用第一，尽量美化。</p><p><strong>拖了这么久，总算是基本完成了。</strong></p><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;首先完成 &lt;a href=&quot;http://blog.ykqmain.com/hadoop/&quot; target=&quot;\_blank&quot;&gt;hadoop完全分布式搭建&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;开发环境：&lt;/p&gt;
&lt;figure class=&quot;highli</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ykqmain.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="大数据" scheme="https://blog.ykqmain.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="Hadoop" scheme="https://blog.ykqmain.com/tags/Hadoop/"/>
    
    <category term="Linux" scheme="https://blog.ykqmain.com/tags/Linux/"/>
    
    <category term="CentOS" scheme="https://blog.ykqmain.com/tags/CentOS/"/>
    
    <category term="Java" scheme="https://blog.ykqmain.com/tags/Java/"/>
    
    <category term="Tomcat" scheme="https://blog.ykqmain.com/tags/Tomcat/"/>
    
    <category term="Eclipse" scheme="https://blog.ykqmain.com/tags/Eclipse/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop完全分布式搭建</title>
    <link href="https://blog.ykqmain.com/hadoop/"/>
    <id>https://blog.ykqmain.com/hadoop/</id>
    <published>2017-06-26T16:00:00.000Z</published>
    <updated>2022-01-19T15:45:12.436Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>环境：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">本机：macOS</span><br><span class="line"> </span><br><span class="line">虚拟机(VirtualBox)：CentOS 6.9</span><br><span class="line">复制三个CentOS</span><br><span class="line">一个作为主节点(Master)，两个从节点(Slave)</span><br><span class="line">三台虚拟机器名分别为：master, slave1, slave2</span><br><span class="line"> </span><br><span class="line">Hadoop 2.7.3</span><br><span class="line">JDK 1.8</span><br></pre></td></tr></table></figure><p>Vim常用操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">esc    从编辑模式切换到命令模式</span><br><span class="line">a      切换到编辑模式，在光标后插入</span><br><span class="line">o      切换到编辑模式，在光标下一行插入</span><br><span class="line"> </span><br><span class="line">命令模式下：</span><br><span class="line">u      撤销操作</span><br><span class="line">G      跳至文件末尾</span><br><span class="line">dd     删除光标那一行字符</span><br><span class="line">ggdG   清空内容</span><br><span class="line"> </span><br><span class="line">:wq    保存退出</span><br><span class="line">:q     退出</span><br><span class="line">:q!    强制退出</span><br></pre></td></tr></table></figure><br><h2 id="配置虚拟机"><a href="#配置虚拟机" class="headerlink" title="配置虚拟机"></a>配置虚拟机</h2><ol><li><p>安装虚拟机</p><ol><li><p>下载并安装<a href="https://www.centos.org/">CentOS</a>，我选择的 CentOS 6.9</p></li><li><p>配置Java</p><ol><li>卸载自带的jdk<ul><li><code>rpm -qa | grep jdk</code>查看目前系统的jdk</li><li>使用<code>yum -y remove 名称</code> 一个个卸载<br></li></ul></li><li>安装 <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">jdk</a><br></li><li>配置JAVA环境变量<ul><li><code>cd</code>到<code>/usr/</code>目录下创建java文件夹，<code>mkdir java</code></li><li><code>tar -zxvf 文件名</code>解压到<code>/usr/java/</code>目录下</li><li>将jdk的包名改为”jdk”，<code>mv 包名 jdk</code></li><li><code>vim ／etc/profile</code>配置环境变量，在文件末尾添加：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=/usr/java/jdk/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$CLASSPATH</span>:<span class="variable">$JAVA_HOME</span>/lib:<span class="variable">$JRE_HOME</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$JRE_HOME</span>/bin</span><br></pre></td></tr></table></figure></li></ul></li><li>检测<ul><li>环境变量生效 <code>source /etc/profile</code></li><li>检测 <code>java -version</code></li></ul></li></ol></li><li><p>将一台CentOS虚拟机克隆成3台</p><p> VirtualBox有这个功能，复制2个虚拟机，Mac地址重新分配。</p><ol><li><p>修改机器名 <code>vim /etc/sysconfig/network</code></p></li><li><p><strong>全程使用root账户</strong> </p></li><li><p>关闭防火墙，GUI设置，或者<code>service iptables stop</code></p></li><li><p>检验各个主机之间能否连通，<code>ping ip</code></p></li><li><p>不管用什么办法，让IP固定不变。设置静态IP，或者使用路由器固定IP。</p><p> 我的配置如下：</p><table><thead><tr><th>机器名</th><th>IP</th></tr></thead><tbody><tr><td>master</td><td>192.168.76.11</td></tr><tr><td>slave1</td><td>192.168.76.12</td></tr><tr><td>slave2</td><td>192.168.76.13</td></tr></tbody></table></li></ol></li></ol></li><li><p>设置hosts</p><p> 三台机器全部设置</p><p> <code>vim /etc/hosts</code></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1       localhost.localdomain localhost</span><br><span class="line">::1             localhost6.localdomain6 localhost6</span><br><span class="line">#增加了下面3行</span><br><span class="line">192.168.76.11   master</span><br><span class="line">192.168.76.12   slave1</span><br><span class="line">192.168.76.13  slave2</span><br></pre></td></tr></table></figure></li></ol><br><h2 id="配置ssh免密码登陆"><a href="#配置ssh免密码登陆" class="headerlink" title="配置ssh免密码登陆"></a>配置ssh免密码登陆</h2><ol><li><p>ssh配置，<code>vim /etc/ssh/sshd_config</code></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 以下三项修改成以下配置</span><br><span class="line">RSAAuthentication yes # 启用 RSA 认证</span><br><span class="line">PubkeyAuthentication yes # 启用公钥私钥配对认证方式</span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys # 公钥文件路径（和上面生成的文件同）</span><br></pre></td></tr></table></figure></li><li><p>生成ssh key</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd ~</span><br><span class="line">ssh-keygen</span><br><span class="line">一路回车，这样就在~/.ssh目录下生成了几个文件</span><br><span class="line">cd ~/.ssh</span><br><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys  #这个命令将id_rsa.pub的内容追加了authorized_keys的内容后面</span><br></pre></td></tr></table></figure><p> 重启ssh服务，<code>service sshd restart</code></p></li><li><p>免密登陆</p><ol><li>去另外两台机器用同样的方式生成<code>id_rsa.pub</code></li><li>分别把它们复制到master机器上</li><li>在slave1机器上，<code>scp id_rsa.pub root@192.168.76.11:~/.ssh/id_rsa.pub.1</code></li><li>在slave1机器上，<code>scp id_rsa.pub root@192.168.76.11:~/.ssh/id_rsa.pub.2</code></li><li>回到master机器的<code>~/.ssh</code>目录，执行<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat id_rsa.pub.1 &gt;&gt; authorized_keys</span><br><span class="line">cat id_rsa.pub.2 &gt;&gt; authorized_keys</span><br></pre></td></tr></table></figure></li><li>最后我们把这个<code>authorized_keys</code>用scp命令复制到两个从节点上，这样三台机器两两之间就能互相访问了<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp authorized_keys root@192.168.76.12:~/.ssh/</span><br><span class="line">scp authorized_keys root@192.168.76.13:~/.ssh/</span><br></pre></td></tr></table></figure></li><li>给<code>.ssh</code>目录和<code>.ssh/authorized_keys</code>设置权限，<strong>三台机器都执行</strong>：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 ~/.ssh</span><br><span class="line">chmod 644 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></li></ol></li><li><p>在各主机下进行无密码登陆测试</p></li></ol><br><h2 id="配置hadoop"><a href="#配置hadoop" class="headerlink" title="配置hadoop"></a>配置hadoop</h2><p>下载<a href="http://hadoop.apache.org/releases.html">hadoop</a>，选择binary包，我下载的hadoop2.7.3，传到master的<code>/usr/</code>下，解压，并将文件夹名改名为<code>hadoop</code>。</p><p>涉及到的配置文件有7个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~/usr/hadoop/etc/hadoop/hadoop-env.sh </span><br><span class="line">~/usr/hadoop/etc/hadoop/yarn-env.sh </span><br><span class="line">~/usr/hadoop/etc/hadoop/core-site.xml </span><br><span class="line">~/usr/hadoop/etc/hadoop/hdfs-site.xml </span><br><span class="line">~/usr/hadoop/etc/hadoop/mapred-site.xml </span><br><span class="line">~/usr/hadoop/etc/hadoop/yarn-site.xml</span><br><span class="line">~/usr/hadoop/etc/hadoop/slaves </span><br></pre></td></tr></table></figure><br><p>1.<code>vim ~/usr/hadoop/etc/hadoop/hadoop-env.sh </code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 这个文件要修改的地方就是JAVA_HOME环境变量</span><br><span class="line"># The java implementation to use.</span><br><span class="line">export JAVA_HOME=/usr/java/jdk</span><br></pre></td></tr></table></figure><p>2.<code>vim ~/usr/hadoop/etc/hadoop/yarn-env.sh </code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># yarn的环境配置，同样只需要修改JAVA_HOME就行，找到下面这行</span><br><span class="line"># some Java parameters</span><br><span class="line">export JAVA_HOME=/usr/java/jdk</span><br></pre></td></tr></table></figure><ol start="3"><li><code>mkdir ~/usr/hadoop/tmp</code><br> <code>vim ~/usr/hadoop/etc/hadoop/core-site.xml </code></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>/home/hadoop/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.default.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.<code>vim ~/usr/hadoop/etc/hadoop/hdfs-site.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#hdfs的配置文件，dfs.http.address配置了hdfs的http的访问位置；dfs.replication配置了文件块的副本数，一般不大于从机的个数。</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.http.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5.修改模板文件，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/usr/hadoop/etc/hadoop/</span><br><span class="line">cp mapred-site.xml.template mapred-site.xml</span><br></pre></td></tr></table></figure><p><code>vim ~/usr/hadoop/etc/hadoop/mapred-site.xml </code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapred.job.tracker<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:9001<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapred.map.tasks<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>20<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapred.reduce.tasks<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>4<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>6.<code>vim ~/usr/hadoop/etc/hadoop/yarn-site.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#该文件为yarn框架的配置,主要是一些任务的启动位置</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Site specific YARN configuration properties --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8088<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.admin.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>master:8033<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>7.<code>vim ~/usr/hadoop/etc/hadoop/slaves</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 这是设置从节点hostname的地方，一行一个</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure><p><strong>配置完成</strong></p><br><p>8.将配置好的hadoop复制到其他机器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /usr/hadoop root@192.168.76.12:/usr/</span><br><span class="line">scp –r /usr/hadoop root@192.168.76.13:/usr/</span><br></pre></td></tr></table></figure><p><strong>安装完成</strong></p><br><h2 id="验证并测试hadoop"><a href="#验证并测试hadoop" class="headerlink" title="验证并测试hadoop"></a>验证并测试hadoop</h2><ol><li><p>启动</p><p> hadoop的安装目录为 <code>/usr/hadoop</code></p><p> 可选配置hadoop环境变量，<code>vim ／etc/profile</code></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HADOOP_INSTALL=/usr/hadoop  </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;HADOOP_INSTALL&#125;</span>/bin:<span class="variable">$&#123;HADOOP_INSTALL&#125;</span>/sbin<span class="variable">$&#123;PATH&#125;</span>  </span><br><span class="line"><span class="built_in">export</span> HADOOP_MAPRED_HOME=<span class="variable">$&#123;HADOOP_INSTALL&#125;</span>  </span><br><span class="line"><span class="built_in">export</span> HADOOP_COMMON_HOME=<span class="variable">$&#123;HADOOP_INSTALL&#125;</span>  </span><br><span class="line"><span class="built_in">export</span> HADOOP_HDFS_HOME=<span class="variable">$&#123;HADOOP_INSTALL&#125;</span>  </span><br><span class="line"><span class="built_in">export</span> YARN_HOME=<span class="variable">$&#123;HADOOP_INSTALLL&#125;</span>  </span><br><span class="line"><span class="built_in">export</span> HADOOP_COMMON_LIB_NATIVE_DIR=<span class="variable">$&#123;HADOOP_INSTALL&#125;</span>/lib/natvie    </span><br><span class="line"><span class="built_in">export</span> HADOOP_OPTS=<span class="string">&quot;-Djava.library.path=<span class="variable">$&#123;HADOOP_INSTALL&#125;</span>/lib:<span class="variable">$&#123;HADOOP_INSTALL&#125;</span>/lib/native&quot;</span> </span><br></pre></td></tr></table></figure><p> <code>source /etc/profile</code></p><ul><li>格式化Namenode  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/hadoop</span><br><span class="line">./bin/hdfs namenode -format</span><br></pre></td></tr></table></figure></li><li>启动  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/hadoop/sbin</span><br><span class="line">./start-dfs.sh</span><br><span class="line">./start-yarn.sh</span><br></pre></td></tr></table></figure></li></ul><p> 在三台机器上分别执行 jps 命令</p><ul><li><p>master上执行有四个进程</p><ul><li>NameNode</li><li>ResourceManager</li><li>&lt;&gt;</li><li>Jps</li></ul></li><li><p>slave上执行有三个进程</p><ul><li>DataNode </li><li>NodeManager </li><li>Jps </li></ul></li><li><p>输入以下指令查看报告，<code>hadoop dfsadmin -report</code></p></li></ul><p> 打开浏览器访问 <code>192.168.76.11:50070</code></p><p> <strong>检查 <code>Live Nodes</code> 是否为2</strong></p></li></ol><br><ol start="2"><li><p>运行测试</p><p> 向hadoop集群系统提交第一个mapreduce任务(wordcount)，进入本地hadoop目录，<code>/usr/hadoop</code></p><ol><li><p>在虚拟分布式文件系统上创建一个测试目录/data/input<br><code>bin/hdfs dfs -mkdir -p /data/input</code></p></li><li><p>将当前目录下的README.txt 文件复制到虚拟分布式文件系统中<br><code>hdfs dfs -put README.txt /data/input</code></p></li><li><p>查看文件系统中是否存在我们所复制的文件<br><code>bin/hdfs dfs -ls /data/input</code></p></li><li><p>运行如下命令向hadoop提交单词统计任务<br><code>hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount /data/input /data/output/result</code></p></li><li><p>查看result，结果在result下面的part-r-00000中<br><code>hdfs dfs -cat /data/output/result/part-r-00000</code></p></li></ol><p> <img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/cloud-drive/wordcount.png"></p><p> 成功运行，则搭建完成。</p><p> 停止运行，<code>sh /usr/hadoop/sbin/stop-all.sh</code></p></li></ol><p><br><br></p><p><strong>踩过的坑：</strong></p><ol><li><p>ssh免密登陆</p></li><li><p>重启Linux后Hadoop集群所有的DataNode都无法启动</p><ol><li><p>首先会出现几种情况，才会出现启动不了datanode的情况</p><ul><li>首先修改过master那台的配置文件</li><li>多次Hadoop namenode -format这种不好的习惯</li></ul></li><li><p>jps命令发现没有datanode启动</p><ul><li>到每个Slave机器下面去，找到<code>/usr/hadoop/tmp/dfs/</code>，会显示有data，把data文件夹删掉。</li><li>重启hadoop。</li></ul></li></ol></li></ol><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;环境：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla</summary>
      
    
    
    
    <category term="计算机" scheme="https://blog.ykqmain.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="大数据" scheme="https://blog.ykqmain.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="Hadoop" scheme="https://blog.ykqmain.com/tags/Hadoop/"/>
    
    <category term="Linux" scheme="https://blog.ykqmain.com/tags/Linux/"/>
    
    <category term="CentOS" scheme="https://blog.ykqmain.com/tags/CentOS/"/>
    
    <category term="Java" scheme="https://blog.ykqmain.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>NASM汇编的&quot;hello, world&quot;</title>
    <link href="https://blog.ykqmain.com/nasm/"/>
    <id>https://blog.ykqmain.com/nasm/</id>
    <published>2016-05-16T16:00:00.000Z</published>
    <updated>2022-01-19T16:06:15.343Z</updated>
    
    <content type="html"><![CDATA[<p>最近学了汇编语言，8086(发布1978年，16位)，MASM汇编器。结果就是，好像跟没学一样，完、全、搞、不、懂  _(:3」∠)_ </p><p>毫无疑问汇编是有用的，也不能装懂，也没有兴趣，也没有那么多时间去折腾，索性就放弃它，应付过了考试就好。</p><p>但也想象征下的写一个“hello, world”来纪念一下，然而，没想到的是，就这一个“hello, world”我也搞不定，看来放弃它是正确的选择。<br><br></p><p>因为我用Mac，所以MASM是用不了的，又因为不同的CPU，不同的汇编器，汇编的语法也不同，所以书本是没啥参考的了。</p><p>Mac自带<a href="http://www.nasm.us/">NASM</a>，使用它来汇编，使用<code>ld</code>来连接。</p><p>即使上网搜索也很难搞定NASM汇编的 “hello, world”，最后通过用英文Google找到了相关代码。</p><br><h3 id="Straight-Line-“hello-world”"><a href="#Straight-Line-“hello-world”" class="headerlink" title="Straight Line “hello, world”"></a>Straight Line “hello, world”</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">; hello.asm - a &quot;hello, world&quot; program using NASM</span><br><span class="line"></span><br><span class="line">; nasm -f macho hello.asm </span><br><span class="line">;Assemble the above source to an object file, hello.o, in the Mach-O format.</span><br><span class="line"></span><br><span class="line">; ld -o hello -e mystart hello.o</span><br><span class="line">;Link the object file to produce the hello executable. (Calling this step &quot;linking&quot; when there is only one object file is a bit weird.)</span><br><span class="line"></span><br><span class="line">; ./hello</span><br><span class="line">;Run the executable.</span><br><span class="line"></span><br><span class="line">; echo $?</span><br><span class="line">;Check the exit status in Bash.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">section .text</span><br><span class="line"></span><br><span class="line">global mystart                ; make the main function externally visible</span><br><span class="line"></span><br><span class="line">mystart:</span><br><span class="line"></span><br><span class="line">; 1 print &quot;hello, world&quot;</span><br><span class="line"></span><br><span class="line">    ; 1a prepare the arguments for the system call to write</span><br><span class="line">    push dword mylen          ; message length                           </span><br><span class="line">    push dword mymsg          ; message to write</span><br><span class="line">    push dword 1              ; file descriptor value</span><br><span class="line"></span><br><span class="line">    ; 1b make the system call to write</span><br><span class="line">    mov eax, 0x4              ; system call number for write</span><br><span class="line">    sub esp, 4                ; OS X (and BSD) system calls needs &quot;extra space&quot; on stack</span><br><span class="line">    int 0x80                  ; make the actual system call</span><br><span class="line"></span><br><span class="line">    ; 1c clean up the stack</span><br><span class="line">    add esp, 16               ; 3 args * 4 bytes/arg + 4 bytes extra space = 16 bytes</span><br><span class="line"></span><br><span class="line">; 2 exit the program</span><br><span class="line"></span><br><span class="line">    ; 2a prepare the argument for the sys call to exit</span><br><span class="line">    push dword 0              ; exit status returned to the operating system</span><br><span class="line"></span><br><span class="line">    ; 2b make the call to sys call to exit</span><br><span class="line">    mov eax, 0x1              ; system call number for exit</span><br><span class="line">    sub esp, 4                ; OS X (and BSD) system calls needs &quot;extra space&quot; on stack</span><br><span class="line">    int 0x80                  ; make the system call</span><br><span class="line"></span><br><span class="line">    ; 2c no need to clean up the stack because no code here would executed: already exited</span><br><span class="line"></span><br><span class="line">section .data</span><br><span class="line"></span><br><span class="line">    mymsg db &quot;hello, Assembly Language! (｡•ˇ‸ˇ•｡) ... and, say goodbye. _(:3」∠)_&quot;, 0xa  ; string with a carriage-return</span><br><span class="line">    mylen equ $-mymsg         ; string length in bytes</span><br></pre></td></tr></table></figure><br><p>汇编后缀为<code>.asm</code>, 注释为 <code>;</code> (分号之后的一行内字符视为注释)</p><p>打开终端，(当前文件夹下, 或完整路径)</p><p>Assemble: <code>nasm -f macho hello.asm</code><br>Link: <code>ld -o hello -e mystart hello.o</code><br>Run: <code>./hello</code></p><p>其他说明直接看代码内注释。</p><br><p><em>hello, Assembly Language!</em><br><em>… …</em><br><em>and,</em><br><em>Goodbye~</em></p><hr><br><p>通过汇编的学习，更加深刻地认识到一些事：</p><ul><li>选对教材很重要</li><li>Google很重要</li><li>英语也很重要，用英文Google更重要</li><li>不适合的不强求，该放弃的就得放弃</li></ul><br><p>//参考：</p><ul><li>如果想入门汇编，建议使用王爽的《汇编语言》</li><li><a href="http://peter.michaux.ca/articles/assembly-hello-world-for-os-x">Assembly “hello, world” for OS X</a></li><li><a href="https://en.wikipedia.org/wiki/Netwide_Assembler">NASM</a></li></ul><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近学了汇编语言，8086(发布1978年，16位)，MASM汇编器。结果就是，好像跟没学一样，完、全、搞、不、懂  _(:3」∠)_ &lt;/p&gt;
&lt;p&gt;毫无疑问汇编是有用的，也不能装懂，也没有兴趣，也没有那么多时间去折腾，索性就放弃它，应付过了考试就好。&lt;/p&gt;
&lt;p&gt;但也</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ykqmain.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="汇编" scheme="https://blog.ykqmain.com/tags/%E6%B1%87%E7%BC%96/"/>
    
    <category term="Assembly" scheme="https://blog.ykqmain.com/tags/Assembly/"/>
    
    <category term="NASM" scheme="https://blog.ykqmain.com/tags/NASM/"/>
    
  </entry>
  
  <entry>
    <title>C语言结构体</title>
    <link href="https://blog.ykqmain.com/c/"/>
    <id>https://blog.ykqmain.com/c/</id>
    <published>2016-01-31T16:00:00.000Z</published>
    <updated>2022-01-19T15:23:24.895Z</updated>
    
    <content type="html"><![CDATA[<p>寒假为了巩固基础, 简单复习了一下C和C++。</p><p>C语言基本看完了, 想到大一的一个 <em>C语言课程设计报告</em> , 当时还有一个问题没有解决就交上去了, 那就是将内容作为结构体保存到文件中。<br>(我当时实现的是, 将所有内容当做一个个的字符进行保存和读取。)</p><p>最近着手解决这个遗留问题, 当时的要求是这样的:</p><blockquote><p>图书信息管理系统设计</p><p>图书信息包括：登录号、书名、作者名、分类号、出版单位、出版时间、价格等。</p><p>试设计一图书信息管理系统，使之能提供以下功能：</p><ol><li>系统以菜单方式工作</li><li>图书信息录入功能(图书信息用文件保存)－－输入</li><li>图书信息浏览功能－－输出</li><li>图书信息查询功能－－算法<ul><li>按书名查询</li><li>按作者名查询</li></ul></li><li>图书信息的删除与修改(可选项)</li></ol></blockquote><h3 id="读取信息到结构体"><a href="#读取信息到结构体" class="headerlink" title="读取信息到结构体"></a>读取信息到结构体</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="keyword">float</span> f;</span><br><span class="line">&#125;st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">in</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    st sa, sb;</span><br><span class="line">    <span class="keyword">char</span> *str = <span class="string">&quot;abcdefg&quot;</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;sa.c);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sa.h);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>); </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;sa.f);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    fp = fopen(<span class="string">&quot;st.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!fp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;errror!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sa:c=%c,h=%d,f=%f\n&quot;</span>, sa.c, sa.h, sa.f);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sizeof(sa)=%d:&amp;c=%x,&amp;h=%x,&amp;f=%x\n&quot;</span>,</span><br><span class="line">        <span class="keyword">sizeof</span>(sa), &amp;sa.c, &amp;sa.h, &amp;sa.f);</span><br><span class="line">    fwrite(&amp;sa, <span class="keyword">sizeof</span>(sa), <span class="number">1</span>, fp);</span><br><span class="line">    rewind(fp);</span><br><span class="line">    fread(&amp;sb, <span class="keyword">sizeof</span>(sb), <span class="number">1</span>, fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sb:c=%c,h=%d,,f=%f\n&quot;</span>, sb.c, sb.h, sb.f);</span><br><span class="line"></span><br><span class="line">    fclose(fp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">out</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    st sb;</span><br><span class="line">    fp = fopen(<span class="string">&quot;st.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!fp)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;errror!\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fread(&amp;sb, <span class="keyword">sizeof</span>(sb), <span class="number">1</span>, fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sb:c=%c,h=%d,f=%f\n&quot;</span>,</span><br><span class="line">        sb.c, sb.h, sb.f);</span><br><span class="line">    <span class="comment">//printf(&quot;sizeof(sb)=%d:&amp;c=%x,&amp;h=%x,&amp;f=%x\n&quot;, sizeof(sb), &amp;sb.c, &amp;sb.h,&amp;sb.f);</span></span><br><span class="line"></span><br><span class="line">    fclose(fp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输入：\n&quot;</span>);</span><br><span class="line">    in();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输出：\n&quot;</span>);</span><br><span class="line">    out();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>作为八年级就接触到的人生中第一门编程语言, 时至今日, 我仍然觉得, C是<strong>最难的</strong>一门计算机高级语言，毕竟我只会在一个黑框框里面把C当计算器使用。</p><p>到这里, 终于可以跟C告一段落了, 不知道下次再见是什么时候（其实我再也不想用C了）。</p><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;寒假为了巩固基础, 简单复习了一下C和C++。&lt;/p&gt;
&lt;p&gt;C语言基本看完了, 想到大一的一个 &lt;em&gt;C语言课程设计报告&lt;/em&gt; , 当时还有一个问题没有解决就交上去了, 那就是将内容作为结构体保存到文件中。&lt;br&gt;(我当时实现的是, 将所有内容当做一个个的字符进行保</summary>
      
    
    
    
    <category term="编程" scheme="https://blog.ykqmain.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="C" scheme="https://blog.ykqmain.com/tags/C/"/>
    
    <category term="C语言" scheme="https://blog.ykqmain.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
    <category term="结构体" scheme="https://blog.ykqmain.com/tags/%E7%BB%93%E6%9E%84%E4%BD%93/"/>
    
    <category term="文件" scheme="https://blog.ykqmain.com/tags/%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>利器</title>
    <link href="https://blog.ykqmain.com/liqi/"/>
    <id>https://blog.ykqmain.com/liqi/</id>
    <published>2016-01-03T16:00:00.000Z</published>
    <updated>2022-01-20T05:37:42.233Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到一个有意思的项目 <a href="http://liqi.io/community">利器社群计划</a> ，借此机会，我也分享一下自己使用的一些小工具……</p><p><mark><em><strong>Update: 2022-01</strong></em></mark></p><br><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>常用ID<strong>「秋风木叶」</strong>，简称<strong>“秋叶”</strong>，取自《楚辞·九歌·湘夫人》：</p><blockquote><p>袅袅兮秋风，洞庭波兮木叶下。</p></blockquote><p>也用<code>Yang</code>这个称呼。🤓</p><h4 id="兴趣和爱好："><a href="#兴趣和爱好：" class="headerlink" title="兴趣和爱好："></a>兴趣和爱好：</h4><ul><li>📖 历史</li><li>💻 计算机</li><li>📺 动画</li></ul><br><h2 id="在用哪些硬件？"><a href="#在用哪些硬件？" class="headerlink" title="在用哪些硬件？"></a>在用哪些硬件？</h2><ul><li><strong> iPhone 12 [Nana]</strong><ul><li>🎧 AirPods 2</li></ul></li><li><strong> MacBook Pro (13-inch, M1, 2020) (16+256) [Anna]</strong><ul><li>🖥️ Dell U2720QM</li><li>⌨️ NuPhy Air75</li><li>🖱️ Logitech MX Anywhere 3</li><li>🎮 8BitDo Pro 2</li></ul></li></ul><br><h2 id="软件呢？"><a href="#软件呢？" class="headerlink" title="软件呢？"></a>软件呢？</h2><p><strong>我喜欢精简，系统自带的软件足够好则优先使用；免费或开源的软件其次；最后才是买断制软件；订阅制软件几乎不考虑。</strong></p><p><strong>在满足自己所需要功能的前提下，将自己的互联网帐号降到最低，涉及到的平台和APP减到最少。</strong></p><p><strong>macOS 11 (Big Sur)</strong></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/macOS11.png!sy"></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/macOS-1.png!sy"></p><p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/macOS-2.png!sy"></p><br><ol><li><p>神器：<strong>终端</strong> (Terminal.app)</p><p> <img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/Terminal.png!sy"></p><ul><li><p><em>为什么不是<a href="https://www.iterm2.com/">iTerm2</a>？</em> iTerm2目前唯一的问题就是不能识别macOS的替身文件夹，需要用<code>ln</code>命令代替，除此之外比自带的终端好用。至于为什么不选择它，即使我很怀念iTerm2的选中复制右键粘贴功能，但我确实不需要那么多的功能。</p></li><li><p>Xcode命令行工具 <code>xcode-select --install</code></p></li><li><p>终端代理</p><ul><li><code>export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080</code></li></ul></li><li><p><a href="http://ohmyz.sh/"><strong>oh-my-zsh</strong></a></p><ul><li><a href="https://github.com/zsh-users/zsh-syntax-highlighting">zsh-syntax-highlighting</a><ul><li><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-syntax-highlighting</code></li></ul></li><li><a href="https://github.com/zsh-users/zsh-completions">zsh-completions</a><ul><li><code> git clone https://github.com/zsh-users/zsh-completions $&#123;ZSH_CUSTOM:=~/.oh-my-zsh/custom&#125;/plugins/zsh-completions</code></li></ul></li><li><a href="https://github.com/zsh-users/zsh-autosuggestions">zsh-autosuggestions</a><ul><li><code>git clone https://github.com/zsh-users/zsh-autosuggestions $&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;/plugins/zsh-autosuggestions</code></li></ul></li></ul></li><li><p><a href="https://brew.sh/"><strong>Homebrew</strong></a> (<code>/opt/homebrew</code>)</p><ul><li><a href="https://www.gnu.org/software/wget">wget</a></li><li><a href="https://httpie.io/">httpie</a></li><li><a href="http://mama.indstate.edu/users/ice/tree">Tree</a></li><li><a href="https://ffmpeg.org/">FFmpeg</a></li><li><a href="https://github.com/beeftornado/homebrew-rmtree">homebrew-rmtree</a></li><li><a href="https://github.com/tj/n"><strong>n</strong></a> (Node.js version management)<ul><li><code>sudo chown -R $(whoami) /usr/local/n</code></li><li><code>sudo chown -R $(whoami) /usr/local/bin /usr/local/lib /usr/local/include /usr/local/share</code></li><li><code>n lts</code> (<a href="https://nodejs.org/zh-cn/">Node.js</a>)<ul><li><code>npm install -g tldr</code> (<a href="https://github.com/tldr-pages/tldr">tldr-pages</a>)</li><li><code>npm install -g hexo-cli</code></li></ul></li></ul></li></ul></li><li><p><a href="https://www.python.org/"><strong>Python</strong></a></p><ul><li>flake8</li><li>black</li><li>pip-autoremove</li><li>requests</li><li>beautifulsoup4</li><li>openpyxl</li><li>pandas</li><li>pillow</li><li>matplotlib</li><li>jieba</li><li>wordcloud</li><li>python-docx</li><li>mysql-connector-python</li><li>sqlmodel</li><li>fastapi</li><li>uvicorn</li></ul></li><li><p><a href="https://www.oracle.com/java/technologies/downloads/">JDK</a> (<a href="https://adoptium.net/">OpenJDK</a>)</p></li><li><p><a href="https://dev.mysql.com/downloads/">MySQL</a> (<code>/etc/my.cnf</code>)</p></li><li><p><a href="https://www.rust-lang.org/zh-CN/"><del>Rust</del></a> (从入门到放弃)</p></li></ul></li></ol><br><ol start="2"><li><p>浏览器</p><ul><li>主要 <strong>Safari</strong><ul><li><a href="https://adguard.com/zh_cn/adguard-safari/overview.html">AdGuard</a> 或 <a href="https://adblockersafari.com/">AdBlocker Pro</a> [App Store]</li><li><a href="https://www.tampermonkey.net/">Tampermonkey</a> [App Store]<ul><li><a href="https://greasyfork.org/zh-CN"><em>Greasy Fork</em></a><ul><li><a href="https://greasyfork.org/zh-CN/scripts/1682-google-hit-hider-by-domain-search-filter-block-sites">Google Hit Hider by Domain</a> (<a href="https://github.com/iorate/ublacklist"><em>uBlacklist</em></a>)</li><li><a href="https://greasyfork.org/zh-CN/scripts/375858-bilibili-autowide">Bilibili AutoWide</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/372516-bilibili-merged-flv-mp4-ass-enhance">bilibili merged flv+mp4+ass+enhance</a></li><li><a href="https://greasyfork.org/zh-CN/scripts/405130-%E6%96%87%E6%9C%AC%E9%80%89%E4%B8%AD%E5%A4%8D%E5%88%B6">文本选中复制</a><br>&nbsp;</li></ul></li></ul></li></ul></li><li>情怀 <a href="https://www.mozilla.org/en-US/firefox/all/#product-desktop-release"><strong>Firefox</strong></a><ul><li><a href="https://github.com/gorhill/uBlock">uBlock Origin</a></li><li><a href="https://www.tampermonkey.net/">Tampermonkey</a></li></ul></li></ul></li></ol><br><ol start="3"><li><p>编辑器:</p><ul><li><p><a href="https://www.sublimetext.com/"><strong>Sublime Text</strong></a><br>  <img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/Sublime.png!sy"></p><ul><li><a href="https://packagecontrol.io/">Package Control</a>：<a href="https://github.com/ykqmain/Config/blob/master/Sublime/Package%20Control.sublime-settings"><strong>myPlugins</strong></a></li><li>字体：<a href="https://github.com/adobe-fonts/source-code-pro">SourceCodePro-Regular 14</a></li><li>主题：Adaptive/Mariana</li></ul></li><li><p>兜兜转转还是回到了最初的Sublime，并购买License支持了一下。我认为编辑器和IDE应该分工明确，一个快而准，一个大而全，各司其职。Sublime对我而言是足够且有意义的，希望Sublime能一直陪伴我吧，转行以后估计不常写代码了，也就用用Python，使用Sublime有一种愉悦的感觉，更重要的还是陪伴。</p></li></ul></li></ol><br><ol start="4"><li><p>IDE:</p><p> 在我以后的生活工作中可能不再需要IDE了，保留记录、怀念一下。</p><ul><li><a href="https://code.visualstudio.com/">VS Code</a> (<a href="https://github.com/features/codespaces"><em>GitHub Codespaces</em></a>)</li><li><a href="https://www.jetbrains.com/"><del>JetBrains</del></a></li></ul></li></ol><br><ol start="5"><li><p>Developer Tools:</p><ul><li><a href="https://dbeaver.io/">DBeaver</a> (database tool) (<a href="https://www.eclipse.org/">Eclipse</a>的纪念)</li><li><a href="https://www.sourcetreeapp.com/">Sourcetree</a> (Git GUI)</li><li><a href="https://paw.cloud/">Paw</a> (API tool)</li><li><a href="https://www.wireshark.org/">Wireshark</a> (network protocol analyzer)</li><li><a href="https://cyberduck.io/">Cyberduck</a> (libre server and cloud storage browser)</li><li><a href="https://www.teamviewer.com/en/">TeamViewer</a> (remote control)</li></ul></li></ol><br><ol start="6"><li><p>笔记:</p><ul><li><strong>备忘录.app</strong></li><li>文本编辑.app (.txt)</li><li>Sublime (.md)</li></ul></li></ol><br><ol start="7"><li><p>文档</p><ul><li>预览.app</li><li>iWork [App Store]</li><li><a href="https://www.wps.cn/"><strong>WPS Office</strong></a> [App Store]</li><li><a href="https://pdfexpert.com/">PDF Expert</a> (PDF工具)</li><li><a href="https://www.toketaware.com/">iThoughtsX</a> (思维导图)<br>&nbsp;</li><li><a href="https://www.pixelmator.com/pro/"><strong>Pixelmator Pro</strong></a> (<del>Adobe Photoshop</del>) (干掉PS之后，达成「软件全部正版化」成就😌) [App Store]</li><li>GarageBand [App Store]</li><li>iMovie [App Store]</li><li><a href="https://handbrake.fr/">HandBrake</a> (视频转码)</li></ul></li></ol><br><ol start="8"><li><p>影音娱乐</p><ul><li>照片.app (iCloud的核心)</li><li><a href="https://www.apple.com/itunes/"><del>iTunes</del></a></li><li>音乐.app</li><li>播客.app</li><li><strong>QQ音乐</strong> (MAS版本也可以使用媒体键) [App Store]<br>&nbsp;</li><li>腾讯视频 [App Store]</li><li>优酷 [App Store]</li><li>爱奇艺 [App Store]<br>&nbsp;</li><li><a href="http://www.videolan.org/">VLC</a> (播放器)</li><li><a href="https://github.com/iina/iina">IINA</a> (播放器)</li><li><a href="https://obsproject.com/zh-cn">OBS</a> (直播串流和录屏)</li><li>QuickTime Player<br>&nbsp;</li><li><a href="https://openemu.org/">OpenEmu</a>(Experimental) (video game emulation)</li><li><a href="https://store.steampowered.com/">Steam</a><ul><li><a href="https://www.wesnoth.org/">The Battle for Wesnoth</a> (turn-based strategy game with a high fantasy theme) [App Store]</li></ul></li></ul></li></ol><br><ol start="9"><li><p>工具</p><ul><li><a href="https://weixin.qq.com/">微信</a> [App Store]</li><li><a href="https://im.qq.com/">QQ</a> [App Store]</li><li><a href="https://www.feishu.cn/">飞书</a> (邮箱和个人项目管理)</li><li><a href="https://ranchero.com/netnewswire"><strong>NetNewsWire</strong></a> (RSS阅读器)<br>&nbsp;</li><li><a href="https://www.keka.io/zh-cn"><strong>Keka</strong></a> (压缩软件) (MAS版本支持一下) [App Store]</li><li>Amphetamine (Keep Mac awake) [App Store]</li><li><a href="https://freemacsoft.net/appcleaner">AppCleaner</a> (卸载工具)</li><li><a href="https://github.com/MonitorControl/MonitorControl">MonitorControl</a> (外接显示器工具)<br>&nbsp;</li><li><a href="https://github.com/ykqmain?tab=stars"><strong><em>其他软件</em></strong></a></li></ul></li></ol><br><p><strong>如无必要，勿增实体。要钱没有，一切从简。</strong><br><a href="https://github.com/ykqmain/Config"><strong><font color="#ffc0cb"><u>myConfig</u></font></strong></a></p><br><h2 id="推荐一件生活中的利器"><a href="#推荐一件生活中的利器" class="headerlink" title="推荐一件生活中的利器"></a>推荐一件生活中的利器</h2><p>生活不可无书，一手书香、一手MacBook，世界尽在掌中。</p><p>推荐一套对我影响较深的书：</p><img src="https://ianna.oss-cn-hangzhou.aliyuncs.com/liqi/sj.jpeg!sy" width="720"><blockquote><p>天下熙熙，皆为利来；天下攘攘，皆为利往。</p></blockquote><p><br><br></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天看到一个有意思的项目 &lt;a href=&quot;http://liqi.io/community&quot;&gt;利器社群计划&lt;/a&gt; ，借此机会，我也分享一下自己使用的一些小工具……&lt;/p&gt;
&lt;p&gt;&lt;mark&gt;&lt;em&gt;&lt;strong&gt;Update: 2022-01&lt;/strong&gt;&lt;/em</summary>
      
    
    
    
    <category term="计算机" scheme="https://blog.ykqmain.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="工具" scheme="https://blog.ykqmain.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
    <category term="SoftWare" scheme="https://blog.ykqmain.com/tags/SoftWare/"/>
    
    <category term="Apple" scheme="https://blog.ykqmain.com/tags/Apple/"/>
    
    <category term="Mac" scheme="https://blog.ykqmain.com/tags/Mac/"/>
    
    <category term="macOS" scheme="https://blog.ykqmain.com/tags/macOS/"/>
    
    <category term="iPhone" scheme="https://blog.ykqmain.com/tags/iPhone/"/>
    
    <category term="iOS" scheme="https://blog.ykqmain.com/tags/iOS/"/>
    
    <category term="APP" scheme="https://blog.ykqmain.com/tags/APP/"/>
    
  </entry>
  
  <entry>
    <title>第一个网页</title>
    <link href="https://blog.ykqmain.com/hello/"/>
    <id>https://blog.ykqmain.com/hello/</id>
    <published>2015-11-24T16:00:00.000Z</published>
    <updated>2022-01-17T14:41:10.619Z</updated>
    
    <content type="html"><![CDATA[<p>已拥有一台服务器，系统为 CentOS 6。</p><ul><li><p>打开<code>终端</code>，登录服务器：<code>ssh -p 端口 root@IP</code></p></li><li><p>输入密码</p></li></ul><span id="more"></span><br><h2 id="安装Apache"><a href="#安装Apache" class="headerlink" title="安装Apache"></a>安装Apache</h2><ol><li><p>安装方式<br>CentOS安装Apache服务可以有两种方式，一种是用yum安装，一种是从官网下载源代码进行安装。这里使用yum安装。</p></li><li><p>输入<code>sudo yum install httpd -y</code><br>（采用该方式进行安装配置文件的默认路径为：<code>/etc/httpd/conf/httpd.conf</code>）</p></li><li><p>编辑配置文件，输入<code>vi /etc/httpd/conf/httpd.conf</code></p></li><li><p>找到如下内容<code>#ServerName www.example.com:80</code>，改为<code>ServerName localhost:80</code></p></li><li><p>重启一下Apache，<code>service httpd restart</code>即可。</p><p>常见Apache操作：</p><ul><li><code>service httpd start</code> 启动</li><li><code>service httpd stop</code> 停止</li><li><code>service httpd restart</code> 重启</li><li><code>service httpd status</code>  状态</li></ul></li><li><p>测试是否安装成功，在本地的浏览器中输入<code>http://IP</code> ，如果出现 <code>Apache 2 Test Page powered by CentOS</code>，说明成功。</p><p>如果出现错误，那就可能是iptables的问题：</p><p>编辑 iptables配置，<code>vi /etc/sysconfig/iptables</code> ，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT</span><br><span class="line">-A INPUT -m state --state NEW -m tcp -p tcp --dport 443 -j ACCEPT</span><br></pre></td></tr></table></figure><p>然后重启iptables、Apache。</p><p>常见iptables操作：</p><ul><li><code>service iptables status</code> 查看当前规则</li><li><code>service iptables restart</code> 重启</li><li><code>service iptables stop</code> 禁用</li></ul></li></ol><p><strong>最后设置Apache开机自启 <code>chkconfig iptables on </code></strong></p><p>//参考：<a href="http://www.linuxidc.com/Linux/2014-01/95256.htm">CentOS Apache服务器安装与配置</a><br><br></p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><ol><li><p>安装方式<br>仍然是通过yum安装，查看版本信息<code>yum list | grep mysql</code> ，安装<code>yum install -y mysql-server mysql mysql-deve</code> ，查看安装好的版本<code>rpm -qi mysql-server</code> 。</p></li><li><p>通过<code>service mysqld start</code> 命令启动mysql服务。</p></li><li><p>第一次会提示很多信息，重启mysql <code>service mysqld restart</code></p></li><li><p><strong>最后设置MySQL开机自启 <code>chkconfig mysqld on</code></strong><br>（配置文件在 <code>/etc/my.cnf</code>）</p><br></li></ol><hr><br><p>回到本地，编辑或创建一个名为 <code>index.html</code> 的文件，这个HTML文件就是首页。HTML中的多媒体的路径要用<strong>服务器上的相对路径</strong>或者<strong>外链</strong>。</p><p><strong>将这个<code>index.html</code>送到服务器上的<code>/var/www/html</code>目录下即可</strong>，在本地和服务器传文件有很多方法，比如：scp、ftp、sftp…</p><ul><li>scp的方法：<code>scp -P 端口 本地文件路径 root@IP:服务器路径</code></li></ul><p>在浏览器输入服务器IP或者域名就可以看到最新效果。<br><br></p><p><strong>Enjoy it!</strong></p><p><br><br></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;已拥有一台服务器，系统为 CentOS 6。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;打开&lt;code&gt;终端&lt;/code&gt;，登录服务器：&lt;code&gt;ssh -p 端口 root@IP&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入密码&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="计算机" scheme="https://blog.ykqmain.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
    <category term="Linux" scheme="https://blog.ykqmain.com/tags/Linux/"/>
    
    <category term="Web" scheme="https://blog.ykqmain.com/tags/Web/"/>
    
    <category term="Apache" scheme="https://blog.ykqmain.com/tags/Apache/"/>
    
    <category term="服务器" scheme="https://blog.ykqmain.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
</feed>
